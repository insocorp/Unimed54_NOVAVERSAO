/*

Project      : gr5
Program      : mnt.pasta.html
Function     : mnt_pasta_html
Created on   : 26-Oct-2001   08:57:51
Descripition : Manutenção de Pastas
Funcoes      : atualiza_pasta_lits
               sincroniza_pasta
               deleta_cips
               monta_cip_filho
Alterações : Sonia Perdigão 17/12/2010 17:11:27
             Ajuste Gravação de Alçada no Template Procuração2
*/
   /*
   *  parameters pcNR_PASTA,pcACTION,pcABA,plPRE
   *  pcNR_PASTA .: Nmero da Pasta
   *  pcACTION ...: Aï¿½o a executar
   *  pcABA ......: Sub-layout. Alguns layouts sï¿½ divididos em vï¿½ios sub-layouts.
   *                Exemplo: mnt.pasta.civel.execucao.html, basta passar o parametro "execucao"
   *  plPRE ......: Pre-Cadastro?
   *  19/2/2009 17:27:49 - Troca do combo fixo UF para tabela estados - Sonia Perdigão
   */

   *** rufino 29/04/2015 21:09:00
   public pcCONTXGRP     :='N'
   public pnWUID         := 0

   public pcLAYOUT_PASTA := ''

   private pcUSER_INTERFACE := ''

   local lcACTION          := '' ,;
         lcWHERE           := '' ,;
         lcWHEREO          := '' ,;
         lcWHEREUSO        := '' ,;
         lcNR_PASTA        := '' ,;
         lcVALIDA          := '' ,;
         lcVAL_CAMPOS      := '' ,;
         lcRelac           := '' ,;
         lcCONTEUDO        := '' ,;
         lcERROR_MENS      := '' ,;
         lcCIP_EMPRESA     := '' ,;
         lcCIPS            := '' ,;
         lcLOGIN           := '' ,;
         lcDATA            := '' ,;
         lcFL_TT_LITSANTES := '' ,;
         lcITEM            := '' ,;
         lcTP_PASTA        := '' ,;
         lcPFPJ_ATIV       := '' ,;
         xvalida           := '' ,;
         lcWHERER          := '' ,;
         lcTABLE           := '' as string

   local laRESULT      := {} ,;
         laRES         := {} ,;
         laRES_PEDIDO  := {} ,;
         laRES_ACOES   := {} ,;
         laSAVE        := {} ,;
         laSAVE_AUX    := {} ,;
         laDELETE      := {} ,;
         laPUT         := {} ,;
         laAUX         := {} ,;
         laWHERE       := {} ,;
         laVALIDA      := {} ,;
         laFIND_REC    := {} ,;
         laVAL_LITS    := {} ,;
         laVAL_ABAS    := {} ,;
         laVAL_CAMPOS  := {} ,;
         laPRC_PODER   := {} ,;
         laCIP         := {} ,;
         laABAS        := {} ,;
         laVALIDA_OBJETO :={},;
         laFIELDS      := {} ,;
         laFIELDSW     := {} ,;
         laFIELDS_AUX  := {} ,;
         laTP_PODER    := {} ,;
         laDESC_PODER    := {} ,;
         laFIELDSR     := {} ,;
         laDIFFROW     := {} ,;
         laPastaConfig := {} as array


   local ii         := 0 ,;
         jj         := 0 ,;
         lnPOS      := 0 as int

   local lnVL_TOTAL    := 0.00 ,;
         lnVL_PROVISAO := 0.00 as numeric

   local LOJA_ORIGEM    := 0 as int
   local LOJA_NOME      := '' as string
   local lcTIPOPFPJ := '' as string
   local lcUSOEXCLUSIVO := '' as string
   local luCONTEUDO
   local llERROR        := .f. as logical
   local lldel          := .t. as logical
   local lnCodigo       := 0 as int
   local lnQtde         := 0 as int
   local lntotal_quotas := 0 as int
   local lntotal1       := 0 as int
   local lnPORCENTAGEM  := 0.00 as numeric 
// Glauber 20/03/2012
   local llNovaPasta    := .f.





  //Exibe os botÃµes permitidos
   if gbWAC_CREATE
      WPut('ifWAC_CREATE',.t.)
      WPut('ifBTN_SAVE',.t.)
   endif
   if gbWAC_DELETE
      WPut('ifWAC_DELETE',.t.)
   endif
   if gbWAC_WRITE
      WPut('ifWAC_WRITE',.t.)
      WPut('ifBTN_SAVE',.t.)
   endif
   


//wout('<br><b>Passei por aqui, setar o botão salvar.(117)')
//wput('ifWAC_WRITE' ,.t.)

   if plPRE == nil
      plPRE := .f.
   endif

   lcACTION   := iif(!empty(pcACTION),alltrim(pcACTION),upper(alltrim(WGet('ACTION','C'))))
   lcNR_PASTA := iif(!empty(pcNR_PASTA),alltrim(pcNR_PASTA),alltrim(WGet('NR_PASTA','C')))
   lcTP_PASTA := alltrim(WGet('TP_PASTA','C'))

   if lower(lcNR_PASTA) == 'new' .or. empty(lcNR_PASTA)
      lcNR_PASTA := '0'
   endif

 
   /* Dados de pasta_config */
   if empty(lcTP_PASTA)
      if db_select({'pasta_config.VALIDA_CAMPOS','pasta_config.VERIFICA_CAMPOS','pasta_config.LITS_CAMPOS_NAOCOMUM','pasta_config.LITS_ABAS_NAOCOMUM','pasta_config.LAYOUT_PASTA','pasta.TP_PASTA'},'pasta,pasta_config',,{'pasta.NR_PASTA='+lcNR_PASTA,'pasta_config.TP_PASTA=pasta.TP_PASTA'}) = -1
         error_sys(db_error())
      endif
   else
      if db_select({'VALIDA_CAMPOS','VERIFICA_CAMPOS','LITS_CAMPOS_NAOCOMUM','LITS_ABAS_NAOCOMUM','LAYOUT_PASTA'},'pasta_config',,{'TP_PASTA='+DLAP+lcTP_PASTA+DLAP}) = -1
         error_sys(db_error())
      endif
   endif
    
   laPastaConfig:= db_fetchrow()
   if len(laPastaConfig) > 0
      pcLAYOUT_PASTA := laPastaConfig[5]
      if empty(lcTP_PASTA)
         lcTP_PASTA := laPastaConfig[6]
      endif

   else
      walert('Pasta inexistente!')
      WSet('_USER_INTERFACE','lst.pasta.html')
      lst_pasta_html()
      return(.f.)
   endif

   wac_tp_pasta(lcTP_PASTA) // FunÃ§Ã£o para verificaÃ§Ã£o de permissÃµes por pasta, encontra-se na func.wic

 //------------------------------------------------------------------------------------
     /* Campo objeto   e Familia X Causa Ação*/

    
     if db_select({'VALIDA_OBJETO'},'pasta_config',,{'TP_PASTA='+DLAP+lcTP_PASTA+DLAP}) == -1
        error_sys(db_error())
     endif

     laRESULT := db_fetchall()
			 
      IF len(laresult) > 1
        if laRESULT[2,1] = 'Y'
           WPut('ifOBJETO',.T.)
           WPut('ifOBJ',.F.)
        else
           WPut('ifOBJ',.T.)
           WPut('ifOBJETO',.F.)
       endif
      else
          walert('Sem permissão para leitura')
         WSet('_USER_INTERFACE','lst.pasta.html')
         lst_pasta_html()
         return (.f.)
      endif   

     if db_select({'FL_FAMILIA_CAUSA'},'pasta_config',,{'TP_PASTA='+DLAP+lcTP_PASTA+DLAP}) == -1
        error_sys(db_error())
     endif
     laRESULT := db_fetchall()
			 
      IF len(laresult) > 1
        if laRESULT[2,1] = 'S'
           WPut('ifFAMILIA',.T.)
           WPut('ifCAUSA',.F.)
        else
           WPut('ifFAMILIA',.F.)
           WPut('ifCAUSA',.T.)
       endif
     endif   

     if db_select({'FL_DEPOSITO1'},'pasta_config',,{'TP_PASTA='+DLAP+lcTP_PASTA+DLAP}) == -1
        error_sys(db_error())
     endif
     laRESULT := db_fetchall()

      IF len(laresult) > 1
        if laRESULT[2,1] = 'S'
           WPut('ifDEPOSITO',.T.)

           if db_select({'TT_DEPOSITO','TT_POSSIVEL','TT_PROVAVEL','TT_REMOTA'},'vw_tt_est_geral',,{'NR_PASTA='+DLAP+lcNR_PASTA+DLAP}) == -1
              error_sys(db_error())
           endif
           laREVIEW := db_fetchall()
           IF len(laREVIEW) > 1
              WPut('TT_DEPOSITO',laREVIEW[2,1])
              WPut('TT_POSSIVEL',laREVIEW[2,2])
              WPut('TT_PROVAVEL',laREVIEW[2,3])
              WPut('TT_REMOTA',laREVIEW[2,4])
           ENDIF
        else
           WPut('ifDEPOSITO',.F.)
       endif
     endif

    /* Controle de Acesso */
   //Se estiver carregando uma Pasta
   if ! empty(lcNR_PASTA) .and. (lcACTION == 'ALTER' .or. empty(lcACTION))
      if ! gbWAC_READ
         walert('Sem permissão para leitura')
         WSet('_USER_INTERFACE','lst.pasta.html')
         lst_pasta_html()
         return (.f.)
      endif

   endif

      if empty('CONSULTA') .OR. alltrim('CONSULTA') == '' .OR. lcACTION == 'NEW'
            WPut('ifNEW',.T.)
            WPut('ifALTER',.F.)
            *WPut('CONSULTA.label.style.color','#FF0000')
            *WPut('CONSULTA.label.style.font-weight','bold')
            WPut('CONSULTA.style.border','2px solid red')
            WPut('ifNORMAL',.T.)
            WPut('ifABERTO',.F.)
      ELSE
            WPut('ifNEW',.F.)
            WPut('ifALTER',.T.)
            Wput('RESPOSTA',wget('RESPOSTA','C'))
      endif

   //Se estiver sendo criada uma nova pasta - db_insert()
//   debug2(lcaction)
//   debug2(lcnr_pasta)
   if lcACTION == 'SAVE' .and. val(lcNR_PASTA) == 0
      if ! gbWAC_CREATE
         walert('Sem permissão para Criação')
         WSet('_USER_INTERFACE','lst.pasta.html')
         lst_pasta_html()
         return (.f.)
      endif
      // Glauber 20/03/2012
      llNovaPasta    := .t.
   endif




   lcWHERE   := 'NR_PASTA = '+lcNR_PASTA
   lcTABLE   := 'pasta'
   lcWHEREO      := 'pasta_outraspartes.NR_PASTA = '+lcNR_PASTA+;
                   ' and pasta_outraspartes.NR_PASTA_POSICAO_FILHO > 0'

   /* Define Layout e Abas de acordo com TP_PASTA */
   layout_pasta(lcTP_PASTA, iif(plPRE,'pasta_pre','pasta') ,.F.,pcABA)
   pcUSER_INTERFACE := WSet('_USER_INTERFACE')

   /* Pegando Lista de Campos de wprogram */
   laAUX    := wmd_program(pcUSER_INTERFACE)
   if len(laAUX) > 0
      laPUT := str2array(laAUX[10],',')
   else
      error_sys('mnt_pasta_html: Template '+pcUSER_INTERFACE+' nÃ£o encontrado na tabela wprogram. Template inexistente ou tabela wprogram invÃ¡lida.')
   endif
   for ii := 1 to len(laPUT)
      if substr(laPUT[ii],1,at('.',laPUT[ii])-1) == 'pasta'
         aadd(laFIELDS,substr(laPUT[ii],at('.',laPUT[ii])+1))
      endif
   next ii
   laPUT := {}
   laAUX := {}

   // Glauber 04/01/2011
   // Renomear os campos de acordo com tipo de pasta e perfil do usuário

   AbasPerfil(lcTP_PASTA, laFIELDS)
   // Glauber 31/01/2011
   // Carga dos campos CIP_*
   AbasPerfil(lcTP_PASTA, {'CIP_ADMINISTRADOR',;
                           'CIP_ADVOGADO_BAIXA_PFPJ',; 	
                           'CIP_ADVOGADO_EXTERNO',; 	
                           'CIP_ADVOGADO_EXTERNO_PFPJ',; 	
                           'CIP_ADVOGADO_INTERNO',; 	
                           'CIP_ADVOGADO_INTERNO_PFPJ',; 	
                           'CIP_ADVOGADO_RESPONSAVEL',;
                           'CIP_AGENTE',;
                           'CIP_AGENTE_INTERNACIONAL',; 	
                           'CIP_ANALISTA_RESPONSAVEL',;
                           'CIP_ASSISTENTE_ACUSACAO',; 	
                           'CIP_ASSISTENTE_TECNICO',; 	
                           'CIP_ATENDENTE',; 	
                           'CIP_AUTORIZADO_POR',;
                           'CIP_AUTUADO',; 	
                           'CIP_AUTUANTE',; 	
                           'CIP_BENEFICIARIO',;
                           'CIP_CARTORIO',; 	
                           'CIP_CIA',;
                           'CIP_COMPRADOR',; 	
                           'CIP_CONDOMINIO',; 	
                           'CIP_CONFIG',; 	
                           'CIP_CONSELHEIRO',; 	
                           'CIP_CONSULENTE',; 	
                           'CIP_CONTATO',; 	
                           'CIP_CONTRATADO',; 	
                           'CIP_CONTRATANTE',; 	
                           'CIP_CONTRATANTE_PFPJ',; 	
                           'CIP_CONTRATO_CONFIDENC_PARA',; 	
                           'CIP_CONTRATO_EXCLUSIV_PARA',; 	
                           'CIP_CORRETOR',; 	
                           'CIP_COTITULAR',; 	
                           'CIP_DEVEDOR',; 	
                           'CIP_DIRETOR',;
                           'CIP_DIRETORIA',; 	
                           'CIP_DISTRIB_PARA',; 	
                           'CIP_ELABORADO_POR',; 	
                           'CIP_EMPRESA',; 	
                           'CIP_EMPRESACONGENERE',; 	
                           'CIP_EMPRESA_CD_GRP_ECONOMICO',;	
                           'CIP_EMPRESA_LIDER',; 	
                           'CIP_EMPRESA_NM_GRP_ECONOMICO',; 	
                           'CIP_EMPRESA_PFPJ',; 	
                           'CIP_EMPRESA_PAGADORA',;
                           'CIP_ESCRITORIO',;
                           'CIP_ESCRITORIO_PFPJ',; 	
                           'CIP_ESTIPULANTE',; 	
                           'CIP_FAVORECIDO',; 	
                           'CIP_FAVORECIDO_PFPJ',;
                           'CIP_FILIAL',; 	
                           'CIP_FILIAL_ATEND',; 	
                           'CIP_FILIAL_PFPJ',; 	
                           'CIP_GERENTE',; 	
                           'CIP_GESTOR_INTERNO',; 	
                           'CIP_GESTOR_INTERNO2',;
                           'CIP_GESTOR_SOCIETARIO',;
                           'CIP_GESTOR_UNIDADE',;
                           'CIP_IMOBILIARIA',;
                           'CIP_LICENCIADO',;
                           'CIP_LOCADOR',;
                           'CIP_LOCATARIO',;
                           'CIP_LOJA_ORIGEM_PROBLEMA',;
                           'CIP_MENOR_ASSISTIDO',;
                           'CIP_OFICIAL_JUSTICA',;
                           'CIP_OUTORGADO',;
                           'CIP_OUTORGANTE',;
                           'CIP_PARTE',;
                           'CIP_PARTE_CONTRARIA',;
                           'CIP_PARTE_CONTRARIA_PFPJ',;
                           'CIP_PERITO',;
                           'CIP_PESSOA_FISICA',;
                           'CIP_PESSOA_JURIDICA',;
                           'CIP_PESSOA_NOTIFICADA',;
                           'CIP_PESSOA_NOTIFICADA_ENDERECO',;
                           'CIP_PROCURADOR',;
                           'CIP_PRORROGACAO',;
                           'CIP_PROTOCOLADOR',;
                           'CIP_RECLAMANTE',;
                           'CIP_RELATOR',;
                           'CIP_REPRESENTANTE',;
                           'CIP_RESPONSAVEL_BAIXA',;
                           'CIP_RESPONSAVEL_CONTATO',;
                           'CIP_SEGURADO',;
                           'CIP_SEGURADORA_ATUAL',;
                           'CIP_SOCIO_ACIONISTA',;
                           'CIP_SOLICITANTE',;
                           'CIP_SUPAREASOLICITANTE',;
                           'CIP_SUPERINTENDENTE',;
                           'CIP_TECNICOSINISTRO',;
                           'CIP_TITULAR',;
                           'CIP_TRANSFERENCIA',;
                           'CIP_VITIMA',;
                           'CIP_RESPONSAVEL'})

// Sonia - 20/10/2016 15:50:14
// Customização Prudential - Contrato 4
// Vendor em I.P.
  if (pcUSER_INTERFACE == 'mnt.pasta.contrato4.html')
 //     if lower(fcNR_PASTA) == 'new' .or. empty(fcNR_PASTA) 
 //        enchecombos(lcNR_PASTA)
 //     else
         enchecombos(lcNR_PASTA)
         busca_lancto(lcNR_PASTA)
         get2put()
 //     endif
   endif

// Inicio carga 
lcNR_CONTROLE := WGet('NR_CONTROLE','C')
lcTIPO_VENDOR := WGet('TIPO_VENDOR','C')
lcNR_ADITIVO  := WGet('NR_ADITIVO','C')
lcLOGIN       := WGet('LOGIN_CADASTRO','C')
ldDT_CADASTRO := WGet('DT_CADASTRO','D')
lcRESP1       := WGet('RESPOSTA1','C')
lcRESP2       := WGet('RESPOSTA2','C')
lcRESP3       := WGet('RESPOSTA3','C')
lcRESP4       := WGet('RESPOSTA4','C')
lcRESP5       := WGet('RESPOSTA5','C')
lcRESP6       := WGet('RESPOSTA6','C')
lcRESP7       := WGet('RESPOSTA7','C')
lcRESC        := WGet('RESULTADO_CONTRATO','C')
lcOBSERVACAO  := WGet('OBSERVACAO','C')

lcIMPACTO            := WGet('IMPACTO','C')
lcDIMENSAO           := WGet('DIMENSAO','C')
lcCRITICIDADE        := WGet('CRITICIDADE','C')
lc4ESPECIFICAR       := WGet('ESPECIFICAR4','C')
lc5ESPECIFICAR       := WGet('ESPECIFICAR5','C')
lc6ESPECIFICAR       := WGet('ESPECIFICAR6','C')
lc7ESPECIFICAR       := WGet('ESPECIFICAR7','C')
lcCIP_EMPRESA_GRUPO  := WGet('CIP_EMPRESA_GRUPO','C')
lcMOTIVO_VENDOR      := WGet('MOTIVO_VENDOR','C')

lcFL_RETROAGIU    := WGet('FL_RETROAGIU','C')
lcFL_FCPA         := WGet('FL_FCPA','C')
lcFCPA_NR         := WGet('FCPA_NR','C')
lcFL_SLA          := WGet('FL_SLA','C')
lcSLA_NR          := WGet('SLA_NR','C')
lcFL_KPI          := WGet('FL_KPI','C')
lcKPI_NR          := WGet('KPI_NR','C')
lcFL_ISSUE_TRACK  := WGet('FL_ISSUE_TRACK','C')
lcISSUE_TRACK_NR  := WGet('ISSUE_TRACK_NR','C')
lcFL_ISQ          := WGet('FL_ISQ','C')
lcFL_BCQ          := WGet('FL_BCQ','C')
lcCONCLUSAO       := WGet('CONCLUSAO','C')
lcCLASS2          := WGet('CLASS2','C')
lcCLASS           := WGet('CLASS3','C')


lcCOMPLIANCE      := WGet('COMPLIANCE','C')
lcDESC_KEY_VENDOR := WGet('RESKEYVENDOR','C')
lcDECL_PEP        := WGet('DECL_PEP','C')
lcCIP_EMP_PEP     := WGet('CIP_EMP_PEP','C')

lcCRI_VEN         := WGet('CRI_VEN','C')
lcRIS_RAT         := WGet('RIS_RAT','C')

lcDT_ASSINATURA2  := WGet('DT_ASSINATURA2','D')
lcFL_RETROAGIU    := WGet('FL_RETROAGIU','C')
lcDT_ISQ          := WGet('DT_ISQ','D')
lcDT_BCQ          := WGet('DT_BCQ','D')
lcDT_PIA          := WGet('DT_PIA','D')


// termino carga - Contrato4
// Glauber 15/12/2014
//
// Se o template for contrato3, adicionar os campos das tabelas pasta_alocada e sla_analitico
//

      if (pcUSER_INTERFACE == 'mnt.pasta.contrato3.html')
         AbasPerfil(lcTP_PASTA, structtable(WSet("DB_ACTIVE"),'pasta_alocada',1,'A'))
         AbasPerfil(lcTP_PASTA, structtable(WSet("DB_ACTIVE"),'sla_analitico',1,'A'))

         *** rufino 29/04/2015 20:52:57
         contporgrp()
      endif

   *pscc(lcTP_PASTA,laFIELDS) // Carregar combox do layout especifico

   /* Combos/checkboxes Fixos */
   WPut('EXCLUSIVIDADE_OPT',{'','SIM','NAO'})
   WPut('CONFIDENCIALIDADE_OPT',{'','SIM','NAO'})
   WPut('ARBITRAGEM_OPT',{'','SIM','NAO'})
   WPut('REFERENTE_OPT',{'','Confidencialidade','Exclusividade','Vigencia do Contrato'})
   WPut('POSICAO_CLIENTE_CONTRATO_OPT',{'','Contratante','Contratado'})
   WPut('MARCA_NATUREZA_OPT',{'','Mista','Nominativa'})
   WPut('MARCA_ORIGEM_OPT',{'','Nacional','Internacional','Nacional / Internacional'})
   WPut('FL_AUDIENCIA_OPT','Y')
   WPut('FL_TERCEIRO_OPT','Y')
   WPut('FL_TT_LITSCONSORTE_OPT','Y')
   WPut('FL_LICUSO_OPT','Y')
   WPut('FL_PASSRECFENASEG_OPT','Y')
   WPut('FL_PASSRECIRB_OPT','Y')

   WPut('FL_TERCEIRO.option','Y')
   WPut('FL_TT_LITSCONSORTE.option','Y')
   WPut('FL_KEY_VENDOR.option','Y')

   WPut('R4_OPT',{'','SIM','NAO'})   
   WPut('R5_OPT',{'','SIM','NAO'})
   WPut('R6_OPT',{'','SIM','NAO'})
   WPut('FL_PROBABILIDADE_OPT',{'','SIM','NAO'})
   WPut('FL_INFORMACOES_OPT',{'','SIM','NAO'})
   WPut('FL_GESTOR_OPT',{'','SIM','NAO'})
   
// BIOSEV - 30/01/2015 09:52:28
   WPut('FL_PED_INDENIZA_OPT','Y')

// CUSTOMIZAÇÃO CARDIF - 26/02/2013 11:33:26 - SONIA
   WPut('ACAO_JUDICIAL_OPT',{'','SIM','NAO'})
   WPut('PLANO_ACAO_OPT',{'','SIM','NAO'})

// sonia - 27/06/2013 14:53:00
// Customização VPar - Solicitante : Alexandre
   WPut('FLUXO_CAIXA.option',{'Não','Sim'})
   WPut('FLUXO_CAIXA.optionvalue',{'N', 'S'})

// Glauber 16/10/2010 - foi criado o cadastro no menu operacional
// opção FNP
//   WPut('FNP_OPT',{'','SIM','NAO'})

// Sonia 29/09/2014 10:15:25
//BIOSEV
//   WPut('CONTA_GRAFICA_OPT',{'','SIM','NAO'})
// Customização VPar - Solicitante : Alexandre
   WPut('CONTA_GRAFICA.option',{'','Não','Sim'})
   WPut('CONTA_GRAFICA.optionvalue',{'','N', 'S'})

   *** marca em vermelho campos obrigatorios
   *templace = civel_cont
   *init2_reqfield(WSet('_USER_INTERFACE'),{'LBL_POSICAO_EMPRESA'})
// Sonia - Customização Suzano 
// 22/08/2016 16:21:02
   WPut('ESCOPO_TECNICO.option',{'','Não','Sim'})
   WPut('ESCOPO_TECNICO.optionvalue',{'','N', 'S'})

// sonia - 11/05/2016 15:15:37
// Customização Prudential

   WPut('ARQUIVO_PEP_OPT',{'','SIM','NAO'})

   WPut('VERIF_PEP_OPT',{'','SIM','NAO'})

   WPut('INFORM_PATRIMONIAIS_OPT',{'','SIM','NAO'})

// Customização Prudential Fase 2
   WPut('N1_OPT',{'','SIM','NAO'})
   WPut('N2_OPT',{'','SIM','NAO'})
   WPut('N3_OPT',{'','SIM','NAO'})
   WPut('N4_OPT',{'','SIM','NAO'})
   WPut('N5_OPT',{'','SIM','NAO'})
   WPut('N6_OPT',{'','SIM','NAO'})            

   WPut('RESULT_VERIF_PEP_OPT',{'','Positivo','Negativo'})

   WPut('CLASS2.option',{'','Impacto ao Cliente','Impacto ao Negócio'})
   WPut('CLASS2.optionvalue',{'','Impacto ao Cliente','Impacto ao Negócio'})

    pscc(lcTP_PASTA,laFIELDS) // Carregar combox do layout especifico

   /* Deixa campos ObrigatÃ³rios em vermelho na tela e verifica se Tipo de Pasta estÃ¡ cadastrado */
   if lcACTION != 'DELETE'

      if ! empty(alltrim(laPastaConfig[1]))
         laPUT := str2array(laPastaConfig[1],',')
         if len(laPUT) > 0
            for ii:= 1 to len(laPUT)

                *WPut(laPUT[ii]+'.label.style.color','#FF0000')
                *WPut(laPUT[ii]+'.label.style.font-weight','bold')

                WPut(laPUT[ii]+'.style.border','2px solid red')

            next ii
         endif
      endif

      if ! empty(alltrim(laPastaConfig[2]))
         laPUT := str2array(laPastaConfig[2],',')
         if len(laPUT) > 0
            for ii:= 1 to len(laPUT)

                *WPut(laPUT[ii]+'.label.style.color','#FF0000')
                *WPut(laPUT[ii]+'.label.style.font-weight','bold')

                WPut(laPUT[ii]+'.style.border','2px solid red')

            next ii
         endif
      endif
   endif


   /* Definindo os Campos (Readonly) */
   WPut('DT_CADASTRO.readonly',.T.)
   WPut('DT_CADASTRO.class','winputreadonly')
// sonia - Projeto LDC - 12/11/2014 11:35:53
   WPut('HR_CADASTRO.readonly',.T.)
   WPut('HR_CADASTRO.class','winputreadonly')
   WPut('LOGIN_CADASTRO.readonly',.T.)
   WPut('LOGIN_CADASTRO.class','winputreadonly')
   WPut('LOGIN_APROVACAO.readonly',.T.)
   WPut('LOGIN_APROVACAO.class','winputreadonly')
   WPut('DT_APROVACAO.readonly',.T.)
   WPut('DT_APROVACAO.class','winputreadonly')
   WPut('LOGIN_REJEICAO.readonly',.T.)
   WPut('LOGIN_REJEICAO.class','winputreadonly')
   WPut('DT_REJEICAO.readonly',.T.)
   WPut('DT_REJEICAO.class','winputreadonly')
   WPut('PROCURACAO_CLAUSULA_TEXTO.readonly',.T.)
   WPut('PROCURACAO_CLAUSULA_TEXTO.class','winputreadonly')
   
   /* Definindo quantidade de linhas iniciais aos Textareas */
   WPut('OBJETO_ROWS','6')
   WPut('RESUMO_ACAO_ROWS','6')
   WPut('EMENTA_ROWS','6')
   WPut('EXTRA_ROWS','6')
   WPut('ACORDAO_ROWS','6')
   WPut('PROCURACAO_CLAUSULA_TEXTO_ROWS','6')

// ALTERAÇÃO SOLICITADA PARA O TEMPLATE SOCIETARIO VPAR
// SONIA - 11/11/2010 16:33:20   
   WPut('FORMA_ATUACAO_ROWS','2')


   if lcACTION == 'NEW'
      if pcUSER_INTERFACE == 'mnt.pasta.contrato_locacao_imovel.html' .or. ;
         pcUSER_INTERFACE == 'mnt.pasta.contrato_prestacao_servico.html' .or. ;
         pcUSER_INTERFACE == 'mnt.pasta.pasta_pfpj.html'

         if ! gbWAC_CREATE .and. ! plPRE
            pasta_pre_html() //chama pre-cadastro
            return (.f.)
         endif
      endif

      WPut('NR_PASTA','New')

      WPut('TITLE',lcTP_PASTA+' - Inclusão de nova Pasta')

      WPut('TP_PASTA',lcTP_PASTA)
      WPut('DT_CADASTRO',date())
      WPut('HR_CADASTRO',time())
      WPut('LOGIN_CADASTRO',gcLOGIN)


// alterado Sonia em 10/06/2015 14:24:57 - alterando o templante contrato
 //     WPut('CIP_SOLICITANTE',gcLOGIN)

// Glauber 16/15/2014
// Correção conforma solicitação da Célia.
      if (pcUSER_INTERFACE != 'mnt.pasta.contrato3.html')
         WPut('DT_APROVACAO',date())
         WPut('LOGIN_APROVACAO',gcLOGIN)
      ELSE
         WPut('CIP_SOLICITANTE',gcLOGIN)
      endif

      if (pcUSER_INTERFACE == 'mnt.pasta.contrato3.html')

         if db_select({'acuser.cip','pfpj.pfpj'},;
                      'acuser',;
                      {{ 2,'pfpj',"pfpj.cip=acuser.cip" } },;
                      {"login='"+gcLOGIN+"'"}) < 0
          	error_sys(db_error())
         endif
         laRESULT := db_fetchall()

         WPut('CIP_SOLICITANTE',laRESULT[2,1])
         WPut('CIP_SOLICITANTE_PFPJ',laRESULT[2,2])

      endif


// Alterado por Sonia Perdigão - 2010-08-16 17:48:03
// Unimed      

      IF pcUSER_INTERFACE == 'mnt.pasta.civel_consultivo.html' .or. pcUSER_INTERFACE == 'mnt.pasta.civel_consultivo2.html'  
         WPut('FL_CONSULTA','Em Aberto')
         Wput('FL_CONSULTA',wget('FL_CONSULTA','C')) 
      endif

      IF pcUSER_INTERFACE == 'mnt.pasta.civel_loja.html'
         WPut('HR_CADASTRO',time()) 
      endif
      // Glauber 05/10/2010
      // Customização Unimed
     
      if (pcuser_interface ==  'mnt.pasta.civel_consultivo2.html')
         if db_select({'DT_RESPOSTA','NR_PASTA'},'pasta_pesquisa',,{'login = '+DLAP + WSet('LOGIN')+DLAP}) == -1
            error_sys(db_error())
         endif
         laRESULT := db_fetchall()
         for ii := 2 to len(laRESULT)
             if empty(Dtos(laRESULT[ii,1]))
                walert('A pasta '+ alltrim(str(laRESULT[ii,2])) + ' esta com a aba pesquisa de satisfação sem preencher.')
                WSet('_USER_INTERFACE','lst.pasta.html')
                lst_pasta_html()
                return (.f.)
             endif
         next ii
      endif

      if ascan(laFIELDS,'CD_MOEDA') > 0
         if db_select({'empresa_usuaria.CD_MOEDA','moeda.NM_MOEDA'},;
                      'empresa_usuaria',;
                      {{ 2,'moeda',"moeda.CD_MOEDA=empresa_usuaria.CD_MOEDA" } },;
                      {"empresa_usuaria.CD_EMPRESA='1'"}) < 0
          	error_sys(db_error())
         endif
         laRESULT := db_fetchall()
         if len(laRESULT) > 1
     				WPut('CD_MOEDA',laRESULT[2,1])
           	WPut('NM_MOEDA',laRESULT[2,2])
         endif
      endif

   elseif lcACTION == 'ALTER'
// customização Cardif
      if (pcuser_interface ==  'mnt.pasta.ouvidoria3.html')
          if db_select({'NR_PASTA','NOME_SEGURADO','EMAIL1','EMAIL2','TELEFONE1','TELEFONE2','TELEFONE3','TELEFONE4','NOME_RECLAMANTE'},'pasta_ouvidoria',,{'NR_PASTA = '+lcNR_PASTA}) == -1
            error_sys(db_error())
         endif
         laRESULT := db_fetchall()
         for ii := 2 to len(laRESULT)
            if len(laRESULT) > 1
        				WPut('NOME_SEGURADO',laRESULT[2,2])
        				WPut('EMAIL1',laRESULT[2,3])
        				WPut('EMAIL2',laRESULT[2,4])
        				WPut('TELEFONE1',laRESULT[2,5])
        				WPut('TELEFONE2',laRESULT[2,6])
        				WPut('TELEFONE3',laRESULT[2,7])
        				WPut('TELEFONE4',laRESULT[2,8])
        				WPut('NOME_RECLAMANTE',laRESULT[2,9])
            endif
         next ii
      endif

// sonia - customização leroy - 03/09/2015 09:08:58
      IF pcUSER_INTERFACE == 'mnt.pasta.procuracao2.html'  .or. pcUSER_INTERFACE == 'mnt.pasta.procuracao3.html'
         WPut('TP_PODER',wget('TP_PODER','C'))
         Wput('DESC_PODER',wget('DESC_PODER','C'))
         lcEMPRESA_PRINC := wget('CIP_EMPRESA','C')
      endif

      *** rufino 11/06/2014 conf. email Sônia 09/06/2014 as 10:40 item 1 alerta andamento critico
      if lower(Wset('FL_ALERTA')) == 'enable'
         if db_query('select count(*) from pasta_andamento where NR_PASTA='+DLAP+lcNR_PASTA+DLAP+' and FL_CRITICO='+DLAP+'S'+DLAP) == -1
            error_sys(db_error())
         endif
         laRES:= db_fetchall()
         if laRES[2,1] > 0
            walert('Atenção!!! Esta pasta contém andamento(s) crítico(s).\n')
         endif
      endif


      // Glauber 09/2012
      // Template Projetos
      if (pcUSER_INTERFACE == 'mnt.pasta.projetos.html')

         // Dados da tabela pasta_projetos

         laFIELDS := structtable(WSet("DB_ACTIVE"),'pasta_projetos',1,'A')
         if db_select(laFIELDS, 'pasta_projetos',,{'NR_PASTA='+lcNR_PASTA}) = -1
            error_sys(db_error())
         endif
         laRES:= db_fetchall()
         db2Put(laRES)

         // Dados da tabela pasta
         laFIELDS := {'TP_PASTA',;
                      'FL_PASTA',;
                      'NR_PASTA_ARQUIVO',;
                      'CD_LEGADO',;
                      'LOGIN_CADASTRO',;
                      'DT_CADASTRO',;
                      'HR_CADASTRO'}


      endif

   elseif lcACTION == 'UPDAT_CONT3' .and. gbWAC_WRITE
   
          laSAVE := {{'FAST_PASS'},{WGet('FAST_PASS')}}

          psab_logs(laSAVE,'pasta','NR_PASTA = '+lcNR_PASTA,lcNR_PASTA,'Informações Principais') //Gravar log de alterações da pasta

          if db_update(laSAVE,'pasta',{'NR_PASTA = '+lcNR_PASTA}) == -1
             error_sys(db_error())
          endif

          if WGet('FAST_PASS','C')<>''
             laSAVE := {{'PRAZO_INTERNO','PRAZO_EXTERNO','VL_ESCRITORIO','PZOINTINIC','PZOEXTINIC'},{WGet('PRAZO_INTERNO','D'),WGet('PRAZO_EXTERNO','D'),WGet('VL_ESCRITORIO','N'),WGet('PRAZO_INTERNO','D'),WGet('PRAZO_EXTERNO','D')}}
             if db_update(laSAVE,'pasta_alocada',{'NR_PASTA = '+lcNR_PASTA}) == -1
                error_sys(db_error())
             endif
          endif


   elseif lcACTION == 'SAVE' .and. gbWAC_WRITE

          // Glauber 09/2012 - Template Projetos
          // Observação: Como os dados a serem salvos não estão na tabela pasta, estou fazendo os ajustes necessários nesta parte do programa.
          if (pcUSER_INTERFACE == 'mnt.pasta.projetos.html')

                // Inserir o registro pai na tabela pasta
                laFIELDS := {'TP_PASTA',;
                            'FL_PASTA',;
                            'NR_PASTA_ARQUIVO',;
                            'CD_LEGADO',;
                            'LOGIN_CADASTRO',;
                            'DT_CADASTRO',;
                            'HR_CADASTRO'}
                 laSAVE := {}
                 aadd(laSAVE,laFIELDS)
                 laTMP := {}
                 for ii := 1 to len(laFIELDS)
                     if laFIELDS[ii] == 'HR_CADASTRO'
                        aadd(laTMP, time())
                     else
                        aadd(laTMP, Wget(laFIELDS[ii]))
                     endif
                 next ii
                 aadd(laSAVE,laTMP)
 //                debug2(lasave)
                 if (Lower(Wget('NR_PASTA')) == 'new') .or. (Wget('NR_PASTA','N') == 0)
//debug2(lasave)
                    if db_insert(laSAVE,'pasta') == -1
                       error_sys(db_error())
                    endif
                 else
//debug2(lasave)                 
                    if db_replace(laSAVE,'pasta',{'NR_PASTA = '+Wget('NR_PASTA','C')}) == -1
                       error_sys(db_error())
                    endif
                 endif

                 // Inserir o registro filho na tabela pasta_projetos
                 laFIELDS := structtable(WSet("DB_ACTIVE"),'pasta_projetos',1,'A')
                 laSAVE := {}
                 aadd(laSAVE,laFIELDS)
                 laTMP := {}
                 for ii := 1 to len(laFIELDS)
                     aadd(laTMP, Wget(laFIELDS[ii]))
                 next ii
                 aadd(laSAVE, laTMP)
                 lnPASTA := Wget('NR_PASTA','N')
                 if (Lower(Wget('NR_PASTA')) == 'new') .or. (Wget('NR_PASTA','N') == 0)
                    laSAVE[2,db_fetchncol(laSAVE,'NR_PASTA')] := db_insert_id()
                    lnPASTA := laSAVE[2,db_fetchncol(laSAVE,'NR_PASTA')]
                 endif
                 if db_replace(laSAVE,'pasta_projetos',{'NR_PASTA = '+str(lnPASTA)}) == -1
                    error_sys(db_error())
                 endif
                 // Salvar os cips da pasta
                 laFIELDS := {'CIP_RESPONSAVEL','CIP_CO_RESPONSAVEL','CIP_DOCUMENTACAO'}
                 lcCIPS := ''
                 for ii := 1 to len(laFIELDS)
                     laSAVE := {}
                     aadd(laSAVE,{'NR_PASTA','WFIELD','CIP'})
                     aadd(laSAVE, {lnPASTA,laFIELDS[ii],Wget(laFIELDS[ii])})
                     lcWHERE := 'NR_PASTA='+str(lnPASTA)+' and WFIELD='+DLAP+laFIELDS[ii]+DLAP
                     lcCIPS += '#' + Wget(laFIELDS[ii])
                     if db_replace(laSAVE,'pasta_cip',{lcWHERE}) == -1
                        error_sys(db_error())
                     endif
                 next ii

                 // Atualizar os CIPS na tabela pasta

                 if db_update({{'CIPS'},{lcCIPS}},'pasta',{'NR_PASTA='+str(lnPASTA)}) == -1
                    error_sys(db_error())
                 endif
                 Get2Put()
                 lcNR_PASTA := alltrim(str(lnPASTA))
                 WPut('NR_PASTA',lcNR_PASTA)
                 Wput('HR_CADASTRO',Time())
                 lcTP_PASTA := Wget('TP_PASTA')
                 pasta_abas(lcTP_PASTA,1)
                 WPut('TITLE',lcTP_PASTA+' - Alteração do Cadastro da Pasta '+lcNR_PASTA)
                 // CriaÃ§Ã£o do link com o GED
                 nmkgedico('pasta',lcNR_PASTA)

                 // Carregar os campos da informações principais contido na tabela pasta
// Alterado Sonia para utilizar o flag de pasta_config - 29/10/2015 13:51:12
                  if db_select({'VFILEMP'},'pasta_config',,{'TP_PASTA='+DLAP+lcTP_PASTA+DLAP}) < 0
                     error_sys(db_error())
                  endif
                  laRESULT := db_fetchrow()
                  if len(laRESULT) == 1
                     lcVFILEMP := laRESULT[2,1]
                  else
                     lcVFILEMP := ''
                  endif
// debug2(lcvfilemp)
               if (Wset('FILIAL') == 'ENABLE' .and. ! empty(WGET('CIP_EMPRESA')) .AND. ! empty(WGET('CIP_FILIAL')))
//                if lcVFILEMP == 'S' 
//
                   if db_select({'count(*)'},'pfpj',,{'pfpj.CIP_EMPRESA='+DLAP+WGET('CIP_EMPRESA')+DLAP + ' and pfpj.CIP='+DLAP+WGET('CIP_FILIAL')+DLAP}) == -1
                      error_sys(db_error())
                   endif
                   laRESULT := db_fetchall()
                   if len(laRESULT) < 2 .or. laRESULT[2,1] == 0
                      walert('O campo Filial é inválido para a empresa informada nesta pasta.\n')
                      get2put()
                      cmb_causaacao(laFIELDS)
                      cmb_fl_pasta(lcTP_PASTA,lcACTION)
          
                      pasta_abas(lcTP_PASTA,1)
                      return (.f.)
                   endif
                 endif
//                endif               
             return

           endif
          


      // Glauber - 26/10/2010
      // Template consultivo2 customização Unimed
      // Validacao das regras de conteudo conforme definido pela documentacao do cliente
      //
      // Campos
      // Matéria = pasta.TP_CONSULTA
      // Assunto = pasta.ASSUNTO
      // Cobertura = pasta.lmi_nm_COBERTURA
      // Ramo = pasta.CD_RAMOSRSN
      // Pessoa Física Envolvida = CIP_PESSOA_FISICA
      // Pessoa Jurídica = CIP_PESSOA_JURIDICA
      // Descrição PF = pasta.DESCRICAO_PF
      // Descrição PJ = pasta.DESCRICAO_PJ
      // Sinistro = pasta.NR_SINISTRO
      //
      if (pcuser_interface ==  'mnt.pasta.civel_consultivo2.html')
         // Quando o campo Matéria for igual a Seguros e o campo Assunto for igual
         // a Contrato de Seguros/Condições Gerais os campos Cobertura e Ramo são obrigatórios
          if WGet('TP_CONSULTA') == 'Seguros' .and. WGet('ASSUNTO') == 'Contrato de Seguros/Condições Gerais'
             aadd(laVALIDA,'LMI_NM_COBERTURA')
             aadd(laVALIDA,'CD_RAMOSRSN')
          // Quando o campo Matéria for igual a Seguros e o campo Assunto for igual 
          // a Contrato de Previdência os campos Cobertura e Ramo são obrigatórios             
          elseif WGet('TP_CONSULTA') == 'Seguros' .and. WGet('ASSUNTO') == 'Contrato de Previdência'
                 aadd(laVALIDA,'LMI_NM_COBERTURA')
                 aadd(laVALIDA,'CD_RAMOSRSN')
          // Quando o campo Matéria for igual a Seguros e o campo Assunto for igual a Sinistro os campos
          //  Cobertura, Ramo, Sinistro e Número do documento são obrigatórios e o 
          // campo Tipo do documento será preenchido automaticamente com a opção Apólice
          //
          elseif WGet('TP_CONSULTA') == 'Seguros' .and. WGet('ASSUNTO') == 'Sinistro'
             aadd(laVALIDA,'LMI_NM_COBERTURA')
             aadd(laVALIDA,'CD_RAMOSRSN')
             aadd(laVALIDA,'NR_SINISTRO')
             aadd(laVALIDA,'NUMERO_DOC')
          // Quando o campo Matéria for igual a Seguros e o campo Assunto for igual a Reembolso os campos
          //  Cobertura, Ramo, Sinistro e Número do documento são obrigatórios e o
          // campo Tipo do documento será preenchido automaticamente com a opção Apólice
          //
          elseif WGet('TP_CONSULTA') == 'Seguros' .and. WGet('ASSUNTO') == 'Reembolso'
             aadd(laVALIDA,'CIP_PESSOA_JURIDICA')
             aadd(laVALIDA,'CIP_PESSOA_FISICA')
             aadd(laVALIDA,'LMI_NM_COBERTURA')
             aadd(laVALIDA,'CD_RAMOSRSN')
             aadd(laVALIDA,'NUMERO_DOC')
          // Os campos Pessoa Física Envolvida e Pessoa Jurídica Envolvida serão obrigatórios
          // quando o campo Descrição da pessoa correspondente (Descrição PF ou Descrição PJ)
          // for preenchido
          elseif ! Empty(WGet('DESCRICAO_PF'))
                 aadd(laVALIDA,'CIP_PESSOA_FISICA')
          elseif ! Empty(WGet('DESCRICAO_PJ'))
                 aadd(laVALIDA,'CIP_PESSOA_JURIDICA')
          //  O campo Descrição PF ou Descrição PJ sempre será obrigatório quando preenchidos
          //  respectivamente os campos Pessoa Física Envolvida ou Pessoa Jurídica Envolvida
          elseif ! Empty(WGet('CIP_PESSOA_FISICA'))
                 aadd(laVALIDA,'DESCRICAO_PF')
          elseif ! Empty(WGet('CIP_PESSOA_JURIDICA'))
                 aadd(laVALIDA,'DESCRICAO_PJ')
          endif
          // Independente do que foi preenchido nos demais campos, Matéria, Assunto,
          // Tipo de Providência, Seguradora e CNPJ são obrigatórios
          aadd(laVALIDA,'TP_CONSULTA')
          aadd(laVALIDA,'ASSUNTO')
          aadd(laVALIDA,'TP_PROVIDENCIA')
          aadd(laVALIDA,'CIP_SEGURADORA')
          aadd(laVALIDA,'CNPJ_SEGURADORA')
          for ii := 1 to len(laVALIDA)
              if empty(WGet(laVALIDA[ii]))
                 walert(lblfscreen(laVALIDA[ii])+' é de preenchimento obrigatório.\n')
                 get2put()
                 cmb_causaacao(laFIELDS)
                 cmb_fl_pasta(lcTP_PASTA,lcACTION)
                 pasta_abas(lcTP_PASTA,1)
                 return (.f.)
              endif
          next ii
          laVALIDA := {}
      endif
      /* Valida Data de Entrada */
      if WGet('DT_ENTRADA','B')
         if WGet('DT_ENTRADA') > date()
            walert(lblfscreen('DT_ENTRADA')+' não pode ser maior que Data atual')
            get2put()
            cmb_causaacao(laFIELDS)
            cmb_fl_pasta(lcTP_PASTA,lcACTION)
            pasta_abas(lcTP_PASTA,1)
            return (.f.)
         endif
      endif

      //---------- Valida Campo CIP_EMPRESA.
      if WGet('CIP_EMPRESA','B')               // Se o template tem o Campo CIP_EMPRESA
         if empty(WGet('CIP_EMPRESA','C'))     // o Campo não pode fica vazio
            walert('O campo Empresa é de preenchimento obrigatório.\n')
            get2put()
            cmb_causaacao(laFIELDS)
            cmb_fl_pasta(lcTP_PASTA,lcACTION)
            pasta_abas(lcTP_PASTA,1)
            return (.f.)
         endif
      endif


      /* ValidaÃ§Ã£o de RegiÃ£o */
      if WGet('COMARCA','B') .and. WGet('CIP_ESCRITORIO','B') .and. WGet('REGIAO','B')
         if db_select({'REGIAO'},'comarca_regiao',,{'COMARCA='+DLAP+WGet('COMARCA','C')+DLAP}) == -1
            error_sys(db_error())
         endif
         laRESULT := db_fetchrow()
         if len(laRESULT) > 0
            if db_select({'distinct CIP'},'pfpj_escritorio_regiao',,{'REGIAO='+DLAP+laRESULT[1]+DLAP}) == -1
               error_sys(db_error())
            endif
            laRESULT := db_fetchall()
            if len(laRESULT) > 1
               if ascan(laRESULT,{|x| x[1]== WGet('CIP_ESCRITORIO','C')}) == 0
/*                walert('O Escritório Atual não atende a Região selecionada!') */
               endif
            else
/*                walert('Nenhum Escritório atende a Região selecionada!') */
            endif
         endif
      endif

//------------------------------------------------------------------------------------
      /* Campos obrigatÃ³rios - recuperados da tabela.campo pasta_config.
      * Formato do array abaixo
      * 1 - Campo para captura da informaÃ§Ã£o no HTML - WGet()
      * 2 - Parte do label a exibir em caso de erro, estÃ£o inf. e capturado do Wictrix
      */

      /*
      if db_select({'VALIDA_CAMPOS','VERIFICA_CAMPOS'},'pasta_config',,{'TP_PASTA='+DLAP+lcTP_PASTA+DLAP}) < 0
         error_sys(db_error())
      endif
      laRESULT := db_fetchrow()

      */
      
//------------------------------------------------------------------------------------
      /* Campo objeto  */

    
      if db_select({'pasta_config.VALIDA_OBJETO'},'pasta_config',,) == -1
         error_sys(db_error())
      endif
      laVALIDA_OBJETO := db_fetchrow()
      if laVALIDA_OBJETO[1] = 'Y'
         WPut('OBJETO.readonly',.F.)
         WPut('OBJETO.class','winput')
      else
         WPut('OBJETO.readonly',.T.)
         WPut('OBJETO.class','winputreadonly')
      endif

      if len(laPastaConfig) > 0
         /* Campos obrigatÃ³rios */

         if !empty(laPastaConfig[1])
            laRES := str2array(laPastaConfig[1],',')

            /* Adiciona apenas os campos vÃ¡lidos */

            for ii := 1 to len(laRES)
               aadd(laVAL_CAMPOS,laRES[ii])
            next ii
            for ii := 1 to len(laVAL_CAMPOS)
                        if ascan(laFIELDS,laVAL_CAMPOS[ii]) > 0 .or. substr(laVAL_CAMPOS[ii],1,4)=='CIP_'
                           aadd(laVALIDA,{laVAL_CAMPOS[ii],lblfscreen(laVAL_CAMPOS[ii])})
                        endif
            next ii
         endif

         /* Unicidade dos campos */
         if !empty(laPastaConfig[2])
            laVAL_JOIN   := {}
            laVAL_CAMPOS := {}
            laRES        := str2array(laPastaConfig[2],',')

            /*
            *Alimenta laVAL_CAMPOS no seguinte formato:
            *  laVAL_CAMPOS := {{'tabela.CAMPO','CAMPO'},;
            *                   {'tabela.CAMPON','CAMPON'}}
            */
            for ii := 1 to len(laRES)
               lcAUX := lower(substr(laRES[ii],5))
               if substr(laRES[ii],1,4) == 'CIP_' //Colunas CIP
                  aadd(laVAL_CAMPOS,{'pasta_pfpj_'+lcAUX+'.CIP',laRES[ii]})

                  aadd(laVAL_JOIN,{2,'pasta_pfpj_'+lcAUX,'pasta_pfpj_'+lcAUX+'.NR_PASTA=pasta.NR_PASTA'})
               else                               //Demais colunas
                  aadd(laVAL_CAMPOS,{'pasta.'+laRES[ii],laRES[ii]})
               endif
            next ii

            if len(laVAL_CAMPOS) > 0
               // Adiciona os campos da 'chave' de unicidade na lista de campos obrigatÃ³rios
               for ii := 1 to len(laVAL_CAMPOS)
                   aadd(laVALIDA,{laVAL_CAMPOS[ii,2],lblfscreen(laVAL_CAMPOS[ii,2])})
               next ii

               // Inicia verificaÃ§Ã£o de unicidade da pasta
               aadd(laWHERE,'pasta.TP_PASTA='+DLAP+lcTP_PASTA+DLAP)

               // Adiciona esta condicao para excluir a pasta atual da pesquisa, no caso de uma alteraÃ§Ã£o
               if lower(WGet('NR_PASTA','C')) <> 'new' .or. WGet('NR_PASTA','N') <> 0
                  aadd(laWHERE,'pasta.NR_PASTA<>'+lcNR_PASTA)
               endif
               laAUX := {}
               for ii := 1 to len(laVAL_CAMPOS)
                  aadd(laAUX,laVAL_CAMPOS[ii,1]+' as '+laVAL_CAMPOS[ii,2])

                  if valtype(WGet(laVAL_CAMPOS[ii,2])) == 'C'
                     aadd(laWHERE,laVAL_CAMPOS[ii,1]+'='+DLAP+WGet(laVAL_CAMPOS[ii,2],'C')+DLAP)
                  elseif valtype(WGet(laVAL_CAMPOS[ii,2])) == 'D'
                     if empty(alltrim(WGet(laVAL_CAMPOS[ii,2],'DS')))
                        aadd(laWHERE,laVAL_CAMPOS[ii,1]+' is null')
                     else
                        aadd(laWHERE,laVAL_CAMPOS[ii,1]+'='+DLAP+WGet(laVAL_CAMPOS[ii,2],'DS')+DLAP)
                     endif
                  else
                     aadd(laWHERE,laVAL_CAMPOS[ii,1]+'='+WGet(laVAL_CAMPOS[ii,2],'C'))
                  endif
               next ii

               aadd(laAUX,'pasta.NR_PASTA')

               if db_select(laAUX,lcTABLE,laVAL_JOIN,laWHERE) == -1
                  error_sys(db_error())
               endif
               laRESULT := db_fetchall()
               if len(laRESULT) > 1
                  for ii := 1 to len(laVAL_CAMPOS)
                     luCONTEUDO := laRESULT[2,db_fetchncol(laRESULT,laVAL_CAMPOS[ii,2])]

                     if valtype(luCONTEUDO) == 'N'
                        lcCONTEUDO := alltrim(str(luCONTEUDO))
                     elseif valtype(luCONTEUDO) == 'D'
                        lcCONTEUDO := dtoc(luCONTEUDO)
                     else
                        lcCONTEUDO := luCONTEUDO
                     endif

                     lcVAL_CAMPOS += '['+lblfscreen(laVAL_CAMPOS[ii,2])+':'+lcCONTEUDO+']'
                     if ii >= 1 .and. ii < len(laVAL_CAMPOS)
                        lcVAL_CAMPOS += ','
                     endif
                  next ii
                  if len(laVAL_CAMPOS) >= 1
                     lcERROR_MENS := 'O(s) campo(s) '+lcVAL_CAMPOS+' ja existe(m) na Pasta '+alltrim(str(laRESULT[2,db_fetchncol(laRESULT,'NR_PASTA')]))
                  endif

                  get2Put()
                  cmb_causaacao(laFIELDS)
                  cmb_fl_pasta(lcTP_PASTA,lcACTION)
                  walert(lcERROR_MENS)
                  pasta_abas(lcTP_PASTA,1)
                  return(.f.)
               endif
            endif
         endif
      endif
      // Glauber 19/12/2012 - customização Unimed - Trava dos botões salvar e excluir

      if pcUSER_INTERFACE == 'mnt.pasta.civel_consultivo2.html'
         llAltera := PodeAlterarPasta(val(lcNR_PASTA))
         if ! llAltera
            walert('Atenção: Seu login não tem permissão para efetuar alterações nesta pasta.')
            get2Put()
            cmb_causaacao(laFIELDS)
            cmb_fl_pasta(lcTP_PASTA,lcACTION)
            pasta_abas(lcTP_PASTA,1)
            return(.f.)
         endif
      endif



      *** rufino 18/12/2014
      *** aqui verifica campos obrigatorios
      if (pcUSER_INTERFACE == 'mnt.pasta.contrato3.html')

         if empty(WGet('DESC_PLATAFORMA','C'))==.t. .or. WGet('DESC_PLATAFORMA','C')=="0"
            walert('O campo Descrição Plataforma é de preenchimento obrigatório.\n')
            get2put()
            cmb_causaacao(laFIELDS)
            cmb_fl_pasta(lcTP_PASTA,lcACTION)
            cmb_empresa()
            cmb_plataforma(lcTP_PASTA)
            cmb_margem(lcTP_PASTA)
            pasta_abas(lcTP_PASTA,1)
            return (.f.)
         endif

         if empty(WGet('TP_CONTRATO_LABEL','C'))==.t. .or. WGet('TP_CONTRATO_LABEL','C')=="0"
            walert('O campo Tipo Contrato/Label é de preenchimento obrigatório.\n')
            get2put()
            WPut('DESC_PLATAFORMA',"")
            cmb_causaacao(laFIELDS)
            cmb_fl_pasta(lcTP_PASTA,lcACTION)
            cmb_empresa()
            cmb_plataforma(lcTP_PASTA)
            cmb_margem(lcTP_PASTA)
            pasta_abas(lcTP_PASTA,1)
            return (.f.)
         endif

         if empty(WGet('MARGEM','C'))==.t. .or. WGet('MARGEM','C')=="0"
            walert('O campo Margem é de preenchimento obrigatório.\n')
            get2put()
            WPut('DESC_PLATAFORMA',"")
            cmb_causaacao(laFIELDS)
            cmb_fl_pasta(lcTP_PASTA,lcACTION)
            cmb_empresa()
            cmb_plataforma(lcTP_PASTA)
            cmb_margem(lcTP_PASTA)
            pasta_abas(lcTP_PASTA,1)
            return (.f.)
         endif

         if empty(WGet('CIP_CONTRATANTE','C'))==.t. .or. WGet('CIP_CONTRATANTE','C')=="0"
            walert('O campo Contratante é de preenchimento obrigatório.\n')
            get2put()
            cmb_causaacao(laFIELDS)
            cmb_fl_pasta(lcTP_PASTA,lcACTION)
            cmb_empresa()
            cmb_plataforma(lcTP_PASTA)
            cmb_margem(lcTP_PASTA)
            pasta_abas(lcTP_PASTA,1)
            return (.f.)
         endif

      endif


      //ValidaÃ§Ã£o de Campos
      for ii := 1 to len(laVALIDA)
          if wmd_wfieldtype(laVALIDA[ii,1]) == 'N'     //Numerico
             lcVALIDA := iif (WGet(laVALIDA[ii,1],'N') > 0 ,WGet(laVALIDA[ii,1],'C'),'')
          elseif wmd_wfieldtype(laVALIDA[ii,1]) == 'D' //Data
             lcVALIDA := alltrim(WGet(laVALIDA[ii,1],'DS'))
          else                                         //Texto
             lcVALIDA := alltrim(WGet(laVALIDA[ii,1],'C'))
          endif
          if empty(lcVALIDA)
             walert(laVALIDA[ii,2]+' é um campo obrigatório!')
             get2Put()
             cmb_causaacao(laFIELDS)
             cmb_fl_pasta(lcTP_PASTA,lcACTION)
             pasta_abas(lcTP_PASTA,1)
             return(.f.)
          endif
      next ii


//-----------------         Validacão de Lits         -------------------------------------
      lcRelac:=Verifica_relacionamento(lcNR_PASTA, lcTp_pasta)
      if lcRelac ='P'
         if Val(lcNR_PASTA) > 0
            if db_select({'FL_TT_LITSCONSORTE'},'pasta',,{'pasta.NR_PASTA='+lcNR_PASTA}) == -1
               error_sys(db_error())
            endif
            laRESULT= db_fetchrow()
            lcFL_TT_LITSANTES := laRESULT[1]
            if lcFL_TT_LITSANTES = 'Y'         //.and. (WGet('FL_TT_LITSCONSORTE') <> lcFL_TT_LITSANTES)
               if (WGet('FL_TT_LITSCONSORTE') <> lcFL_TT_LITSANTES) 
                  Fl_Lits:= (.t.)                       
                  walert('Existem pastas relacionadas a este conteúdo.\n     Registro não pode ser alterado/excluído')
                  get2Put()
                  cmb_causaacao(laFIELDS)
                  cmb_fl_pasta(lcTP_PASTA,lcACTION)
                  pasta_abas(lcTP_PASTA,1)
                  wput('FL_TT_LITSCONSORTE',lcFL_TT_LITSANTES)
                  return (.f.)
               endif   
            endif
         endif
      endif

//-----------------------------------------------------------------------------------------------
      //Valida Valor Risco nas pastas ContÃ¡beis.
      if ('_cont.html' $ WSet('_USER_INTERFACE')) .and. (WGet('VL_RISCO','B') .or. WGet('VL_RISCO2','B'))
         if db_select({'VL_RISCO'},'pasta_pedidos',,{'NR_PASTA='+lcNR_PASTA}) == -1
            error_sys(db_error())
         endif
         laRESULT := db_fetchall()
         if len(laRESULT) > 1
            lnVL_TOTAL := 0
            for ii := 2 to len(laRESULT)
               lnVL_TOTAL += laRESULT[ii,1]
            next ii
            if round(lnVL_TOTAL,2) != round(WGet('VL_RISCO','N'),2)
               walert('O '+lblfscreen('VL_RISCO')+' deve ser igual ao Total do '+;
                      lblfscreen('VL_RISCO')+' dos Pedidos.')
               llERROR := .f.
            endif
         endif

         if llERROR
            get2Put()
            cmb_causaacao(laFIELDS)
            cmb_fl_pasta(lcTP_PASTA,lcACTION)
            pasta_abas(lcTP_PASTA,1)
            return(.f.)
         endif
      endif

      /* Relacionamentos que devem ser validados
      * Formato do array abaixo
      * 1 - Tabela
      * 2 - Campo para captura da informaÃ§Ã£o no HTML - WGet()
      * 3 - Campo para montagem da clÃ¡usula WHERE usada em db_findrec()
      * 4 - Parte do label a exibir em caso de erro, estÃ¡ inf. e capturado do Wictrix
      */
      laFIND_REC := {{'grupo_economico','CD_GRP_ECONOMICO','CD_GRP_ECONOMICO',lblfscreen('CD_GRP_ECONOMICO')}}

      for ii := 1 to len(laFIND_REC)
          lcVALIDA := alltrim(WGet(laFIND_REC[ii,2],'C'))
          if val(lcVALIDA) <> 0 .and. ! empty(lcVALIDA)
             if valtype(WGet(laFIND_REC[ii,2])) == 'C'
                lcVALIDA := DLAP+lcVALIDA+DLAP
             endif

             if len(db_findrec({laFIND_REC[ii,3]},laFIND_REC[ii,1],laFIND_REC[ii,3]+'='+lcVALIDA)) = 0
                //WPut('ERROR_MENS',laFIND_REC[ii,4]+' Ã© invÃ¡lido(a) ou nÃ£o pode ser encontrado(a)!')
                walert(laFIND_REC[ii,4]+' é inválido(a) ou não pode ser encontrado(a)!')
                get2Put()
                cmb_causaacao(laFIELDS)
                cmb_fl_pasta(lcTP_PASTA,lcACTION)
                pasta_abas(lcTP_PASTA,1)
                return(.f.)
             endif
          endif
      next ii

      if lower(WGet('NR_PASTA','C')) == 'new' .or. alltrim(WGet('NR_PASTA','C')) == '0' //Incluindo
         lcLOGIN := WSet('LOGIN')
         lcDATA  := dtos(date())
      else                               //Alterando
         if db_select({'INCLUDE_LOGIN','INCLUDE_DATA'},lcTABLE,,{lcWHERE}) == -1
            error_sys(db_error())
         endif
         laRESULT := db_fetchrow()
         lcLOGIN  := alltrim(laRESULT[1])
         lcDATA   := dtos(laRESULT[2])
      endif
      //aadd(laSAVE,laFIELDS)

//-----   Será varrido do layout se for lits os campos que são    -----------------
//-----   Campos que nao podem ser acessados se Lits - Filho      -----------------
//-----   ou não podem ser replicados se Lits - Pai               -----------------

      lcRelac:=Verifica_relacionamento(lcNR_PASTA,lcTp_pasta)
      if lcRelac = 'P' .or. lcRelac = 'F'
         if len(laPastaConfig) > 0
            if !empty(laPastaConfig[3])
               laRES := str2array(laPastaConfig[3],',')
               for ii := 1 to len(laRES)
                   aadd(laVAL_LITS,laRES[ii])
               next ii
               for ii := 1 to len(laVAL_LITS)
                   if lcRelac = 'F'
                      if ascan(laFIELDS,laVAL_LITS[ii]) > 0  
                         aadd(laFIELDSW,laVAL_LITS[ii])
                      endif
                   endif
               next ii
            endif
         endif
      endif

      /*
      Neste laï¿½, somente os campos que existem no layout
      entram para a lista de campos a serem salvos.
      Os campos do tipo checkbox sï¿½ excessï¿½s e sempre
      entrarï¿½ no array.
      */
      if lcRelac = 'F'
         for ii := 1 to len(laFIELDSW)
            aadd(laFIELDS_AUX,laFIELDSW[ii])
         next ii
      else
         for ii := 1 to len(laFIELDS)
            aadd(laFIELDS_AUX,laFIELDS[ii])
         next ii
      endif

      aadd(laSAVE,laFIELDS_AUX)
      
      for ii := 1 to len(laFIELDS_AUX)

//         ? 'laFIELDS_AUX[ii]:', ii, ' laFIELDS_AUX[ii]: ', laFIELDS_AUX[ii], ' tipo: ', wmd_wfieldtype(laFIELDS_AUX[ii]) , '-Conteudo:', Wget(laFIELDS_AUX[ii],wmd_wfieldtype(laFIELDS_AUX[ii]))

         if laFIELDS_AUX[ii] == 'INCLUDE_LOGIN'
            aadd(laSAVE_AUX,lcLOGIN)
            loop
         elseif laFIELDS_AUX[ii] == 'INCLUDE_DATA'
            aadd(laSAVE_AUX,lcDATA)
            loop
         endif
  

//         if ! WGet(laFIELDS_AUX[ii],'B')
/*
            if wmd_wfieldtype(laFIELDS_AUX[ii]) == 'C'
               aadd(laSAVE_AUX,WGet(laFIELDS_AUX[ii],'C'))
            elseif wmd_wfieldtype(laFIELDS_AUX[ii]) == 'N'
               aadd(laSAVE_AUX,0)
            elseif wmd_wfieldtype(laFIELDS_AUX[ii]) == 'D'
               aadd(laSAVE_AUX,ctod(' /  /  '))
            endif
            loop */
            if laFIELDS_AUX[ii] == 'DT_CADASTRO'
               if WGet('NR_PASTA','N') == 0
                  aadd(laSAVE_AUX,date())
                  loop
               else
                  aadd(laSAVE_AUX,WGet(laFIELDS_AUX[ii]))
                  loop
               endif
            elseif laFIELDS_AUX[ii] == 'PFPJ_ATIVIDADE'
                  if db_select({'PFPJ_ATIVIDADE'},'pfpj',,{'CIP ='+DLAP+WGet('CIP_EMPRESA','C')+DLAP}) == -1
                     error_sys(db_error())
                  endif
                  laPFPJ_ATIV := db_fetchrow()
                  if len(laPFPJ_ATIV) > 0
                     if empty(laPFPJ_ATIV[1])
                        lcPFPJ_ATIV := WGet(laFIELDS_AUX[ii])
                     else
                        lcPFPJ_ATIV := laPFPJ_ATIV[1]
                     endif   
                     aadd(laSAVE_AUX,lcPFPJ_ATIV)
                  endif
                               
            elseif laFIELDS_AUX[ii] == 'LOGIN_CADASTRO'
               if WGet('NR_PASTA','N') == 0
                  aadd(laSAVE_AUX,WSet('LOGIN'))
                  loop
               else
                  aadd(laSAVE_AUX,WGet(laFIELDS_AUX[ii]))
                  loop
               endif
            elseif laFIELDS_AUX[ii] == 'DT_APROVACAO'
               if plPRE
                  if WGet('NR_PASTA','N') == 0
//                     aadd(laSAVE_AUX,nil)
// sonia 27/05/2015 14:36:05 Erro em contrato prestacao de serviço
                       aadd(laSAVE_AUX,ctod(' /  /  '))
                     loop
                  else
                     aadd(laSAVE_AUX,WGet(laFIELDS_AUX[ii],'D'))
                     loop
                  endif
               else
                if (pcUSER_INTERFACE <> 'mnt.pasta.contrato3.html')
                  if WGet('NR_PASTA','N') == 0
//                     aadd(laSAVE_AUX,nil)
// sonia 27/05/2015 14:36:05 Erro em contrato prestacao de serviço
                       aadd(laSAVE_AUX,ctod(' /  /  '))
                     loop
                  else
                     aadd(laSAVE_AUX,WGet(laFIELDS_AUX[ii],'D'))
                     loop
                  endif
                else
// Glauber 16/12/2014
//
// Caso a pasta seja contrato3 não pode ter a data corrente como data de provação, este processo é realizado em outra tela.
//
                    if (pcUSER_INTERFACE == 'mnt.pasta.contrato3.html')
                        if WGet('NR_PASTA','N') == 0
                           aadd(laSAVE_AUX,ctod(''))
                           loop
                        else
                           aadd(laSAVE_AUX,WGet(laFIELDS_AUX[ii]))
                           loop
                        endif
                    endif
                 endif   
               endif
            elseif laFIELDS_AUX[ii] == 'LOGIN_APROVACAO'
// Glauber 14/01/2015
//
// Caso a pasta seja contrato3 e a operação de inclusão, não pode ser estabelecido o login aprovação com o login do usuário corrente.
//
// sonia 27/05/2015 14:36:05 Correção do Erro em contrato prestacao de serviço e todos os templates que utilizam dt_aprovacao

               if (pcUSER_INTERFACE == 'mnt.pasta.contrato3.html')
                   aadd(laSAVE_AUX,nil)
                   loop
               endif
               if plPRE
                  if WGet('NR_PASTA','N') == 0
                     aadd(laSAVE_AUX,nil)
                     loop
                  else
                     aadd(laSAVE_AUX,WGet(laFIELDS_AUX[ii]))
                     loop
                  endif
               else
                  if WGet('NR_PASTA','N') == 0
                     aadd(laSAVE_AUX,WSet('LOGIN'))
                     loop
                  else
                     aadd(laSAVE_AUX,WGet(laFIELDS_AUX[ii]))
                     loop
                  endif
               endif
            elseif laFIELDS_AUX[ii] == 'DT_REJEICAO'
               if plPRE
                  if WGet('NR_PASTA','N') == 0
//                     aadd(laSAVE_AUX,nil)
// sonia 27/05/2015 14:36:05 Erro em contrato prestacao de serviço
                       aadd(laSAVE_AUX,ctod(' /  /  '))
                     loop
                  else
                     aadd(laSAVE_AUX,WGet(laFIELDS_AUX[ii]))
                     loop
                  endif
               else
                  if WGet('NR_PASTA','N') == 0
                     aadd(laSAVE_AUX,date())
                     loop
                  else
                     aadd(laSAVE_AUX,WGet(laFIELDS_AUX[ii]))
                     loop
                  endif
               endif
            elseif laFIELDS_AUX[ii] == 'LOGIN_REJEICAO'
               if plPRE
                  if WGet('NR_PASTA','N') == 0
                     aadd(laSAVE_AUX,nil)
                     loop
                  else
                     aadd(laSAVE_AUX,WGet(laFIELDS_AUX[ii]))
                     loop
                  endif
               else
                  if WGet('NR_PASTA','N') == 0
                     aadd(laSAVE_AUX,WSet('LOGIN'))
                     loop
                  else
                     aadd(laSAVE_AUX,WGet(laFIELDS_AUX[ii]))
                     loop
                  endif
               endif
            elseif laFIELDS_AUX[ii] == 'FL_CONSULTA'
                 if WGet('NR_PASTA','N') == 0
                     aadd(laSAVE_AUX,'Em Aberto')
                     loop
                  else
                     aadd(laSAVE_AUX,WGet(laFIELDS_AUX[ii]))
                     loop
                  endif
            elseif laFIELDS_AUX[ii] == 'VL_RESERVA_CALC'
               //Alimenta Reserva Calculada de acordo com Risco
               aadd(laSAVE_AUX, WGet('VL_RISCO') * (pc_risco(WGet('PC_RISCO','N')) / 100))
               loop
            elseif laFIELDS_AUX[ii] == 'VL_PROVISAO_CALC'
               /* Alimenta ProvisÃ£o Calculada de acordo com Risco Extra-Contratual */
               if ascan(laFIELDS_AUX,'VL_RISCO2') > 0
                  aadd(laSAVE_AUX, WGet('VL_RISCO2') * (pc_risco(WGet('PC_RISCO2','N')) / 100))
                  loop
               /* Alimenta ProvisÃ£o Calculada de acordo com Risco */
               else
                  aadd(laSAVE_AUX, WGet('VL_RISCO') * (pc_risco(WGet('PC_RISCO','N')) / 100))
                  loop
               endif

            else
                // Glauber 22/06/2010 - Executar o wget de acordo com o tipo do campo definido no catálogo
                //aadd(laSAVE_AUX,WGet(laFIELDS_AUX[ii]))
                if wmd_wfieldtype(laFIELDS_AUX[ii]) == 'C'
                   aadd(laSAVE_AUX,WGet(laFIELDS_AUX[ii],'C'))
                elseif wmd_wfieldtype(laFIELDS_AUX[ii]) == 'N'
                   aadd(laSAVE_AUX, WGet(laFIELDS_AUX[ii],'N'))
                elseif wmd_wfieldtype(laFIELDS_AUX[ii]) == 'D'
                   aadd(laSAVE_AUX,WGet(laFIELDS_AUX[ii],'D'))
                else
                   aadd(laSAVE_AUX,nil)
                endif
                loop
            endif
         //endif
      next ii
    
      aadd(laSAVE,laSAVE_AUX)
      
 //     debug2(lasave)  
// alteração sonia em 2009-11-23 11:20:58 para correção dos templates de contrato      
      IF ! plPRE
         if ! gbWAC_WRITE
            WPut('ifBTN_SAVE',.f.)
         endif
         if ! gbWAC_DELETE
            WPut('ifBTN_DELETE',.f.)
         endif
      ENDIF
      if ! gbWAC_WRITE
         WPut('ifBTN_SAVE',.f.)
      endif
      if ! gbWAC_DELETE
         WPut('ifBTN_DELETE',.f.)
      endif

// Glauber 16/12/2014 - Se o template for contrato3, a pasta não pode ser aprovada automaticamente.

      if (pcUSER_INTERFACE == 'mnt.pasta.contrato3.html')
          if WGet('NR_PASTA','N') == 0       //Se for inclusÃ£o, aprova Pasta Automaticamente.
             aadd(laSAVE[1],'FL_APROVADO')
             aadd(laSAVE[2],'')
          endif
      else

// termino da alteração em 2009-11-23 11:21:40
              if ! plPRE .and. WGet('NR_PASTA','N') == 0       //Se for inclusÃ£o, aprova Pasta Automaticamente.
                 aadd(laSAVE[1],'FL_APROVADO')
                 aadd(laSAVE[2],'S')
              elseif plPRE .and. WGet('NR_PASTA','N') == 0     //Se for inclusÃ£o, aprova Pasta Automaticamente.
                 aadd(laSAVE[1],'FL_APROVADO')
                 aadd(laSAVE[2],'N')
              endif
      endif

      *** rufino 15/06/2015 16:51:13
      if (pcUSER_INTERFACE == 'mnt.pasta.contrato3.html')
          if WGet('NR_PASTA','N') == 0       //Se for inclusão
             aadd(laSAVE[1],'CONTRATO_MULTA')
             aadd(laSAVE[2], WGet('CONTRATO_MULTA','C'))
          endif
      endif


      psab_logs(laSAVE,lcTABLE,lcWHERE,lcNR_PASTA,'Informações Principais') //Gravar log de alteraÃ§Ãµes da pasta

//===  rotina para verificar o cip anterior da tabela pasta -----------------------------------------

      lcCip_antes = ''

      If lcRelac = 'F'
         if lower(WGet('NR_PASTA','C')) <> 'new' .or. WGet('NR_PASTA','N') <> 0
            if db_select({'CIPS'},'pasta',,{'NR_PASTA ='+lcNR_PASTA}) == -1
//               error_sys(db_error())
            else
               lcCip_antes = ''
               laRES:= db_fetchrow()
               if len(laRes) > 0
                  lcCip_antes:=laRes[1]
               endif
            endif        
         endif
     endif
  
      //Gerando conteudo de CIPS
      laCIP  := pstcips()
      lcCIPS := ''
      if lcRelac = 'F'  .and. !empty(lcCip_antes) 
         lcCips:=Monta_cip_filho(lcCip_antes,laVal_lits,laCip, lcNR_PASTA, lcRelac)
      else
         for ii := 1 to len(laCIP)
             if WGet(laCIP[ii],'B')
                if ! empty(alltrim(WGet(laCIP[ii],'C')))
                //Alimenta conteudo de pasta.CIPS
                   lcCIPS += '#'
                   lcCIPS += alltrim(WGet(laCIP[ii],'C'))
                endif
             endif
         next ii
      endif   
  
      //Inclui contedo da coluna CIPS no laSAVE se necessÃ¡rio
      if ! empty(lcCIPS)
         lcCIPS += '#'
         aadd(laSAVE[1],'CIPS')
         aadd(laSAVE[2],lcCIPS)
      endif
            
///  1/24/2011 10:00:42 AM Sonia Perdigão - valida CIP_EXCLUSIVO_USO_BANCO      
      if pcUSER_INTERFACE == 'mnt.pasta.civel_loja_cont.html'
         lcUSOEXCLUSIVO := alltrim(WGet('CIP_USO_EXCLUSIVO_BANCO','N'))
         if alltrim(lcUSOEXCLUSIVO) <> '0' 
            lctipopfpj := 'pasta.CIP_USO_EXCLUSIVO_BANCO'
            lcWHEREUSO  := 'pfpj_table_field = '+DLAP+lctipopfpj+DLAP
            if db_select({'PFPJ_TIPOS'},'pfpj_conftipocampo',,{lcWHEREUSO}) = -1
               error_sys(db_error())
            endif
            laRESx:= db_fetchrow()
            if len(laRESx) == 0
               walert('CIP_USO_EXCLUSIVO_BANCO não configurado!!!')
            ELSE
               lctipopfpj := laRESX[1]
               lcWHEREUSO  := 'PFPJ_TIPOS like '+DLAP+lctipopfpj+DLAP+ ' and CIP ='+lcUSOEXCLUSIVO
               if db_select({'CIP'},'pfpj',,{lcWHEREUSO}) = -1
                  error_sys(db_error())
               endif
               laRESx:= db_fetchall()
               if len(laRESx) < 2
                  walert('CIP Inválido!!!')
                  get2put()
                  pasta_abas(lcTP_PASTA,1)
                  return (.f.)
//               endif   
            endif   
         endif   
      endif

      //Salvando informaÃ§Ãµes principais da pasta
      
      // Glauber - 26/10/2010
      // Template consultivo2 customização Unimed
      // Validacao das regras de conteudo conforme definido pela documentacao do cliente
      // Tratamento do de / para
      // Campos
      // Matéria = pasta.TP_CONSULTA
      // Assunto = pasta.ASSUNTO
      // Cobertura = pasta.LMI_NM_COBERTURA
      // Ramo = pasta.CD_RAMOSRSN
      // Pessoa Física Envolvida = CIP_PESSOA_FISICA
      // Pessoa Jurídica = CIP_PESSOA_JURIDICA
      // Descrição PF = pasta.DESCRICAO_PF
      // Descrição PJ = pasta.DESCRICAO_PJ
      // Sinistro = pasta.NR_SINISTRO
      //
      
      if (pcuser_interface ==  'mnt.pasta.civel_consultivo2.html')

          // De/para de acordo com as regras definidas pela Unimed
          if WGET('TP_CONSULTA') == 'Seguros' .and. (WGET('ASSUNTO') == 'Sinistro' .or. WGET('ASSUNTO') == 'Reembolso')
             lnPOS := ascan(laSAVE[1],'TP_DOCUMENTO')
             if lnPOS > 0
                laSAVE[2,lnPOS] := 'Apólice'
                WPut('TP_DOCUMENTO','Apólice')
               endif   
            endif   
         endif   
      endif

      *** rufino 23/09/2013
      if (pcuser_interface ==  'mnt.pasta.societario4.html')

         laFIELDSR := {}

          aadd(laFIELDSR,{'DT_ATUA_CAPITAL_SOCIAL',;
                          'CAPITAL_SOCIAL',;
                          'VL_CAPITAL_SOCIAL'})

         aadd(laFIELDSR,{wGet('DT_ATUA_CAPITAL_SOCIAL','D'),;
                         wGet('CAPITAL_SOCIAL','N'),;
                         wGet('VL_CAPITAL_SOCIAL','N')})

         lcWHERER := 'NR_PASTA='+lcNR_PASTA

         laDIFFROW := db_diffrow(laFIELDSR,'pasta',lcWHERER)

         if len(laDIFFROW)>0

            laFIELDSW := {}

            aadd(laFIELDSW,{'NR_PASTA',;
                            'DT_ATUA_CAPITAL_SOCIAL',;
                            'CAPITAL_SOCIAL',;
                            'VL_CAPITAL_SOCIAL',;
                            'DT_ALTERACAO',;
                            'HR_ALTERACAO',;
                            'LOGIN'})

            laFIELDS_AUX := {}

            aadd(laFIELDS_AUX,lcNR_PASTA)
            aadd(laFIELDS_AUX,wGet('DT_ATUA_CAPITAL_SOCIAL','D'))
            aadd(laFIELDS_AUX,0)
            aadd(laFIELDS_AUX,0)
            aadd(laFIELDS_AUX,DATE())
            aadd(laFIELDS_AUX,TIME())
            aadd(laFIELDS_AUX,Wset('LOGIN'))

            for ii := 1 to len(laDIFFROW)
                if laDIFFROW[ii,1]=='DT_ATUA_CAPITAL_SOCIAL'
                   laFIELDS_AUX[2]:=laDIFFROW[ii,2]
                elseif laDIFFROW[ii,1]=='CAPITAL_SOCIAL'
                   laFIELDS_AUX[3]:=laDIFFROW[ii,2]
                elseif laDIFFROW[ii,1]=='VL_CAPITAL_SOCIAL'
                   laFIELDS_AUX[4]:=laDIFFROW[ii,2]
                endif
            next ii

            aadd(laFIELDSW,laFIELDS_AUX)

            if db_insert(laFIELDSW,'pasta_cap_altera') == -1
               error_sys(db_error())
            endif

         endif

      endif

// Glauber 23/12/2014 - Caso o template seja contratos 3 e nãop venha flegado a pasta, considerar sempre como ativa
/* teste sonia - 13/01/2015 14:14:52 - combo de pasta gravada estava vindo vazio
      if (pcUSER_INTERFACE == 'mnt.pasta.contrato3.html')

          lnPOS := ascan(laSAVE[1],'FL_PASTA')

          if WGet('NR_PASTA','N') == 0 .and. Empty(WGet('FL_PASTA')) .and. lnPOS > 0
             laSAVE[2,lnPOS] := 'Aprovada'
          endif
      endif
*/

// Glauber 14/01/2015 - Quando salva uma nova pasta o fl_pasta esta vindo vazio, então estou pegando a definição da tabela pasta_status

      if (pcUSER_INTERFACE == 'mnt.pasta.contrato3.html')

          lnPOS := ascan(laSAVE[1],'FL_PASTA')

          if WGet('NR_PASTA','N') == 0 .and. Empty(WGet('FL_PASTA')) .and. lnPOS > 0
             // select fl_pasta from pasta_status where tp_pasta = 'Contrato LDC' and fl_pasta_status = 'A' and fl_ativo = 'S' and fl_default = 'S'
             if db_select({'FL_PASTA'},'pasta_status',,{"tp_pasta = '" + WGet('TP_PASTA')+ "' and fl_pasta_status = 'A' and fl_ativo = 'S' and fl_default = 'S'"}) == -1
                 error_sys(db_error())
             endif

             laRES := db_fetchall()
             if len(laRES) > 1
                laSAVE[2,lnPOS] := laRES[2,1]
             else
                laSAVE[2,lnPOS] := 'Ativa'
             endif
          endif
      endif


        //Salvando informaÃ§Ãµes principais da pasta
//wout(debug2(lasave),,400)        
      if db_replace(laSAVE,lcTABLE,{lcWHERE}) == -1
         error_sys(db_error())
      endif

      if lower(WGet('NR_PASTA','C')) = 'new' .or. WGet('NR_PASTA','N') = 0
         lcNR_PASTA := alltrim(str(db_insert_id()))
         // Glauber 20/03/2012
         llNovaPasta    := .t.
      else
         lcNR_PASTA := alltrim(WGet('NR_PASTA','C'))
         // Glauber 20/03/2012
         llNovaPasta    := .f.
      endif

      /* Gravando os campos CIP */
      //laCIP := pstcips()


      for ii := 1 to len(laCIP)
         if WGet(laCIP[ii],'B')
            if ! empty(alltrim(WGet(laCIP[ii],'C')))
               laSAVE  := {{'NR_PASTA','WFIELD','CIP'}}

//--------------Verifica se é pasta filho e se pode alterar   ----------------------------------

               if lcRelac = 'F'  //.and. !empty(lcCip_antes)
                  If ascan(laVal_lits,laCip[ii]) > 0
                    aadd(laSAVE,{val(lcNR_PASTA),;
                              laCIP[ii],;
                              WGet(laCIP[ii])})
                    lcWHERE := 'NR_PASTA='+lcNR_PASTA+' and WFIELD='+DLAP+laCIP[ii]+DLAP
                    psab_logs(laSAVE,'pasta_cip',lcWHERE,lcNR_PASTA,'Informações Principais') //Gravar log de alteraÃ§Ãµes da pasta
                    if db_replace(laSAVE,'pasta_cip',{lcWHERE}) == -1
                       error_sys(db_error())
                    endif
                  endif
               else
                  aadd(laSAVE,{val(lcNR_PASTA),;
                              laCIP[ii],;
                              WGet(laCIP[ii])})
                  lcWHERE := 'NR_PASTA='+lcNR_PASTA+' and WFIELD='+DLAP+laCIP[ii]+DLAP
                  psab_logs(laSAVE,'pasta_cip',lcWHERE,lcNR_PASTA,'Informações Principais') //Gravar log de alteraÃ§Ãµes da pasta
                  if db_replace(laSAVE,'pasta_cip',{lcWHERE}) == -1
                     error_sys(db_error())
                  endif
               endif
            else
               if lcRelac = 'F'  //.and. !empty(lcCip_antes)
                  If ascan(laVal_lits,laCip) > 0
                    if db_delete('pasta_cip','NR_PASTA='+lcNR_PASTA+' and WFIELD='+DLAP+laCIP[ii]+DLAP) == -1
                       error_sys(db_error())
                    endif
                  endif
               else
                  if db_delete('pasta_cip','NR_PASTA='+lcNR_PASTA+' and WFIELD='+DLAP+laCIP[ii]+DLAP) == -1
                     error_sys(db_error())
                  endif
               endif
            endif
         endif
      next ii

      //Grava conteudo de pasta.CIPS
      /*
      if ! empty(lcCIPS)
         lcCIPS += '#'
         if db_update({{'CIPS'},{lcCIPS}},'pasta',{'NR_PASTA='+lcNR_PASTA}) == -1
            error_sys(db_error())
         endif
      endif
      */
      if WGet('OBJETO','B')
         /* Sincroniza a tabela pasta_contingencia */
         pedproc_contingencia(val(lcNR_PASTA),WGet('OBJETO','C'),WGet('PC_RISCO','N'))

         /* Sincroniza a tabela pasta_resultado_pedidos */
         pedproc_resultado(val(lcNR_PASTA),WGet('OBJETO','C'))

         /* Sincroniza a tabela pasta_reajuste */
         pedproc_itens(val(lcNR_PASTA),WGet('OBJETO','C'))
      endif

//-----------------------------     Atualizando Filhos    -------------------------------
     if lcRelac = 'P'
        atualiza_pasta_lits(lcTP_PASTA,lcNR_PASTA,lcRelac)    // Se Lits atualiza pasta filho
     endif

//-------------------------------------------------------------------------------------------------



      // Glauber 12/2014 - Template Contrato3
      //
      if (pcUSER_INTERFACE == 'mnt.pasta.contrato3.html')


             // Inserir o registro filho na tabela pasta_alocada

             laFIELDS := structtable(WSet("DB_ACTIVE"),'pasta_alocada',1,'A')

             lnPOS := ascan(laFIELDS,'CIP_ESCRITORIO')
             if lnPOS > 0
                adel(laFIELDS,lnPOS)
                asize(laFIELDS, len(laFIELDS) -1)
             endif

             *** RUFINO 05/03/2015 11:24 CAMPOS NOVOS MILTON
             *** NA MANUTENÇÃO E SALVO QUANDO lcACTION == 'UPDAT_CONT3'

             *** SÓ GRAVA DE INDICOU FAST_PASS
             if WGet('FAST_PASS','C')==''
                lnPOS := ascan(laFIELDS,'PRAZO_INTERNO')
                if lnPOS > 0
                   adel(laFIELDS,lnPOS)
                   asize(laFIELDS, len(laFIELDS) -1)
                endif

                lnPOS := ascan(laFIELDS,'PRAZO_EXTERNO')
                if lnPOS > 0
                   adel(laFIELDS,lnPOS)
                   asize(laFIELDS, len(laFIELDS) -1)
                endif

                lnPOS := ascan(laFIELDS,'PZOINTINIC')
                if lnPOS > 0
                   adel(laFIELDS,lnPOS)
                   asize(laFIELDS, len(laFIELDS) -1)
                endif

                lnPOS := ascan(laFIELDS,'PZOEXTINIC')
                if lnPOS > 0
                   adel(laFIELDS,lnPOS)
                   asize(laFIELDS, len(laFIELDS) -1)
                endif
             endif


             laSAVE := {}
             aadd(laSAVE,laFIELDS)
             laTMP := {}
             for ii := 1 to len(laFIELDS)
                 if laFIELDS[ii] == 'NR_PASTA'
                    aadd(laTMP, val(lcNR_PASTA))
                 elseif laFIELDS[ii] == 'ID_PLATAFORMA'
                    aadd(laTMP, Wget('DESC_PLATAFORMA','N'))
                 elseif laFIELDS[ii] == 'ID_CONTRATO'
                        aadd(laTMP, Wget('TP_CONTRATO_LABEL','N'))
                 elseif laFIELDS[ii] == 'ID_MARGEM'
                        aadd(laTMP, Wget('MARGEM','N'))
                 elseif laFIELDS[ii] == 'CIP_DIRETOR'
                        aadd(laTMP, Wget('CIP_DIRETORIA'))

                 elseif laFIELDS[ii] == 'PZOINTINIC'
                        aadd(laTMP, Wget('PRAZO_INTERNO','D'))
                 elseif laFIELDS[ii] == 'PZOEXTINIC'
                        aadd(laTMP, Wget('PRAZO_EXTERNO','D'))

                 ELSE
                    aadd(laTMP, Wget(laFIELDS[ii]))
                 ENDIF
             next ii
             aadd(laSAVE, laTMP)
             if laSAVE[2,ascan(laFIELDS,'NR_PASTA')] > 0
                 if db_replace(laSAVE,'pasta_alocada',{'NR_PASTA = '+lcNR_PASTA}) == -1
                    error_sys(db_error())
                 endif
             endif

             // Inserir o registro filho na tabela sla_analitico


             laFIELDS := structtable(WSet("DB_ACTIVE"),'sla_analitico',1,'A')
             laSAVE := {}
             aadd(laSAVE,laFIELDS)
             laTMP := {}
             for ii := 1 to len(laFIELDS)
                 if laFIELDS[ii] == 'NR_PASTA'
                    aadd(laTMP, val(lcNR_PASTA))
                 elseif laFIELDS[ii] == 'ID_PLATAFORMA'
                    aadd(laTMP, Wget('DESC_PLATAFORMA','N'))
                 elseif laFIELDS[ii] == 'ID_CONTRATO'
                    aadd(laTMP, Wget('TP_CONTRATO_LABEL','N'))
                 elseif laFIELDS[ii] == 'ID_MARGEM'
                    aadd(laTMP, Wget('MARGEM','N'))

                 ELSE
                    aadd(laTMP, Wget(laFIELDS[ii]))
                 ENDIF
             next ii
             aadd(laSAVE, laTMP)

             // Salvar o log de alteração

             if (WGet('NR_PASTA','N') > 0)
                psab_logs(laSAVE,'sla_analitico','NR_PASTA = '+lcNR_PASTA,lcNR_PASTA,'Informações Principais') //Gravar log de alteraÃ§Ãµes da pasta
             ENDIF


             if laSAVE[2,ascan(laFIELDS,'NR_PASTA')] > 0
                 if db_replace(laSAVE,'sla_analitico',{'NR_PASTA = '+lcNR_PASTA}) == -1
                    error_sys(db_error())
                 endif
             endif




//
// Glauber 14/12/2014
// Quanto o template for contrato3, a manutenção do CIP_ESCRITORIO E CIP_ADVOGADO_EXTERNO fica na aba Designar Escritorio.
// Por isto estou refazendo os cips da pasta para reconstruir o conteúdo da coluna pasta.CIPS
//
             lcWHERE    := "NR_PASTA = "+lcNR_PASTA

             if db_select({'CIP'},'pasta_cip',,{lcWHERE}) == -1
                 error_sys(db_error())
             endif

             laRESULTCON := db_fetchall()
             lcCIPS      := ''
             for ii := 2 to len(laRESULTCON)
                 lcCIPS += '#' + laRESULTCON[ii,1]
             next ii

             if db_update({{'CIPS'},{lcCIPS}},'pasta',{lcWHERE}) == -1
                error_sys(db_error())
             endif

             // Como estou utlizando laFIELDS por aproveitamento, tenho que devolver a estrutura original da tabela pasta,
             // antes de chamar a função carrega_pasta

             laFIELDS := structtable(WSet("DB_ACTIVE"),'pasta',1,'A')

      endif

      *** rufino 21/10/2015 17:01:49
      if (pcUSER_INTERFACE == 'mnt.pasta.ouvidoria5.html')
         lcWHERE    := "NR_PASTA = "+lcNR_PASTA
         if db_update({{'NR_PROTOCOLO'},{STR(YEAR())+alltrim(lcNR_PASTA)}},'pasta',{lcWHERE}) == -1
            error_sys(db_error())
         endif
      endif


      // Glauber - 05/10/2010
      // Template consultivo2 customização Unimed
      // Redirect para página de pesquisa de satisfação

      // Glauber 19/11/2010 - Ajustes solicitado pela Unimed
      // Ao final do preenchimento da Aba de Informações Principais (Consulta) não é para redirecionar para Pesquisa de Satisfação,
      // em regra de negócio não faz sentido.


      if (pcuser_interface ==  'mnt.pasta.civel_consultivo2.html')
         laSAVEPESQ := {{'NR_PASTA','LOGIN','DT_CADASTRO'}}
         aadd(laSAVEPESQ,{val(lcNR_PASTA),WSet('LOGIN'),DATE()})
         if db_replace(laSAVEPESQ,'pasta_pesquisa',{'NR_PASTA = '+lcNR_PASTA }) == -1
            db_rollback()
            error_sys(db_error())
         endif
         return
      endif

     if (pcuser_interface ==  'mnt.pasta.ouvidoria3.html')
         laSAVEOUVID := {{'NR_PASTA','NOME_SEGURADO','EMAIL1','EMAIL2','TELEFONE1','TELEFONE2','TELEFONE3','TELEFONE4','NOME_RECLAMANTE'}}
         aadd(laSAVEOUVID,{val(lcNR_PASTA),WGET('NOME_SEGURADO'),WGET('EMAIL1'),WGET('EMAIL2'),WGET('TELEFONE1'),WGET('TELEFONE2'),WGET('TELEFONE3'),WGET('TELEFONE4'),WGET('NOME_RECLAMANTE')})
         if db_replace(laSAVEOUVID,'pasta_ouvidoria',{'NR_PASTA = '+lcNR_PASTA }) == -1
            db_rollback()
            error_sys(db_error())
         endif
      endif

//
     if (pcuser_interface ==  'mnt.pasta.contrato4.html')
     
         laWHERE:={}
         laSAVE0:={}
         laSAVEx1:={}
      
         lvfields := {'NR_PASTA',;
             'NR_CONTROLE',;
             'TIPO_VENDOR',;
             'NR_ADITIVO',;
             'RESPOSTA1',;
             'RESPOSTA2',;
             'RESPOSTA3',;
             'RESPOSTA4',;
             'RESPOSTA5',;
             'RESPOSTA6',;
             'RESPOSTA7',;
             'RESULTADO_CONTRATO',;
             'IMPACTO',;
             'DIMENSAO',;
             'CRITICIDADE',;
             'ESPECIFICAR4',;
             'ESPECIFICAR5',;
             'ESPECIFICAR6',;
             'ESPECIFICAR7',;
             'CIP_EMPRESA_GRUPO',;
             'MOTIVO_VENDOR',;
             'OBSERVACAO',;
             'FL_FCPA',;
             'FCPA_NR',;
             'FL_SLA',;
             'SLA_NR',;
             'FL_KPI',;
             'KPI_NR',;
             'FL_ISSUE_TRACK',;
             'ISSUE_TRACK_NR',;
             'FL_ISQ',;
             'FL_BCQ',;
             'CONCLUSAO',;
             'CLASS3',;
             'COMPLIANCE',;
             'DESC_KEY_VENDOR',;
             'DT_CADASTRO',;
             'LOGIN_CADASTRO',;
             'CIP_EMP_PEP',;
             'DECL_PEP',;
             'CRI_VEN',;
             'RIS_RAT',;
             'DT_ASSINATURA2',;
             'FL_RETROAGIU',;
             'DT_ISQ',;
             'DT_BCQ',;
             'CLASS2',;
             'DT_PIA'}

         lcWHERE  := 'NR_PASTA = ' + lcNR_PASTA

         aadd(laWHERE,lcWHERE)
//debug2(lawhere,,200)
         aadd(laSAVE0,lvFIELDS)
//debug2(lasave0,,200)
         aadd(laSAVEx1,val(lcNR_PASTA))
         aadd(laSAVEx1,val(lcNR_CONTROLE))
         aadd(laSAVEx1,lcTIPO_VENDOR)
         aadd(laSAVEx1,lcNR_ADITIVO)
         aadd(laSAVEx1,substr(lcRESP1,1,1))
         aadd(laSAVEx1,substr(lcRESP2,1,1))
         aadd(laSAVEx1,substr(lcRESP3,1,1))
         aadd(laSAVEx1,substr(lcRESP4,1,1))
         aadd(laSAVEx1,substr(lcRESP5,1,1))
         aadd(laSAVEx1,substr(lcRESP6,1,1))
         aadd(laSAVEx1,substr(lcRESP7,1,1))
         aadd(laSAVEx1,lcRESC)
         aadd(laSAVEx1,lcIMPACTO)
         aadd(laSAVEx1,lcDIMENSAO)
         aadd(laSAVEx1,lcCRITICIDADE)
         aadd(laSAVEx1,lc4ESPECIFICAR)
         aadd(laSAVEx1,lc5ESPECIFICAR)
         aadd(laSAVEx1,lc6ESPECIFICAR)
         aadd(laSAVEx1,lc7ESPECIFICAR)
         aadd(laSAVEx1,lcCIP_EMPRESA_GRUPO)
         aadd(laSAVEx1,lcMOTIVO_VENDOR)
         aadd(laSAVEx1,lcOBSERVACAO)
         aadd(laSAVEx1,substr(lcFL_FCPA,1,1))
         aadd(laSAVEx1,lcFCPA_NR)
         aadd(laSAVEx1,substr(lcFL_SLA,1,1))
         aadd(laSAVEx1,lcSLA_NR)
         aadd(laSAVEx1,substr(lcFL_KPI,1,1))
         aadd(laSAVEx1,lcKPI_NR)
         aadd(laSAVEx1,substr(lcFL_ISSUE_TRACK,1,1))
         aadd(laSAVEx1,lcISSUE_TRACK_NR)
         aadd(laSAVEx1,substr(lcFL_ISQ,1,1))
         aadd(laSAVEx1,substr(lcFL_BCQ,1,1))
         aadd(laSAVEx1,substr(lcCONCLUSAO,1,1))
         aadd(laSAVEx1,lcCLASS)
         aadd(laSAVEx1,lcCOMPLIANCE)
         aadd(laSAVEx1,lcDESC_KEY_VENDOR)
         aadd(laSAVEx1,DATE())
         aadd(laSAVEx1,lcLOGIN)
         aadd(laSAVEx1,lcCIP_EMP_PEP)
         aadd(laSAVEx1,lcDECL_PEP)
         aadd(laSAVEx1,lcCRI_VEN)
         aadd(laSAVEx1,lcRIS_RAT)
         aadd(laSAVEx1,lcDT_ASSINATURA2)
         aadd(laSAVEx1,lcFL_RETROAGIU)
         aadd(laSAVEx1,lcDT_ISQ)
         aadd(laSAVEx1,lcDT_BCQ)
         aadd(laSAVEx1,lcCLASS2)
         aadd(laSAVEx1,lcDT_PIA)

         aadd(laSAVE0,laSAVEx1)

 //     psab_logs(laSAVE0,'pasta_vendor',lcWHERE,lcNR_PASTA,'Vendor')

         if db_replace(laSAVE0,'pasta_vendor',laWHERE) == -1
            error_sys(db_error())
         endif



         if db_delete('vendor_docs',lcWHERE)  == -1
            error_sys(db_error())
         endif

         if WGet('DOCS','C')<>''

            laRESULT := str2array(WGet('DOCS','C'),'|')

            for ii := 1 to len(laRESULT)

               laLINHA_ATUAL:={}
               laTMP        :={}

               aadd(laTMP,str2array(laRESULT[ii],'#'))

               laSAVE  := {'NR_PASTA',;
                           'DOCUMENTO',;
                           'ENTREGUE'}

               aadd(laLINHA_ATUAL,laSAVE)

               lcTMP0:=alltrim(laTMP[1,1])
               lcTMP1:=alltrim(laTMP[1,2])

               laSAVE  := {val(lcNR_PASTA),;
                          lcTMP0,;
                          lcTMP1}

               aadd(laLINHA_ATUAL,laSAVE)

               if db_insert(laLINHA_ATUAL,'vendor_docs') == -1
                  db_rollback()
                  error_sys(db_error())
               endif

            next ii
         endif


         WPut('ifMANUVENDOR',.f.)
      endif
//

   elseif lcACTION == 'DELETE' .and. gbWAC_DELETE

        // Glauber - Customização Unimed
          if pcUSER_INTERFACE == 'mnt.pasta.civel_consultivo2.html'
             llAltera := PodeAlterarPasta(val(lcNR_PASTA))
             if ! llAltera
                walert('Atenção: Seu login não tem permissão para efetuar alterações nesta pasta.')
                get2Put()
                cmb_causaacao(laFIELDS)
                cmb_fl_pasta(lcTP_PASTA,lcACTION)
                pasta_abas(lcTP_PASTA,1)
                return(.f.)
             endif
          endif

          // Glauber 09/2012 - Template Projetos
          //
          if (pcUSER_INTERFACE == 'mnt.pasta.projetos.html')
             lcQuery := "select count(*) as QTD, 'Consultor Interno' as ABA from consultor_interno " +;
                        "where nr_pasta = {0} " +;
                        "union " +;
                        "select count(*) as QTD, 'Proposta Comercial' as ABA from proposta_comercial " +;
                        "where nr_pasta = {0} " +;
                        "union " +;
                        "select count(*) as QTD, 'Recursos' as ABA from ocorrencia_recurso " +;
                        "where nr_pasta = {0} " +;
                        "union " +;
                        "select count(*) as QTD, 'TimeSheet' as ABA from timesheet " +;
                        "where nr_pasta = {0} "
             lcQuery := StrTran(lcQuery,"{0}",lcNR_PASTA)
             if db_query(lcQuery) == -1
                error_sys(db_error())
             endif
             laVALIDA := db_fetchall()
             for ii := 2 to len(laVALIDA)
                 if laVALIDA[ii,1] > 0
                    walert("A aba "+ laVALIDA[ii, 2] + " contém registros. Você deve excluir estes registros primeiro.")
                    pasta_abas(lcTP_PASTA,1)
                    WPut('TITLE',lcTP_PASTA+' - Alteração do Cadastro da Pasta '+lcNR_PASTA)
                    // CriaÃ§Ã£o do link com o GED
                    nmkgedico('pasta',lcNR_PASTA)

                     // Postar novamente o registro

                     laFIELDS := structtable(WSet("DB_ACTIVE"),'pasta_projetos',1,'A')
                     if db_select(laFIELDS, 'pasta_projetos',,{'NR_PASTA='+lcNR_PASTA}) = -1
                        error_sys(db_error())
                     endif
                     laRES:= db_fetchall()
                     db2Put(laRES)

                     // Dados da tabela pasta
                     laFIELDS := {'TP_PASTA',;
                                  'FL_PASTA',;
                                  'NR_PASTA_ARQUIVO',;
                                  'CD_LEGADO',;
                                  'LOGIN_CADASTRO',;
                                  'DT_CADASTRO',;
                                  'HR_CADASTRO'}
                     carrega_pasta(lcNR_PASTA,laFIELDS,lcTP_PASTA)

                    return
                 endif
             next ii
             psab_logdel(lcNR_PASTA,'NR_PASTA',lcNR_PASTA,'Pasta excluí­da','Informações Principais')

             laDELETE := {'pasta_cip',;
                          'pasta_projetos',;
                          'pasta'}
             lcWHERE := ' NR_PASTA = ' + lcNR_PASTA
             for ii:= 1 to len(laDELETE)
                 if db_delete(laDELETE[ii],lcWHERE) == -1
                    error_sys(db_error())
                 endif
             next ii
             WSet('_USER_INTERFACE','lst.pasta.html')
             lst_pasta_html()
             return (.f.)
          endif


      lcRelac:=Verifica_relacionamento(lcNR_PASTA, lcTp_pasta)

      if lcRelac = 'F'
         walert('Pertence a Litsconsorte e não pode ser excluída')
      else
         lcWHEREO  := 'pasta_outraspartes.NR_PASTA = '+lcNR_PASTA+' and NR_PASTA_POSICAO_FILHO > '+'0'
        if db_select({'NR_PASTA_POSICAO_FILHO'},'pasta_outraspartes',,{lcWHEREO}) = -1
             error_sys(db_error())
        endif
         laPASTA_OUTRASPARTES:= db_fetchrow()
         if len(laPASTA_OUTRASPARTES) > 0
            lnNR_PASTAW:= laPASTA_OUTRASPARTES[1]
            If lnNR_PASTAW > 0
               walert('Existem pastas relacionadas a este conteúdo.\n     Registro não pode ser alterado/excluído')
            endif
        else
         psab_logdel(lcNR_PASTA,'NR_PASTA',lcNR_PASTA,'Pasta excluí­da','Informações Principais')

        /* ExclusÃ£o em cascata */


// Glauber 16/12/2015 - Como o template contrato3 tem integridade referencial definida, foi adicionado as tabelas sla_analitico e pasta_alocada.

        laDELETE := {'pasta',;
                   'pasta_cip',;
                   'pasta_analise_causa',;
                   'pasta_andamento',;
                   'pasta_andamento_last',;
                   'pasta_auto',;
                   'pasta_canal_relac_ocorrencias',;
                   'pasta_contingencia',;
                   'pasta_contrato_aditivo',;
                   'pasta_contrato_anexo',;
                   'pasta_contrato_sindicancia',;
                   'pasta_contrato_sindicancia_dist',;
                   'pasta_deposito',;
                   'pasta_div_responsabilidade',;
                   'pasta_empresa',;
                   'pasta_garantia',;
                   'pasta_incorporacao',;
                   'pasta_itens_contrato',;
                   'pasta_jurisprudencia',;
                   'pasta_lic_certificado',;
                   'pasta_log_altera',;
                   'pasta_outraspartes',;
                   'pasta_penhora',;
                   'pasta_poderes_outorgado',;
                   'pasta_prc_outorgado',;
                   'pasta_prcp_outorgado',;
                   'pasta_prc_outorgante',;
                   'pasta_prc_repres',;
                   'pasta_prc_poder',;
                   'pasta_rateio_ccusto',;
                   'pasta_relacionamento',;
                   'pasta_resultado_pedidos',;
                   'pasta_sct_ata',;
                   'pasta_sct_ata_deliberacao',;
                   'pasta_sct_ata_ordemdia',;
                   'pasta_sct_ato',;
                   'pasta_sct_conselhos',;
                   'pasta_sct_diretoria',;
                   'pasta_sct_participacao',;
                   'pasta_sct_sprocedimento',;
                   'pasta_sct_procedimento',;
                   'pasta_sct_socios',;
                   'pasta_sct_superintendencia',;
                   'pasta_detal_pedidos',;
                   'pasta_pedidos',;
                   'pasta_seguro',;
                   'pasta_seguro_lmi',;
                   'pasta_tipo_poderes',;
                   'pst_contrato_prestacao_servico',;
                   'ra_contrato',;
                   'ra_contrato_prestacao',;
                   'ra_ocorrencia',;
                   'fatura_avulso',;
                   'mvt_despped',;
                   'mvt_despesa',;
                   'mvt_despesa_pagamento',;
                   'mvt_servico',;
                   'pasta_alocada',;
                   'sla_analitico'}



            for ii := len(laDELETE) to 1 step -1
               if db_delete(laDELETE[ii],lcWHERE) == -1
                  error_sys(db_error())
               endif
            next ii
// ajuste solicitado por Celia em 5/4/2011 10:21:24
// para deletar se a pasta for derivada de alguma pasta
// Sonia Perdigão
                   lcWHEREO  := 'pasta_outraspartes.NR_PASTA_POSICAO_FILHO = '+lcNR_PASTA
                   if db_select({'NR_PASTA_POSICAO_FILHO'},'pasta_outraspartes',,{lcWHEREO}) = -1
                      error_sys(db_error())
                   endif
                   laRESx:= db_fetchall()
                   if len(laRESx) > 1
                      if db_delete('pasta_outraspartes',lcWHEREO) == -1
                         error_sys(db_error())
                      endif
                   endif
         endif
      endif
      WSet('_USER_INTERFACE','lst.pasta.html')
      lst_pasta_html()
      return (.f.)





   elseif lcACTION == 'APROVA' .and. gbWAC_WRITE
      if db_update({{'LOGIN_APROVACAO','DT_APROVACAO','FL_APROVADO','LOGIN_REJEICAO','DT_REJEICAO','FL_REJEITADO'},;
                    {WSet('LOGIN'),    date()        ,'S','', ctod('  /   /    '),'N'}},'pasta',{'NR_PASTA='+lcNR_PASTA}) == -1
         error_sys(db_error())
      endif
   elseif lcACTION == 'REJEITA' .and. gbWAC_WRITE
      if db_update({{'LOGIN_APROVACAO','DT_APROVACAO','FL_APROVADO','LOGIN_REJEICAO','DT_REJEICAO','FL_REJEITADO'},;
                    {'', ctod('  /   /    '),'N',WSet('LOGIN'),    date()        ,'S'}},'pasta',{'NR_PASTA='+lcNR_PASTA}) == -1
         error_sys(db_error())
      endif
   endif
   
   
   


   if ! empty(lcNR_PASTA) .and. (lcNR_PASTA <> 'new' .and. lcNR_PASTA <> '0')
      carrega_pasta(lcNR_PASTA,laFIELDS,lcTP_PASTA)
      WPut('TITLE',lcTP_PASTA+' - Alteração do Cadastro da Pasta '+lcNR_PASTA)

      // CriaÃ§Ã£o do link com o GED
      // Glauber 19/12/2012 - customização Unimed - Trava dos botões salvar e excluir

      if pcUSER_INTERFACE == 'mnt.pasta.civel_consultivo2.html'
         llAltera := PodeAlterarPasta(val(lcNR_PASTA))
         if llAltera
            nmkgedico('pasta',lcNR_PASTA)
         endif
      else
          nmkgedico('pasta',lcNR_PASTA)
      endif

        // GLAUBER 12/2014 - Template contrato3
        if (pcUSER_INTERFACE == 'mnt.pasta.contrato3.html')
               *** rufino 29/04/2015 22:16:21
               *** se for alteração segue o lay-out antigo pois e so readonly
               WPut('ifSEMGRUPO',.t.)
               WPut('ifCOMGRUPO',.f.)
               WPut('WUID',0)
               pnWUID:=0
               pcCONTXGRP:='N'
               ***

               // selecionar registro da tabela pasta_alocada

               laFIELDS := structtable(WSet("DB_ACTIVE"),'pasta_alocada',1,'A')

               if db_select(laFIELDS, 'pasta_alocada',,{'NR_PASTA='+lcNR_PASTA}) = -1
                  error_sys(db_error())
               endif
               laRES:= db_fetchall()

               if len(laRES) > 1
                  for ii := 1 to len(laFIELDS)
                       if laFIELDS[ii] == 'ID_PLATAFORMA'
                          laRES[1,ii] := 'DESC_PLATAFORMA'
                       elseif laFIELDS[ii] == 'ID_CONTRATO'
                              laRES[1,ii] := 'TP_CONTRATO_LABEL'
                       elseif laFIELDS[ii] == 'ID_MARGEM'
                              laRES[1,ii] := 'MARGEM'
                       endif
                   next ii

                   db2Put(laRES)
               endif

               // Inserir o registro filho na tabela sla_analitico

               laFIELDS := structtable(WSet("DB_ACTIVE"),'sla_analitico',1,'A')

               if db_select(laFIELDS, 'sla_analitico',,{'NR_PASTA='+lcNR_PASTA}) = -1
                  error_sys(db_error())
               endif
               laRES:= db_fetchall()

               if len(laRES) > 1
                  lcUPDTCOMB := ''

                  for ii := 1 to len(laFIELDS)
                       if laFIELDS[ii] == 'ID_PLATAFORMA'
                          laRES[1,ii] := 'DESC_PLATAFORMA'
                          lcUPDTCOMB  += alltrim(laRES[2,ii])
                          if ii < len(laFIELDS)
                             lcUPDTCOMB  += ','
                          endif
                       elseif laFIELDS[ii] == 'ID_CONTRATO'
                              laRES[1,ii] := 'TP_CONTRATO_LABEL'
                              lcUPDTCOMB  += alltrim(laRES[2,ii])
                              if ii < len(laFIELDS)
                                 lcUPDTCOMB  += ','
                              endif
                       elseif laFIELDS[ii] == 'ID_MARGEM'
                              laRES[1,ii] := 'MARGEM'
                              lcUPDTCOMB  += alltrim(laRES[2,ii])
                              if ii < len(laFIELDS)
                                 lcUPDTCOMB  += ','
                              endif
                       endif
                   next ii
                   lcUPDTCOMB  += getwput('FAST_PASS')
                   WPut('UPDATE_COMBOS',lcUPDTCOMB)

               endif

        endif
   endif

   cmb_causaacao(laFIELDS)
   cmb_fl_pasta(lcTP_PASTA,lcACTION)



   if empty(lcTP_PASTA) .and. lcACTION == 'NEW'
      wSet('_USER_INTERFACE','lst.pasta.html')
      lst_pasta_html()
      return(.f.)
   endif

   if empty(lcNR_PASTA)
      lcNR_PASTA:= '0'
   endif

   if pcUSER_INTERFACE == 'mnt.pasta.procuracao.html'
      /* Outorgantes */
      laPUT    := {}
      laFIELDS := {'NR_PASTA',;
                   'CIP_OUTORGANTE',;
                   'CIP_REPRESENTANTE'}

      if lcACTION == 'SAVE' .and. gbWAC_WRITE
         ii      := 1
         lcITEM  := alltrim(str(ii))
         laSAVE  := {}
         laWHERE := {}
         aadd(laSAVE,laFIELDS)
         do while wGet('VAR_CIP_OUTORGANTE'+lcITEM,'B')
            if ! empty(wGet('VAR_CIP_OUTORGANTE'+lcITEM,'C'))
               aadd(laSAVE,{val(lcNR_PASTA),;
                            wGet('VAR_CIP_OUTORGANTE'+lcITEM,'C'),;
                            wGet('VAR_CIP_REPRESENTANTE'+lcITEM,'C')})
               aadd(laWHERE,'NR_PASTA='+lcNR_PASTA+' and CIP_OUTORGANTE='+DLAP+wGet('VAR_CIP_OUTORGANTE'+lcITEM,'C')+DLAP)

               // Remove registro anterior, caso ele foi duplicado
               if wGet('VAR_CIP_OUTORGANTE_ANT'+lcITEM,'C') != wGet('VAR_CIP_OUTORGANTE'+lcITEM,'C')
                  if db_delete('pasta_prc_outorgante','NR_PASTA='+lcNR_PASTA+' and CIP_OUTORGANTE='+DLAP+wGet('VAR_CIP_OUTORGANTE_ANT'+lcITEM,'C')+DLAP) = -1
                     error_sys(db_error())
                  endif
               endif
            endif
            ii++
            lcITEM := alltrim(str(ii))
         enddo
         if len(laSAVE) > 1
            if db_replace(laSAVE,'pasta_prc_outorgante',laWHERE) = -1
               error_sys(db_error())
            endif
         endif
         laSAVE := {}
      elseif lcACTION == 'OUTORGANTE_DELETE'
         if db_delete('pasta_prc_outorgante','NR_PASTA='+lcNR_PASTA+' and CIP_OUTORGANTE='+DLAP+wGet('CIP_OUTORGANTE','C')+DLAP) = -1
            error_sys(db_error())
         endif
      endif

      if db_select({'pasta_prc_outorgante.NR_PASTA',;
                    'pasta_prc_outorgante.CIP_OUTORGANTE',;
                    'pfpj.PFPJ',;
                    'pasta_prc_outorgante.CIP_REPRESENTANTE'},;
                    'pasta_prc_outorgante',;
                    {{2,'pfpj','pfpj.CIP=pasta_prc_outorgante.CIP_OUTORGANTE'}},;
                    {'NR_PASTA='+lcNR_PASTA}) = -1
         error_sys(db_error())
      endif
      laRES:= db_fetchall()
      laPUT := {{'VAR_CIP_OUTORGANTE','VAR_CIP_OUTORGANTE_PFPJ','VAR_CIP_REPRESENTANTE','CIP_OUTORGANTE','VAR_CIP_OUTORGANTE_ANT'}}
      for ii:= 2 to len(laRES)
         lcITEM := alltrim(str(ii-1))
         aadd(laPUT,{'VAR_CIP_OUTORGANTE'+lcITEM,;
                     'VAR_CIP_OUTORGANTE'+lcITEM+'_PFPJ',;
                     'VAR_CIP_REPRESENTANTE'+lcITEM,;
                      laRES[ii,db_fetchncol(laRES,'CIP_OUTORGANTE')],;
                     'VAR_CIP_OUTORGANTE_ANT'+lcITEM})
         WPut('VAR_CIP_OUTORGANTE'+lcITEM,laRES[ii,db_fetchncol(laRES,'CIP_OUTORGANTE')])
         WPut('VAR_CIP_OUTORGANTE'+lcITEM+'_PFPJ',laRES[ii,db_fetchncol(laRES,'PFPJ')])
         WPut('VAR_CIP_REPRESENTANTE'+lcITEM,laRES[ii,db_fetchncol(laRES,'CIP_REPRESENTANTE')])
         WPut('VAR_CIP_OUTORGANTE_ANT'+lcITEM,laRES[ii,db_fetchncol(laRES,'CIP_OUTORGANTE')])
      next ii
      jj := len(laPUT) + 4
      for ii:= (ii-1) to jj
         lcITEM := alltrim(str(ii))
         aadd(laPUT,{'VAR_CIP_OUTORGANTE'+lcITEM,;
                     'VAR_CIP_OUTORGANTE'+lcITEM+'_PFPJ',;
                     'VAR_CIP_REPRESENTANTE'+lcITEM,;
                     '',;
                     'VAR_CIP_OUTORGANTE_ANT'+lcITEM})
      next ii
      WPut('lstOUTORGANTE',laPUT)

      /* Outorgados */
      laPUT    := {}
      laFIELDS := {'NR_PASTA',;
                   'CIP_OUTORGADO'}

      if lcACTION == 'SAVE' .and. gbWAC_WRITE
         ii      := 1
         lcITEM  := alltrim(str(ii))
         laSAVE  := {}
         laWHERE := {}
         aadd(laSAVE,laFIELDS)
         do while wGet('VAR_CIP_OUTORGADO'+lcITEM,'B')
            if ! empty(wGet('VAR_CIP_OUTORGADO'+lcITEM,'C'))
               aadd(laSAVE,{val(lcNR_PASTA),;
                            wGet('VAR_CIP_OUTORGADO'+lcITEM,'C')})
               aadd(laWHERE,'NR_PASTA='+lcNR_PASTA+' and CIP_OUTORGADO='+DLAP+wGet('VAR_CIP_OUTORGADO'+lcITEM,'C')+DLAP)

               // Remove registro anterior, caso ele foi duplicado
               if wGet('VAR_CIP_OUTORGADO_ANT'+lcITEM,'C') != wGet('VAR_CIP_OUTORGADO'+lcITEM,'C')
                  if db_delete('pasta_prc_outorgado','NR_PASTA='+lcNR_PASTA+' and CIP_OUTORGADO='+DLAP+wGet('VAR_CIP_OUTORGADO_ANT'+lcITEM,'C')+DLAP) = -1
                     error_sys(db_error())
                  endif
               endif
            endif
            ii++
            lcITEM := alltrim(str(ii))
         enddo
         if len(laSAVE) > 1
            if db_replace(laSAVE,'pasta_prc_outorgado',laWHERE) = -1
               error_sys(db_error())
            endif
         endif
      elseif lcACTION == 'OUTORGADO_DELETE'
         if db_delete('pasta_prc_outorgado','NR_PASTA='+lcNR_PASTA+' and CIP_OUTORGADO='+DLAP+wGet('CIP_OUTORGADO','C')+DLAP) = -1
            error_sys(db_error())
         endif
      endif


      if db_select({'pasta_prc_outorgado.NR_PASTA',;
                    'pasta_prc_outorgado.CIP_OUTORGADO',;
                    'pfpj.PFPJ'},;
                    'pasta_prc_outorgado',;
                    {{2,'pfpj','pfpj.CIP = pasta_prc_outorgado.CIP_OUTORGADO'}},;
                    {'NR_PASTA='+lcNR_PASTA}) = -1
         error_sys(db_error())
      endif
      laRES:= db_fetchall()
      laPUT := {{'VAR_CIP_OUTORGADO','VAR_CIP_OUTORGADO_PFPJ','CIP_OUTORGADO','VAR_CIP_OUTORGADO_ANT'}}
      for ii:= 2 to len(laRES)
         lcITEM := alltrim(str(ii-1))
         aadd(laPUT,{'VAR_CIP_OUTORGADO'+lcITEM,;
                     'VAR_CIP_OUTORGADO'+lcITEM+'_PFPJ',;
                     laRES[ii,db_fetchncol(laRES,'CIP_OUTORGADO')],;
                     'VAR_CIP_OUTORGADO_ANT'+lcITEM})
         WPut('VAR_CIP_OUTORGADO'+lcITEM,laRES[ii,db_fetchncol(laRES,'CIP_OUTORGADO')])
         WPut('VAR_CIP_OUTORGADO'+lcITEM+'_PFPJ',laRES[ii,db_fetchncol(laRES,'PFPJ')])
         WPut('VAR_CIP_OUTORGADO_ANT'+lcITEM,laRES[ii,db_fetchncol(laRES,'CIP_OUTORGADO')])
      next ii
      jj := len(laPUT) + 4
      for ii:= (ii-1) to jj
         lcITEM := alltrim(str(ii))
         aadd(laPUT,{'VAR_CIP_OUTORGADO'+lcITEM,;
                     'VAR_CIP_OUTORGADO'+lcITEM+'_PFPJ',;
                     'VAR_CIP_OUTORGADO'+lcITEM,''})
      next ii
      WPut('lstOUTORGADO',laPUT)



// sonia - Customizacao Leroy - 03/09/2015 09:10:47
   elseif pcUSER_INTERFACE == 'mnt.pasta.procuracao2.html' .or. pcUSER_INTERFACE == 'mnt.pasta.procuracao3.html'

//     wput('IFREPRESENTANTES',.F.)
         
      /* Poderes */

      laPUT1    := {}
      laFIELDS1 := {'NR_PASTA',;
                   'TP_PODER',;
                   'DESC_PODER'}

      if lcACTION == 'SAVE' .and. gbWAC_WRITE
         laSAVE1  := {}
         laWHERE1 := {}
         aadd(laSAVE1,laFIELDS1)
         IF ! empty(wGet('TP_PODER','C'))
            if empty(wGet('DESC_PODER','C'))
               walert('O Preenchimento da Descrição de Poder é obrigatório!')
               llERROR := .t.
            endif   
         endif
         if ! llERROR
/* Sonia - 2010-07-15 18:46:17 - Não permitir a inclusão de poderes em branco */         
            if !empty(wGet('TP_PODER','C')) .and. !empty(wGet('DESC_PODER','C'))
               aadd(laSAVE1,{val(lcNR_PASTA),;
                             wGet('TP_PODER','C'),;
                             wGet('DESC_PODER','C')})
               aadd(laWHERE1,'NR_PASTA='+lcNR_PASTA+' and TP_PODER='+DLAP+wGet('TP_PODER','C')+DLAP)
               //wout(debug2(laSAVE1,,20))
               if len(laSAVE1) > 1
                  /* Glauber 15/07/2010 - Solicitação da Célia para gravar no log a alteração do tipo de poder */
                  /* bloqueado por Sonia em 21/12/2010 17:02:04 = por solicitação da Celia - gerando sujeira na aba alterações.
                  psab_logs(laSAVE1,'pasta_tipo_poderes',laWHERE1[1],lcNR_PASTA,'Informações Principais') //Gravar log de alteraÃ§Ãµes da pasta
                  */               
                  if db_replace(laSAVE1,'pasta_tipo_poderes',laWHERE1) = -1

                     error_sys(db_error())
                  endif
               endif
            endif   
        endif
              
      elseif lcACTION == 'PODERES_DELETE'
         if db_delete('pasta_tipo_poderes','NR_PASTA='+lcNR_PASTA+' and TP_PODER='+DLAP+wGet('TP_PODER','C')+DLAP) = -1
            error_sys(db_error())
         endif
      endif
 
      if db_select({'pasta_tipo_poderes.NR_PASTA',;
                    'pasta_tipo_poderes.TP_PODER',;
                    'pasta_tipo_poderes.DESC_PODER'},;
                    'pasta_tipo_poderes',;
                    ,;
                    {'NR_PASTA='+lcNR_PASTA},,{'TP_PODER','DESC_PODER'}) = -1
         error_sys(db_error())
      endif
      laRESULT := db_fetchall()
       if len(laRESULT) > 1
          for ii := 2 to len(laRESULT)
             lcAUX := ''
             for xx := 1 to mlcount(laRESULT[ii,3],120)
                 if xx > 1
// bloqueio solicitado pela Celia - 1/11/2011 1:59:28 PM                 
//                   lcAUX += '<br>'
                 endif
                 lcAUX += memoline(laRESULT[ii,3],120,xx)
             next xx
             laRESULT[ii,3] := lcAUX

          next ii

          WPut('ifPODERES',.T.)
          WPut('lstXXXPODERES',laRESULT)
       else
          WPut('ifPODERES',.F.) 
       endif 

       
      /* Outorgantes */
      laPUT    := {}
      laFIELDS := {'NR_PASTA',;
                   'CIP_OUTORGANTE',;
                   'CIP_REPRESENTANTE'}

      if lcACTION == 'SAVE' .and. gbWAC_WRITE
         ii      := 1
         lcITEM  := alltrim(str(ii))
         laSAVE  := {}
         laWHERE := {}
         aadd(laSAVE,laFIELDS)
         do while wGet('VAR_CIP_OUTORGANTE'+lcITEM,'B')
            if ! empty(wGet('VAR_CIP_OUTORGANTE'+lcITEM,'C'))
               aadd(laSAVE,{val(lcNR_PASTA),;
                            wGet('VAR_CIP_OUTORGANTE'+lcITEM,'C'),;
                            wGet('VAR_CIP_REPRESENTANTEXX'+lcITEM,'C')})
               aadd(laWHERE,'NR_PASTA='+lcNR_PASTA+' and CIP_OUTORGANTE='+DLAP+wGet('VAR_CIP_OUTORGANTE'+lcITEM,'C')+DLAP+' and CIP_REPRESENTANTE='+DLAP+wGet('VAR_CIP_REPRESENTANTEXX'+lcITEM,'C')+DLAP)

               // Remove registro anterior, caso ele foi duplicado
               if wGet('VAR_CIP_OUTORGANTE_ANT'+lcITEM,'C') != wGet('VAR_CIP_OUTORGANTE'+lcITEM,'C')
                  if db_delete('pasta_prc_outorgante','NR_PASTA='+lcNR_PASTA+' and CIP_OUTORGANTE='+DLAP+wGet('VAR_CIP_OUTORGANTE_ANT'+lcITEM,'C')+DLAP+' and CIP_REPRESENTANTE='+DLAP+wGet('VAR_CIP_REPRESENTANTEXX'+lcITEM,'C')+DLAP) = -1
                     error_sys(db_error())
                  endif
               endif
            endif
            ii++
            lcITEM := alltrim(str(ii))
         enddo
         if len(laSAVE) > 1
            if db_replace(laSAVE,'pasta_prc_outorgante',laWHERE) = -1
               error_sys(db_error())
            endif
         endif
         laSAVE := {}
      elseif lcACTION == 'OUTORGANTE_DELETE'
         if db_delete('pasta_prc_outorgante','NR_PASTA='+lcNR_PASTA+' and CIP_OUTORGANTE='+DLAP+wGet('CIP_OUTORGANTE','C')+DLAP+' and CIP_REPRESENTANTE='+DLAP+wGet('VAR_CIP_REPRESENTANTE'+lcITEM,'C')+DLAP) = -1
            error_sys(db_error())
         endif
      endif

      if db_select({'pasta_prc_outorgante.NR_PASTA',;
                    'pasta_prc_outorgante.CIP_OUTORGANTE',;
                    'pfpj.PFPJ',;
                    'pasta_prc_outorgante.CIP_REPRESENTANTE',;
                    'pfpj_pasta_cip.PFPJ as PFPJ_REPRESENTANTE'},;
                    'pasta_prc_outorgante',;
                    {{2,'pfpj','pfpj.CIP=pasta_prc_outorgante.CIP_OUTORGANTE'},;
                     {2,'pfpj_pasta_cip','pfpj_pasta_cip.CIP=pasta_prc_outorgante.CIP_REPRESENTANTE'}},;
                    {'NR_PASTA='+lcNR_PASTA}) = -1
         error_sys(db_error())
      endif

      laRES:= db_fetchall()
//      wout(debug2(lares),,100)
      laPUT := {{'VAR_CIP_OUTORGANTE','VAR_CIP_OUTORGANTE_PFPJ','VAR_CIP_REPRESENTANTEXX','VAR_CIP_REPRESENTANTEXX_PFPJ','CIP_OUTORGANTE','VAR_CIP_OUTORGANTE_ANT'}}
      for ii:= 2 to len(laRES)
         lcITEM := alltrim(str(ii-1))
         aadd(laPUT,{'VAR_CIP_OUTORGANTE'+lcITEM,;
                     'VAR_CIP_OUTORGANTE'+lcITEM+'_PFPJ',;
                     'VAR_CIP_REPRESENTANTEXX'+lcITEM,;
                     'VAR_CIP_REPRESENTANTEXX'+lcITEM+'_PFPJ',;
                      laRES[ii,db_fetchncol(laRES,'CIP_OUTORGANTE')],;
                     'VAR_CIP_OUTORGANTE_ANT'+lcITEM})
         WPut('VAR_CIP_OUTORGANTE'+lcITEM,laRES[ii,db_fetchncol(laRES,'CIP_OUTORGANTE')])
         WPut('VAR_CIP_OUTORGANTE'+lcITEM+'_PFPJ',laRES[ii,db_fetchncol(laRES,'PFPJ')])
         WPut('VAR_CIP_REPRESENTANTEXX'+lcITEM,laRES[ii,db_fetchncol(laRES,'CIP_REPRESENTANTE')])
         WPut('VAR_CIP_REPRESENTANTEXX'+lcITEM+'_PFPJ',laRES[ii,db_fetchncol(laRES,'PFPJ_REPRESENTANTE')])
         WPut('VAR_CIP_OUTORGANTE_ANT'+lcITEM,laRES[ii,db_fetchncol(laRES,'CIP_OUTORGANTE')])
      next ii

      jj := len(laPUT) + 4
      for ii:= (ii-1) to jj
         lcITEM := alltrim(str(ii))
         aadd(laPUT,{'VAR_CIP_OUTORGANTE'+lcITEM,;
                     'VAR_CIP_OUTORGANTE'+lcITEM+'_PFPJ',;
                     'VAR_CIP_REPRESENTANTEXX'+lcITEM,;
                     'VAR_CIP_REPRESENTANTEXX'+lcITEM+'_PFPJ',;
                     '',;
                     'VAR_CIP_OUTORGANTE_ANT'+lcITEM})

      next ii
//             wout(debug2(laput),,100)
      WPut('lstOUTORGANTE',laPUT)

      /* Outorgados */
      laPUT    := {}
      laFIELDS := {'NR_PASTA',;
                   'CIP_OUTORGADO',;
                   'TP_PODER',;
                   'PODER_CONJUNTO'}

      if lcACTION == 'SAVE' .and. gbWAC_WRITE
         ii      := 1
         lcITEM  := alltrim(str(ii))
         laSAVE  := {}
         laWHERE := {}
         aadd(laSAVE,laFIELDS)
         do while wGet('VAR_CIP_OUTORGADOX'+lcITEM,'B')
            if ! empty(wGet('VAR_CIP_OUTORGADOX'+lcITEM,'C'))
            
               aadd(laSAVE,{val(lcNR_PASTA),;
                            wGet('VAR_CIP_OUTORGADOX'+lcITEM,'C'),;
                            wGet('VAR_TP_PODERX'+lcITEM,'C'),;
                            wGet('VAR_PODER_CONJUNTOX'+lcITEM,'C')})
            
//               aadd(laWHERE,'NR_PASTA='+lcNR_PASTA+' and CIP_OUTORGADO='+DLAP+wGet('VAR_CIP_OUTORGADOX'+lcITEM,'C')+DLAP+' and TP_PODER='+DLAP+wGet('VAR_TP_PODERX'+lcITEM,'C')+DLAP)
               aadd(laWHERE,'NR_PASTA='+lcNR_PASTA+' and CIP_OUTORGADO='+DLAP+wGet('VAR_CIP_OUTORGADOX'+lcITEM,'C')+DLAP)
            endif
            ii++
            lcITEM := alltrim(str(ii))
         enddo
         if len(laSAVE) > 1
            if db_replace(laSAVE,'pasta_prcp_outorgado',laWHERE) = -1
               error_sys(db_error())
            endif
         endif
      elseif lcACTION == 'OUTORGADO_DELETE'
         if db_delete('pasta_prcp_outorgado','NR_PASTA='+lcNR_PASTA+' and CIP_OUTORGADO='+DLAP+wGet('CIP_OUTORGADO','C')+DLAP) = -1
            error_sys(db_error())
         endif
      endif
      laRES := {}
      ii    := 1

      if db_select({'pasta_prcp_outorgado.NR_PASTA',;
                    'pasta_prcp_outorgado.CIP_OUTORGADO',;
                    'pfpj.PFPJ',;
                    'pasta_prcp_outorgado.TP_PODER',;
                    'pasta_prcp_outorgado.PODER_CONJUNTO'},;
                    'pasta_prcp_outorgado',;
                    {{2,'pfpj','pfpj.CIP = pasta_prcp_outorgado.CIP_OUTORGADO'}},;
                    {'NR_PASTA='+lcNR_PASTA}) = -1
         error_sys(db_error())
      endif
      laRES:= db_fetchall()
      /* GLAUBER 17/06 - INCLUIR PODER CONJUNTO */
      laPUT := {{'VAR_CIP_OUTORGADOX','VAR_CIP_OUTORGADOX_PFPJ','VAR_TP_PODERX','VAR_PODER_CONJUNTOX','CIP_OUTORGADO','VAR_CIP_OUTORGADOX_ANT'}}
      for ii:= 2 to len(laRES)
         lcITEM := alltrim(str(ii-1))
         aadd(laPUT,{'VAR_CIP_OUTORGADOX'+lcITEM,;
                     'VAR_CIP_OUTORGADOX'+lcITEM+'_PFPJ',;
                     'VAR_TP_PODERX'+lcITEM,;
                     'VAR_PODER_CONJUNTOX'+lcITEM,;
                     laRES[ii,db_fetchncol(laRES,'CIP_OUTORGADO')],;
                     'VAR_CIP_OUTORGADOX_ANT'+lcITEM})
                     
         WPut('VAR_CIP_OUTORGADOX'+lcITEM,laRES[ii,db_fetchncol(laRES,'CIP_OUTORGADO')])
         WPut('VAR_CIP_OUTORGADOX'+lcITEM+'_PFPJ',laRES[ii,db_fetchncol(laRES,'PFPJ')])
         wPut('VAR_TP_PODERX'+lcITEM+'.optionvalue',laTP_PODER)
         WPut('VAR_TP_PODERX'+lcITEM,laRES[ii,db_fetchncol(laRES,'TP_PODER')])
         WPut('VAR_PODER_CONJUNTOX'+lcITEM,laRES[ii,db_fetchncol(laRES,'PODER_CONJUNTO')])
         WPut('VAR_CIP_OUTORGADO_ANT'+lcITEM,laRES[ii,db_fetchncol(laRES,'CIP_OUTORGADO')])
         
      next ii
      jj := len(laPUT) + 4
      for ii:= (ii-1) to jj
         lcITEM := alltrim(str(ii))
         aadd(laPUT,{'VAR_CIP_OUTORGADOX'+lcITEM,;
                     'VAR_CIP_OUTORGADOX'+lcITEM+'_PFPJ',;
                     'VAR_TP_PODERX'+lcITEM,;
                     'VAR_PODER_CONJUNTOX'+lcITEM,;
                     '',;
                     'VAR_CIP_OUTORGADOX_ANT'+lcITEM,''})
      next ii
      WPut('lstOUTORGADO',laPUT)
      
// inicio da alteração sonia - 03/09/2015 09:12:48
      /* Representante */
      laPUT    := {}
      laFIELDS := {'NR_PASTA',;
                   'CIP_REPRESENTANTE',;
                   'TP_PODER'}

      if lcACTION == 'SAVE' .and. gbWAC_WRITE
         ii      := 1
         lcITEM  := alltrim(str(ii))
         laSAVE  := {}
         laWHERE := {}
         aadd(laSAVE,laFIELDS)
         do while wGet('VAR_CIP_REPRESENTANTE'+lcITEM,'B')
            if ! empty(wGet('VAR_CIP_REPRESENTANTE'+lcITEM,'C'))
            
               aadd(laSAVE,{val(lcNR_PASTA),;
                            wGet('VAR_CIP_REPRESENTANTE'+lcITEM,'C'),;
                            wGet('VAR_TP_PODERY'+lcITEM,'C')})
            
               aadd(laWHERE,'NR_PASTA='+lcNR_PASTA+' and CIP_REPRESENTANTE='+DLAP+wGet('VAR_CIP_REPRESENTANTE'+lcITEM,'C')+DLAP)
            endif
            ii++
            lcITEM := alltrim(str(ii))
         enddo
         if len(laSAVE) > 1
            if db_replace(laSAVE,'pasta_prc_repres',laWHERE) = -1
               error_sys(db_error())
            endif
         endif
      elseif lcACTION == 'REPRESENTANTE_DELETE'
         if db_delete('pasta_prc_repres','NR_PASTA='+lcNR_PASTA+' and CIP_REPRESENTANTE='+DLAP+wGet('VAR_CIP_REPRESENTANTE'+lcITEM,'C')+DLAP) = -1
            error_sys(db_error())
         endif
      endif
      laRES := {}
      ii    := 1

      if db_select({'pasta_prc_repres.NR_PASTA',;
                    'pasta_prc_repres.CIP_REPRESENTANTE',;
                    'pfpj.PFPJ',;
                    'pasta_prc_repres.TP_PODER'},;
                    'pasta_prc_repres',;
                    {{2,'pfpj','pfpj.CIP = pasta_prc_repres.CIP_REPRESENTANTE'}},;
                    {'NR_PASTA='+lcNR_PASTA}) = -1
         error_sys(db_error())
      endif
      laRES:= db_fetchall()
      laPUT := {{'VAR_CIP_REPRESENTANTE','VAR_CIP_REPRESENTANTE_PFPJ','VAR_TP_PODER','CIP_REPRESENTANTE','VAR_CIP_REPRESENTANTE_ANT'}}
      for ii:= 2 to len(laRES)
         lcITEM := alltrim(str(ii-1))
         aadd(laPUT,{'VAR_CIP_REPRESENTANTE'+lcITEM,;
                     'VAR_CIP_REPRESENTANTE'+lcITEM+'_PFPJ',;
                     'VAR_TP_PODER'+lcITEM,;
                     laRES[ii,db_fetchncol(laRES,'CIP_REPRESENTANTE')],;
                     'VAR_CIP_REPRESENTANTE_ANT'+lcITEM})
                     
         WPut('VAR_CIP_REPRESENTANTE'+lcITEM,laRES[ii,db_fetchncol(laRES,'CIP_REPRESENTANTE')])
         WPut('VAR_CIP_REPRESENTANTE'+lcITEM+'_PFPJ',laRES[ii,db_fetchncol(laRES,'PFPJ')])
         wPut('VAR_TP_PODER'+lcITEM+'.optionvalue',laTP_PODER)
         WPut('VAR_TP_PODER'+lcITEM,laRES[ii,db_fetchncol(laRES,'TP_PODER')])
         WPut('VAR_CIP_REPRESENTANTE_ANT'+lcITEM,laRES[ii,db_fetchncol(laRES,'CIP_REPRESENTANTE')])
         
      next ii
      jj := len(laPUT) + 4
      for ii:= (ii-1) to jj
         lcITEM := alltrim(str(ii))
         aadd(laPUT,{'VAR_CIP_REPRESENTANTE'+lcITEM,;
                     'VAR_CIP_REPRESENTANTE'+lcITEM+'_PFPJ',;
                     'VAR_TP_PODER'+lcITEM,;
                     '',;
                     'VAR_CIP_REPRESENTANTE_ANT'+lcITEM,''})
      next ii
//     wout(debug2(laput),,200)
      WPut('lstREPRESENTANTE',laPUT)
      

// termino da alteraçao sonia - 03/09/2015 09:13:06      
 
      /* Empresas */
      laPUT    := {}
      laFIELDS := {'NR_PASTA',;
                   'CIP_EMPRESA'}

      if lcACTION == 'SAVE'  .and. gbWAC_WRITE 
         ii      := 1
         lcITEM  := alltrim(str(ii))
         laSAVE  := {}
         laWHERE := {}
         aadd(laSAVE,laFIELDS)
         do while wGet('VAR_CIP_EMPRESA'+lcITEM,'B')
            if ! empty(wGet('VAR_CIP_EMPRESA'+lcITEM,'C'))
               aadd(laSAVE,{val(lcNR_PASTA),;
                            wGet('VAR_CIP_EMPRESA'+lcITEM,'C')})
               aadd(laWHERE,'NR_PASTA='+lcNR_PASTA+' and CIP_EMPRESA='+DLAP+wGet('VAR_CIP_EMPRESA'+lcITEM,'C')+DLAP)

               // Remove registro anterior, caso ele foi duplicado
               if wGet('VAR_CIP_EMPRESA_ANT'+lcITEM,'C') != wGet('VAR_CIP_EMPRESA'+lcITEM,'C')
                  if db_delete('pasta_empresa','NR_PASTA='+lcNR_PASTA+' and CIP_EMPRESA='+DLAP+wGet('VAR_CIP_EMPRESA_ANT'+lcITEM,'C')+DLAP) = -1
                     error_sys(db_error())
                  endif
               endif
            else
               aadd(laSAVE,{val(lcNR_PASTA),;
                            wGet('CIP_EMPRESA','C')})
               aadd(laWHERE,'NR_PASTA='+lcNR_PASTA+' and CIP_EMPRESA='+DLAP+wGet('CIP_EMPRESA','C')+DLAP)
            endif
            ii++
            lcITEM := alltrim(str(ii))
         enddo
         if len(laSAVE) > 1
            if db_replace(laSAVE,'pasta_empresa',laWHERE) = -1
               error_sys(db_error())
            endif
         endif
         // Glauber 14/10/2010 - Inclusão da alçada
         laSAVE := {{'NR_PASTA','TP_PODERALCADA','TIPO_ATUACAO','COMBINACAO_PODER','ALCADA_PASTA'}}
         laRES := {}
         laWhere1 := {}
         // Sonia 17/12/2010 17:12:15 - Correção - Gravando branco na pasta_proc_alcada
         // erro detectado na homologação
         if !empty(WGet('TP_PODERALCADA','C')) .or. !empty(WGet('TIPO_ATUACAO','C')) .or. !empty(WGet('COMBINACAO_PODER','C')) .or. !empty(WGet('ALCADA_PASTA','C'))   
            if empty(WGet('TP_PODERALCADA','C'))     // o Campo não pode fica vazio
               walert('O Tipo de Poder é de preenchimento obrigatório.')
               get2put()
            elseif empty(WGet('TIPO_ATUACAO','C'))     // o Campo não pode fica vazio
               walert('O Tipo de Atuação é de preenchimento obrigatório.')
               get2put()
            elseif empty(WGet('COMBINACAO_PODER','C'))     // o Campo não pode fica vazio
               walert('O Combinação de Poderes é de preenchimento obrigatório.')
               get2put()
            else                    
               for ii := 1 to len(laSAVE[1])
                   if laSAVE[1,ii] == 'NR_PASTA' .and. WGet('NR_PASTA') == 0
                      aadd(laRES,lcNR_PASTA)
                   else   
                      aadd(laRES,WGet(laSAVE[1,ii]))
                   endif   
               next ii
               aadd(laSAVE,laRES)
               aadd(laWHERE1,'NR_PASTA='+lcNR_PASTA+' and TP_PODERALCADA='+DLAP+wGet('TP_PODERALCADA','C')+DLAP + ' and TIPO_ATUACAO='+DLAP+wGet('TIPO_ATUACAO','C')+DLAP + ' and COMBINACAO_PODER='+DLAP+wGet('COMBINACAO_PODER','C')+DLAP)

               if len(laSAVE) > 1
               // sonia 2/11/2011 10:28:23 AM - solicitação celia
                   psab_logs(laSAVE,'pasta_proc_alcada',laWHERE1[1],lcNR_PASTA,'Informações Principais') //Gravar log de alteraÃ§Ãµes da pasta
                   if db_replace(laSAVE,'pasta_proc_alcada',{'NR_PASTA='+lcNR_PASTA+' and TP_PODERALCADA='+DLAP+wGet('TP_PODERALCADA','C')+DLAP + ' and TIPO_ATUACAO='+DLAP+wGet('TIPO_ATUACAO','C')+DLAP + ' and COMBINACAO_PODER='+DLAP+wGet('COMBINACAO_PODER','C')+DLAP}) = -1
                     error_sys(db_error())
                  endif
               endif
            endif
         endif   
      elseif lcACTION == 'EMPRESA_DELETE'
         if db_select({'pasta_cip.WFIELD','pasta_cip.CIP'},'pasta_cip',,{'NR_PASTA='+DLAP+lcNR_PASTA+DLAP+' and CIP='+DLAP+wGet('CIP_EMPRESA','C')+DLAP+' and WFIELD='+DLAP+'CIP_EMPRESA'+DLAP}) == -1
            error_sys(db_error())
         endif
         laRESULT := db_fetchall()
         if len(laRESULT) > 1
            walert('Esta empresa é a principal !! \n Favor alterar a Empresa Principal antes de deletar da Grid ')
         else 
            if db_delete('pasta_empresa','NR_PASTA='+lcNR_PASTA+' and CIP_EMPRESA='+DLAP+wGet('CIP_EMPRESA','C')+DLAP) = -1
               error_sys(db_error())
            endif
         endif   
      endif

      if db_select({'pasta_empresa.NR_PASTA',;
                    'pasta_empresa.CIP_EMPRESA',;
                    'pfpj.PFPJ',;
                    'pfpj.CD_GRP_ECONOMICO',;
                    'grupo_economico.NM_GRP_ECONOMICO'},;
                    'pasta_empresa',;
                    {{2,'pfpj','pfpj.CIP = pasta_empresa.CIP_EMPRESA'},;
                     {2,'grupo_economico','pfpj.CD_GRP_ECONOMICO = grupo_economico.CD_GRP_ECONOMICO'}},;
                    {'NR_PASTA='+lcNR_PASTA}) = -1
         error_sys(db_error())
      endif
 
      laRES:= db_fetchall()
              
      laPUT := {{'VAR_CIP_EMPRESA','VAR_CIP_EMPRESA_PFPJ','VAR_CD_GRP_ECONOMICO','VAR_NM_GRP_ECONOMICO','CIP_EMPRESA','VAR_CIP_EMPRESA_ANT'}}
      for ii:= 2 to len(laRES)
         lcITEM := alltrim(str(ii-1))
         aadd(laPUT,{'VAR_CIP_EMPRESA'+lcITEM,;
                     'VAR_CIP_EMPRESA'+lcITEM+'_PFPJ',;
                     'VAR_CD_GRP_ECONOMICO'+lcITEM,;
                     'VAR_NM_GRP_ECONOMICO'+lcITEM,;
                     laRES[ii,db_fetchncol(laRES,'CIP_EMPRESA')],;
                     'VAR_CIP_EMPRESA_ANT'+lcITEM})
 
 
 
         WPut('VAR_CIP_EMPRESA'+lcITEM,laRES[ii,db_fetchncol(laRES,'CIP_EMPRESA')])
         WPut('VAR_CIP_EMPRESA'+lcITEM+'_PFPJ',laRES[ii,db_fetchncol(laRES,'PFPJ')])
         WPut('VAR_CD_GRP_ECONOMICO'+lcITEM,laRES[ii,db_fetchncol(laRES,'CD_GRP_ECONOMICO')])
         WPut('VAR_NM_GRP_ECONOMICO'+lcITEM,laRES[ii,db_fetchncol(laRES,'NM_GRP_ECONOMICO')])
         WPut('VAR_CIP_EMPRESA_ANT'+lcITEM,laRES[ii,db_fetchncol(laRES,'CIP_EMPRESA')])
      next ii
// Glauber 19/10 - Alteração da quantidade de empresas disponíveis para inclusão de 5 para 10.
//      jj := len(laPUT) + 4
// Sonia 13/10/2011 - Alteração da quantidade de empresas disponíveis para inclusão de 10 para 20.
//      jj := len(laPUT) + 9
      jj := len(laPUT) + 19
      for ii:= (ii-1) to jj
         lcITEM := alltrim(str(ii))
         aadd(laPUT,{'VAR_CIP_EMPRESA'+lcITEM,;
                     'VAR_CIP_EMPRESA'+lcITEM+'_PFPJ',;
                     'VAR_CD_GRP_ECONOMICO'+lcITEM,;
                     'VAR_NM_GRP_ECONOMICO'+lcITEM,;
                     'VAR_CIP_EMPRESA_ANT'+lcITEM,''})
      next ii
      WPut('lstEMPRESA',laPUT)

     /* Representantes */
      laPUT    := {}
      laFIELDS := {'NR_PASTA',;
                   'CIP_REPRESENTANTE',;
                   'CIP_EMPRESA'}

      if lcACTION == 'SAVE' .and. gbWAC_WRITE
         ii      := 1
         lcITEM  := alltrim(str(ii))
         laSAVE  := {}
         laWHERE := {}
         aadd(laSAVE,laFIELDS)
         do while wGet('VAR_CIP_REPRESENTANTE'+lcITEM,'B')
            if ! empty(wGet('VAR_CIP_REPRESENTANTE'+lcITEM,'C'))
               aadd(laSAVE,{val(lcNR_PASTA),;
                            wGet('VAR_CIP_REPRESENTANTE'+lcITEM,'C'),;
                            wGet('VAR_CIP_EMPRESAX'+lcITEM,'C')})
               aadd(laWHERE,'NR_PASTA='+lcNR_PASTA+' and CIP_REPRESENTANTE='+DLAP+wGet('VAR_CIP_REPRESENTANTE'+lcITEM,'C')+DLAP)

               // Remove registro anterior, caso ele foi duplicado
               if wGet('VAR_CIP_REPRESENTANTE_ANT'+lcITEM,'C') != wGet('VAR_CIP_REPRESENTANTE'+lcITEM,'C')
                  if db_delete('pasta_empresa_repr','NR_PASTA='+lcNR_PASTA+' and CIP_REPRESENTANTE='+DLAP+wGet('VAR_CIP_REPRESENTANTE_ANT'+lcITEM,'C')+DLAP) = -1
                     error_sys(db_error())
                  endif
               endif
            endif
            ii++
            lcITEM := alltrim(str(ii))
         enddo
         if len(laSAVE) > 1
            if db_replace(laSAVE,'pasta_empresa_repr',laWHERE) = -1
               error_sys(db_error())
            endif
         endif
         laSAVE := {}
      elseif lcACTION == 'REPRESENTANTE_DELETE'
         if db_delete('pasta_empresa_repr','NR_PASTA='+lcNR_PASTA+' and CIP_REPRESENTANTE='+DLAP+wGet('CIP_REPRESENTANTE','C')+DLAP) = -1
            error_sys(db_error())
         endif
       // Glauber 14/10/2010 Manutenção da Grid de Alçada
      elseif lcACTION == 'ALCADA_DELETE'
         if db_delete('pasta_proc_alcada','NR_PASTA='+lcNR_PASTA+' and TP_PODERALCADA='+DLAP+wGet('TP_PODERALCADA','C')+DLAP + ' and TIPO_ATUACAO='+DLAP+wGet('TIPO_ATUACAO','C')+DLAP + ' and COMBINACAO_PODER='+DLAP+wGet('COMBINACAO_PODER','C')+DLAP) = -1
            error_sys(db_error())
         endif

      endif

      if db_select({'pasta_empresa_repr.NR_PASTA',;
                    'pasta_empresa_repr.CIP_REPRESENTANTE',;
                    'pfpj.PFPJ',;
                    'pasta_empresa_repr.CIP_EMPRESA'},;
                    'pasta_empresa_repr',;
                    {{2,'pfpj','pfpj.CIP=pasta_empresa_repr.CIP_REPRESENTANTE'}},;
                    {'NR_PASTA='+lcNR_PASTA}) = -1
         error_sys(db_error())
      endif
      laRESULT := db_fetchall()
       if len(laRESULT) > 1
          for ii := 2 to len(laRESULT)
             lcAUX := ''
             for xx := 1 to mlcount(laRESULT[ii,3],100)
                 if xx > 1
                   lcAUX += '<br>'
                 endif
                 lcAUX += memoline(laRESULT[ii,3],100,xx)
             next xx
             laRESULT[ii,3] := lcAUX

          next ii
       endif   

      if db_select({'pasta_empresa_repr.NR_PASTA',;
                    'pasta_empresa_repr.CIP_REPRESENTANTE',;
                    'pfpj.PFPJ',;
                    'pasta_empresa_repr.CIP_EMPRESA'},;
                    'pasta_empresa_repr',;
                    {{2,'pfpj','pfpj.CIP=pasta_empresa_repr.CIP_REPRESENTANTE'}},;
                    {'NR_PASTA='+lcNR_PASTA}) = -1
         error_sys(db_error())
      endif

      laRES:= db_fetchall()
      laPUT := {{'VAR_CIP_REPRESENTANTE','VAR_CIP_REPRESENTANTE_PFPJ','VAR_CIP_EMPRESAX','CIP_REPRESENTANTE','VAR_CIP_REPRESENTANTE_ANT'}}
      for ii:= 2 to len(laRES)
         lcITEM := alltrim(str(ii-1))
         aadd(laPUT,{'VAR_CIP_REPRESENTANTE'+lcITEM,;
                     'VAR_CIP_REPRESENTANTE'+lcITEM+'_PFPJ',;
                     'VAR_CIP_EMPRESAX'+lcITEM,;
                      laRES[ii,db_fetchncol(laRES,'CIP_REPRESENTANTE')],;
                     'VAR_CIP_REPRESENTANTE_ANT'+lcITEM})
         WPut('VAR_CIP_REPRESENTANTE'+lcITEM,laRES[ii,db_fetchncol(laRES,'CIP_REPRESENTANTE')])
         WPut('VAR_CIP_REPRESENTANTE'+lcITEM+'_PFPJ',laRES[ii,db_fetchncol(laRES,'PFPJ')])
         WPut('VAR_CIP_EMPRESAX'+lcITEM,laRES[ii,db_fetchncol(laRES,'CIP_EMPRESA')])
         WPut('VAR_CIP_REPRESENTANTE_ANT'+lcITEM,laRES[ii,db_fetchncol(laRES,'CIP_REPRESENTANTE')])
      next ii
      jj := len(laPUT) + 4
      for ii:= (ii-1) to jj
         lcITEM := alltrim(str(ii))
         aadd(laPUT,{'VAR_CIP_REPRESENTANTE'+lcITEM,;
                     'VAR_CIP_REPRESENTANTE'+lcITEM+'_PFPJ',;
                     'VAR_CIP_EMPRESAX'+lcITEM,;
                     '',;
                     'VAR_CIP_REPRESENTANTE_ANT'+lcITEM})
      next ii
      WPut('lstREPRESENTANTE',laPUT)


       // Glauber 14/10/2010 - Grid de alçada

      if db_select({'pasta_proc_alcada.TP_PODERALCADA',;
                    'pasta_proc_alcada.TIPO_ATUACAO',;
                    'pasta_proc_alcada.COMBINACAO_PODER',;
                    'pasta_proc_alcada.ALCADA_PASTA'},;
                    'pasta_proc_alcada',;
                    ,;
                    {'NR_PASTA='+lcNR_PASTA}) = -1
         error_sys(db_error())
      endif
      laRESULT := db_fetchall()
       if len(laRESULT) > 1
          WPut('ifALCADA',.T.)
          WPut('lstALCADA',laRESULT)
          // Glauber 21/10 teste grid alçada 
/*
          aadd(laRESULT[1],'(row)')
          for ii := 2 to len(laRESULT)
                aadd(laRESULT[ii],'(row)'+wic_action('wicaction/mnt.pasta.html?'+;
                                                 'TP_PASTA='+lcTP_PASTA+;
                                                 '&NR_PASTA='+lcNR_PASTA+;
                                                 '&TP_PODERALCADA='+laRESULT[ii, db_fetchncol(laRESULT,'TP_PODERALCADA')]+;
                                                 '&TIPO_ATUACAO='+laRESULT[ii, db_fetchncol(laRESULT,'TIPO_ATUACAO')]+;
                                                 '&COMBINACAO_PODER='+laRESULT[ii, db_fetchncol(laRESULT,'COMBINACAO_PODER')]+;
                                                 '&ACTION=ALTER'))
          
          next ii
          WPut('GRID_ALCADAS_COMBINACOES',grid_create(laRESULT))
*/
       else
          WPut('ifALCADA',.F.) 
       endif 

       if lcACTION == 'ALTER'
          //wout('Combinação:'+wGet('COMBINACAO_PODER','C'))
          if db_select({'pasta_proc_alcada.NR_PASTA',;
                    'pasta_proc_alcada.TP_PODERALCADA',;
                    'pasta_proc_alcada.TIPO_ATUACAO',;
                    'pasta_proc_alcada.COMBINACAO_PODER',;
                    'pasta_proc_alcada.ALCADA_PASTA'},;
                    'pasta_proc_alcada',;
                    ,;
                    {'NR_PASTA='+lcNR_PASTA+' and TP_PODERALCADA='+DLAP+wGet('TP_PODERALCADA','C')+DLAP + ' and TIPO_ATUACAO='+DLAP+wGet('TIPO_ATUACAO','C')+DLAP + ' and COMBINACAO_PODER='+DLAP+wGet('COMBINACAO_PODER','C')+DLAP}) = -1
             error_sys(db_error())
          endif
          laRESULT := db_fetchall()
          if len(laRESULT) > 1
             db2put(laRESULT)
          endif 
       endif
       


      // Final do procuração2
   


   elseif pcUSER_INTERFACE == 'mnt.pasta.societario.html'  
      if ! empty(alltrim(getWput('CIP_EMPRESA')))
         if db_select({'CNPJ_CPF'},'pfpj',,{'CIP='+DLAP+getWput('CIP_EMPRESA')+DLAP}) = -1
            error_sys(db_error())
         endif

         laRES := db_fetchall()
         if len(laRES) > 1
            // Filiais Inativas
            if db_select({'count(*)'},'pfpj',,{'substring(CNPJ_CPF,1,9) = substring('+DLAP+laRES[2,db_fetchncol(laRES,'CNPJ_CPF')]+DLAP+',1,9)','FL_PFPJ='+DLAP+'I'+DLAP+' or FL_PFPJ='+DLAP+'E'+DLAP}) = -1
               error_sys(db_error())
            endif
            laRESULT := db_fetchrow()
            WPut('FI',laRESULT[1])

            // Filiais Ativas
            if db_select({'count(*)'},'pfpj',,{'substring(CNPJ_CPF,1,9) = substring('+DLAP+laRES[2,db_fetchncol(laRES,'CNPJ_CPF')]+DLAP+',1,9)','FL_PFPJ<>'+DLAP+'I'+DLAP+' and FL_PFPJ<>'+DLAP+'E'+DLAP}) = -1
               error_sys(db_error())
            endif
            laRESULT := db_fetchrow()
            WPut('FA',laRESULT[1])
        endif
      endif
// Customização VPAR - QTD_QUOTAS_ACOES
  // alteração do calculo de participaçõesem 6/5/2011 17:10:11
// Sonia Perdigão 


   elseif pcUSER_INTERFACE == 'mnt.pasta.societario4.html'
// TESTE SONIA - 5/15/2014 2:45:44 PM
      if ! empty(alltrim(getWput('CIP_EMPRESA')))
         if db_select({'CNPJ_CPF'},'pfpj',,{'CIP='+DLAP+getWput('CIP_EMPRESA')+DLAP}) = -1
            error_sys(db_error())
         endif

         laRES := db_fetchall()
         if len(laRES) > 1
            // Filiais Inativas
            if db_select({'count(*)'},'pfpj',,{'substring(CNPJ_CPF,1,9) = substring('+DLAP+laRES[2,db_fetchncol(laRES,'CNPJ_CPF')]+DLAP+',1,9)','FL_PFPJ='+DLAP+'I'+DLAP+' or FL_PFPJ='+DLAP+'E'+DLAP}) = -1
               error_sys(db_error())
            endif
            laRESULT := db_fetchrow()
            WPut('FI',laRESULT[1])

            // Filiais Ativas
            if db_select({'count(*)'},'pfpj',,{'substring(CNPJ_CPF,1,9) = substring('+DLAP+laRES[2,db_fetchncol(laRES,'CNPJ_CPF')]+DLAP+',1,9)','FL_PFPJ<>'+DLAP+'I'+DLAP+' and FL_PFPJ<>'+DLAP+'E'+DLAP}) = -1
               error_sys(db_error())
            endif
            laRESULT := db_fetchrow()
            WPut('FA',laRESULT[1])
        endif
      endif
// FIM DO TESTE SONIA
   if db_select({'sum(QTD_QUOTAS_ACOES)'},'pasta_emissao_acoes',,{'NR_PASTA = '+lcNR_PASTA}) == -1
      error_sys(db_error())
   endif

   laRESULT := db_fetchrow()

   if len(laRESULT) > 0
      LNTOTAL_QUOTAS := laRESULT[1]
   endif     
// alterado em 08/06/2012 16:50:59 - Sonia Perdigao
// Customização VPar    
//   if db_select({'sum(QTD_QUOTAS_ACOES)'},'pasta_sct_socios',,{'NR_PASTA = '+lcNR_PASTA}) == -1
   lcINATIVO := 'N'
   if db_select({'sum(QTD_QUOTAS_ACOES)'},'pasta_sct_socios',,{'NR_PASTA = '+lcNR_PASTA +' AND FL_ATIVO <> '+DLAP+lcINATIVO+DLAP }) == -1
      error_sys(db_error())
   endif
   laRES_ACOES  := db_fetchrow()

   if len(laRES_ACOES) > 0
      lnTOTAL1 := laRES_ACOES[1]
   endif
      
   if lnTOTAL1 <> lnTOTAL_QUOTAS
      lndiferenca := lnTOTAL_QUOTAS - lnTOTAL1
      if lndiferenca <> 0
         if lndiferenca > 0
            if lndiferenca == 1
               walert('Divergência !! Falta '+ alltrim(str(int(lndiferenca))) + ' Ação')
            else
               walert('Divergência !! Faltam '+ alltrim(str(int(lndiferenca))) + ' Ações')
            endif   
         else
            if lndiferenca == - 1
               walert('Divergência !! Lançamento de '+ alltrim(str(int(lndiferenca)*-1)) + ' Ação')
            else
               walert('Divergência !! Lançamento de '+ alltrim(str(int(lndiferenca)*-1)) + ' Ações')
            endif   
         endif
      endif
   endif


      /* Emissao */
      laPUT    := {}
      laFIELDS := {'NR_PASTA',;
                   'TP_PARTICIPACAO',;
                   'QTD_QUOTAS_ACOES'}

      if lcACTION == 'SAVE' .and. gbWAC_WRITE
         ii      := 1
         lcITEM  := alltrim(str(ii))
         laSAVE  := {}
         laWHERE := {}
         aadd(laSAVE,laFIELDS)
         do while wGet('VAR_TP_PARTICIPACAO'+lcITEM,'B')
            if ! empty(wGet('VAR_TP_PARTICIPACAO'+lcITEM,'C'))
               aadd(laSAVE,{val(lcNR_PASTA),;
                            wGet('VAR_TP_PARTICIPACAO'+lcITEM,'C'),;
                            wGet('VAR_QTD_QUOTAS_ACOES'+lcITEM,'C')})
               aadd(laWHERE,'NR_PASTA='+lcNR_PASTA+' and TP_PARTICIPACAO='+DLAP+wGet('VAR_TP_PARTICIPACAO'+lcITEM,'C')+DLAP)

               // Remove registro anterior, caso ele foi duplicado
               if wGet('VAR_TP_PARTICIPACAO_ANT'+lcITEM,'C') != wGet('VAR_CIP_PARTICIPACAO'+lcITEM,'C')
                  if db_delete('pasta_emissao_acoes','NR_PASTA='+lcNR_PASTA+' and TP_PARTICIPACAO='+DLAP+wGet('VAR_TP_PARTICIPACAO_ANT'+lcITEM,'C')+DLAP) = -1
                     error_sys(db_error())
                  endif
               endif
            endif
            ii++
            lcITEM := alltrim(str(ii))
         enddo
// sonia 1/11/2011 4:14:37 PM    
// recalcular participacao dos socios          
// alterado o pc_participacao para 8,4 e fl_ativo para desconsiderar a contagem
         if len(laSAVE) > 1
            if db_replace(laSAVE,'pasta_emissao_acoes',laWHERE) = -1
               error_sys(db_error())
            endif
            lcinativo := 'N'            
//            if db_select({'QTD_QUOTAS_ACOES','PC_PARTICIPACAO','NR_CONTROLE','TP_PARTICIPACAO','FL_ATIVO'},'pasta_sct_socios',,{'NR_PASTA='+lcNR_PASTA+' and TP_PARTICIPACAO='+DLAP+wGet('VAR_TP_PARTICIPACAO'+lcITEM,'C')+DLAP+'and FL_ATIVO <> '+dlap+lcINATIVO+dlap}) = -1
//            if db_select({'QTD_QUOTAS_ACOES','PC_PARTICIPACAO','NR_CONTROLE','TP_PARTICIPACAO','FL_ATIVO'},'pasta_sct_socios',,{'NR_PASTA='+lcNR_PASTA+' and TP_PARTICIPACAO='+DLAP+wGet('VAR_TP_PARTICIPACAO'+lcITEM,'C')+DLAP+'and FL_ATIVO <> '+dlap+lcINATIVO+dlap}) = -1
            if db_select({'QTD_QUOTAS_ACOES','TP_PARTICIPACAO'},'pasta_emissao_acoes',,{'NR_PASTA='+lcNR_PASTA}) = -1
               error_sys(db_error())
            endif
            
            laRES1 := db_fetchall()
                if len(laRES1) > 0
               for jj := 2 to len(laRES1)
                  lnQTD_QUOTAS :=  laRES1[jj,1]
                  lcPARTICIPA := laRES1[jj,2]
//                if db_select({'QTD_QUOTAS_ACOES','PC_PARTICIPACAO','NR_CONTROLE','TP_PARTICIPACAO'},'pasta_sct_socios',,{'NR_PASTA='+lcNR_PASTA+' and TP_PARTICIPACAO='+DLAP+wGet('VAR_TP_PARTICIPACAO'+lcITEM,'C')+DLAP+'and FL_ATIVO <> '+dlap+lcINATIVO+dlap})  = -1
                  if db_select({'QTD_QUOTAS_ACOES','PC_PARTICIPACAO','NR_CONTROLE','TP_PARTICIPACAO'},'pasta_sct_socios',,{'NR_PASTA='+lcNR_PASTA+' and TP_PARTICIPACAO='+DLAP+lcPARTICIPA+DLAP}) = -1
                     error_sys(db_error())
                  endif
                  laRES := db_fetchall()
                  if len(laRES) > 0
                     lnqtde := 0
                     for ii := 2 to len(laRES)
                         lnqtdex := laRES[ii,1]
                         if lnqtdex <> 0
//                      lnPorcentagem := (laRES[ii,1]/wGet('VAR_QTD_QUOTAS_ACOES'+lcITEM,'C'))*100
                            lnPorcentagem := (laRES[ii,1]/lnQTD_QUOTAS)*100.0000
                            if db_update({{'PC_PARTICIPACAO'},{lnPorcentagem}},'pasta_sct_socios',{'NR_CONTROLE='+str(laRES[ii,3])}) == -1
                               error_sys(db_error())
                            endif
                         endif
                      next ii
                   endif
                next jj
             endif

         endif
         
      elseif lcACTION == 'EMISSAO_DELETE'
         if db_select({'pasta_sct_socios.NR_PASTA',;
                    'pasta_sct_socios.TP_PARTICIPACAO',;
                    'pasta_sct_socios.QTD_QUOTAS_ACOES'},;
                    'pasta_sct_socios',;
                    ,;
                    {'NR_PASTA='+lcNR_PASTA + ' and TP_PARTICIPACAO = '+DLAP+wGet('TP_PARTICIPACAO','C')+DLAP}) = -1
            error_sys(db_error())
         endif
         laRES:= db_fetchall()
         if len(laRES) > 1
            walert('Existem ações no Cadastro de Sócios e Acionistas. \n Delete primeiro as participações')
         else   
         
            if db_delete('pasta_emissao_acoes','NR_PASTA='+lcNR_PASTA+' and TP_PARTICIPACAO='+DLAP+wGet('TP_PARTICIPACAO','C')+DLAP) = -1
               error_sys(db_error())
            endif
         endif   
      endif
       
      if db_select({'pasta_emissao_acoes.NR_PASTA',;
                    'pasta_emissao_acoes.TP_PARTICIPACAO',;
                    'pasta_emissao_acoes.QTD_QUOTAS_ACOES'},;
                    'pasta_emissao_acoes',;
                    ,;
                    {'NR_PASTA='+lcNR_PASTA}) = -1
         error_sys(db_error())
      endif
      laRES:= db_fetchall()
      laPUT := {{'VAR_TP_PARTICIPACAO','VAR_QTD_QUOTAS_ACOES','TP_PARTICIPACAO','VAR_TP_EMISSAO_ANT'}}
      for ii:= 2 to len(laRES)
         lcITEM := alltrim(str(ii-1))
         aadd(laPUT,{'VAR_TP_PARTICIPACAO'+lcITEM,;
                     'VAR_QTD_QUOTAS_ACOES'+lcITEM,;
                     laRES[ii,db_fetchncol(laRES,'TP_PARTICIPACAO')],;
                     'VAR_TP_PARTICIPACAO_ANT'+lcITEM})
         WPut('VAR_TP_PARTICIPACAO'+lcITEM,laRES[ii,db_fetchncol(laRES,'TP_PARTICIPACAO')])
         WPut('VAR_QTD_QUOTAS_ACOES'+lcITEM,laRES[ii,db_fetchncol(laRES,'QTD_QUOTAS_ACOES')])
         WPut('VAR_TP_PARTICIPACAO'+lcITEM,laRES[ii,db_fetchncol(laRES,'TP_PARTICIPACAO')])
      next ii
      jj := len(laPUT) + 4
      for ii:= (ii-1) to jj
         lcITEM := alltrim(str(ii))
         aadd(laPUT,{'VAR_TP_PARTICIPACAO'+lcITEM,;
                     'VAR_QTD_QUOTAS_ACOES'+lcITEM,;
                     'VAR_TP_PARTICIPACAO'+lcITEM,''})
      next ii
      WPut('lstEMISSAO',laPUT)
      

      
   elseif pcUSER_INTERFACE == 'mnt.pasta.societario3.html' .or. pcUSER_INTERFACE == 'mnt.pasta.societario4.html'  
      if ! empty(alltrim(getWput('CIP_EMPRESA')))
         if db_select({'CNPJ_CPF'},'pfpj',,{'CIP='+DLAP+getWput('CIP_EMPRESA')+DLAP}) = -1
            error_sys(db_error())
         endif

         laRES := db_fetchall()
         if len(laRES) > 1
            // Filiais Inativas
            if db_select({'count(*)'},'pfpj',,{'substring(CNPJ_CPF,1,9) = substring('+DLAP+laRES[2,db_fetchncol(laRES,'CNPJ_CPF')]+DLAP+',1,9)','FL_PFPJ='+DLAP+'I'+DLAP+' or FL_PFPJ='+DLAP+'E'+DLAP}) = -1
               error_sys(db_error())
            endif
            laRESULT := db_fetchrow()
            WPut('FI',laRESULT[1])

            // Filiais Ativas
            if db_select({'count(*)'},'pfpj',,{'substring(CNPJ_CPF,1,9) = substring('+DLAP+laRES[2,db_fetchncol(laRES,'CNPJ_CPF')]+DLAP+',1,9)','FL_PFPJ<>'+DLAP+'I'+DLAP+' and FL_PFPJ<>'+DLAP+'E'+DLAP}) = -1
               error_sys(db_error())
            endif
            laRESULT := db_fetchrow()
            WPut('FA',laRESULT[1])
        endif
      endif
   endif
   *** rufino 13/09/2013
   if pcUSER_INTERFACE == 'mnt.pasta.societario4.html'

         if ascan({'Cisão','Incorporada','Vendida'},getWput('MOTIVO_ENCERRAMENTO')) == 0
            lcTMP:='<tr id="INCX" style="visibility:hidden;">'+CRLF
            lcTMP+='<td id="INC0">wiclabel.CIP_EMP_INCORPORADA</td>'+CRLF
            lcTMP+='<td colspan="3">'+CRLF
            lcTMP+='<input type="text" class="winput" id="CIP_EMP_INCORPORADA" name="CIP_EMP_INCORPORADA" wicinput size="10" onchange="sch_auto('+"'"+'mntform'+"'"+',this,'+"'"+'CIP,PFPJ'+"'"+','+"'"+'pfpj'+"'"+","+"'',"+"'"+'CIP='+"'"+'+DLAP+this.value+DLAP'+','+"'"+'CIP_EMP_INCORPORADA,CIP|CIP_EMP_INCORPORADA_PFPJ,PFPJ'+"'"+',['+"'"+'PFPJ_TABLE_FIELD=pasta.CIP_EMP_INCORPORADA    '+"'"+'])">'+CRLF

            lcTMP+='<input type="button" class="wbuttonsearch"  id="INC1" value="..." onClick="sch_pop('+"'"+'sch.pfpj.html'+"'"+',['+"'"+'PFPJ_TABLE_FIELD=pasta.CIP_EMP_INCORPORADA'+"'"+'])">'+CRLF
            lcTMP+='<input type="button" class="wbuttonsearch"  id="INC2" value="D"   onClick="pfpj_detalhe(document.mntform.CIP_EMP_INCORPORADA.value)" title="Detalhes">'+CRLF
            lcTMP+='<input type="text"   class="winputreadonly" id="CIP_EMP_INCORPORADA_PFPJ" name="CIP_EMP_INCORPORADA_PFPJ" readonly wicinput size="45">'+CRLF
            lcTMP+='</td>'+CRLF
            lcTMP+='</tr>'+CRLF

           else
            lcTMP:='<tr id="INCX">'+CRLF
            lcTMP+='<td id="INC0">wiclabel.CIP_EMP_INCORPORADA</td>'+CRLF
            lcTMP+='<td colspan="3">'+CRLF

            lcTMP+='<input type="text" class="winput" id="CIP_EMP_INCORPORADA" name="CIP_EMP_INCORPORADA" wicinput size="10" onchange="sch_auto('+"'"+'mntform'+"'"+',this,'+"'"+'CIP,PFPJ'+"'"+','+"'"+'pfpj'+"'"+","+"'',"+"'"+'CIP='+"'"+'+DLAP+this.value+DLAP'+','+"'"+'CIP_EMP_INCORPORADA,CIP|CIP_EMP_INCORPORADA_PFPJ,PFPJ'+"'"+',['+"'"+'PFPJ_TABLE_FIELD=pasta.CIP_EMP_INCORPORADA    '+"'"+'])">'+CRLF

            lcTMP+='<input type="button" class="wbuttonsearch"  id="INC1" value="..." onClick="sch_pop('+"'"+'sch.pfpj.html'+"'"+',['+"'"+'PFPJ_TABLE_FIELD=pasta.CIP_EMP_INCORPORADA'+"'"+'])">'+CRLF
            lcTMP+='<input type="button" class="wbuttonsearch"  id="INC2" value="D"   onClick="pfpj_detalhe(document.mntform.CIP_EMP_INCORPORADA.value)" title="Detalhes">'+CRLF
            lcTMP+='<input type="text"   class="winputreadonly" id="CIP_EMP_INCORPORADA_PFPJ" name="CIP_EMP_INCORPORADA_PFPJ" readonly wicinput size="45">'+CRLF
            lcTMP+='</td>'+CRLF
            lcTMP+='</tr>'+CRLF
         endif

         WPut('CMP_INCORP',lcTMP)
   endif
   ***
   pasta_abas(lcTP_PASTA,1)
   //---------- Provisão tem valor autmático da aba de Pedidos
/*
* Glauber 15/12/2010
* Quando no pasta_config na aba lits o campo provisão automática esta flegado, o campo valor provisão
* da aba de informações principais tem que ser atualizado somente com o valor das estimativas cujo o
* risco tenha a opção rateia risco igual a sim.
*/

   if db_select({'FL_PROVISAO_AUTO','GERA_EST_AUT'},'pasta_config',,{'TP_PASTA = '+DLAP+lcTP_PASTA+DLAP}) == -1
      error_sys(db_error())
   endif
   laRESULT := db_fetchrow()

/*
   //---------- Se existem valores na aba pedidos preencher campo VL_PROVISAO
   if lcACTION <> 'NEW' .and. laRESULT[1] == 'S'

      if laRESULT[2] == 'S'
         if db_select({'sum(pasta_pedidos.VL_RISCO_CALC + pasta_pedidos.VL_CORRECAO + pasta_pedidos.VL_JUROS)'},'pasta_pedidos',;
            {{0,'pasta','pasta_pedidos.NR_PASTA = pasta.NR_PASTA'},;
            {2,'risco','pasta_pedidos.PEDIDO_PROCESSO = risco.ESTI_PERDA'}},;
            {'pasta_pedidos.NR_PASTA = '+lcNR_PASTA + ' and pasta_pedidos.NR_PEDIDO_ORIGEM > 0 '+;
             ' and risco.FL_RISCO_RATEIO = ' + DLAP + 'S' + DLAP}) == -1
            error_sys(db_error())
         endif
      else
         if db_select({'sum(VL_RISCO_CALC + VL_CORRECAO + VL_JUROS)'},'pasta_pedidos',,{'NR_PASTA = '+lcNR_PASTA}) == -1
            error_sys(db_error())
         endif
      endif
      laRES_PEDIDO  := db_fetchrow()
*/

   //---------- Se existem valores na aba pedidos preencher campo VL_PROVISAO
   if lcACTION <> 'NEW' .and. laRESULT[1] == 'S'

      if laRESULT[2] == 'S'
         // Glauber 07/01/2011
         // Em virtude do sqlserver triplicar os registros os valores na aba informações principais ficam errado
         //
         /*
         if db_select({'sum(pasta_pedidos.VL_RISCO_CALC + pasta_pedidos.VL_CORRECAO + pasta_pedidos.VL_JUROS)'},'pasta_pedidos',;
            {{0,'pasta','pasta_pedidos.NR_PASTA = pasta.NR_PASTA'},;
            {2,'risco','pasta_pedidos.PEDIDO_PROCESSO = risco.ESTI_PERDA'}},;
            {'pasta_pedidos.NR_PASTA = '+lcNR_PASTA + ' and pasta_pedidos.NR_PEDIDO_ORIGEM > 0 '+;
             ' and risco.FL_RISCO_RATEIO = ' + DLAP + 'S' + DLAP}) == -1
            error_sys(db_error())
         endif */
         if db_select({'distinct pasta_pedidos.NR_PASTA',;
                       'pasta_pedidos.NR_CONTROLE',;
                       'pasta_pedidos.NR_PEDIDO_ORIGEM',;
                       'pasta_pedidos.VL_RISCO_CALC',;
                       'pasta_pedidos.VL_CORRECAO',;
                       'pasta_pedidos.VL_JUROS'},'pasta_pedidos',;
            {{0,'pasta','pasta_pedidos.NR_PASTA = pasta.NR_PASTA'},;
            {2,'risco','pasta_pedidos.PEDIDO_PROCESSO = risco.ESTI_PERDA'}},;
            {'pasta_pedidos.NR_PASTA = '+lcNR_PASTA + ' and pasta_pedidos.NR_PEDIDO_ORIGEM > 0 '+;
             ' and risco.FL_RISCO_RATEIO = ' + DLAP + 'S' + DLAP}) == -1
            error_sys(db_error())
         endif
        laRES_PEDIDO  := db_fetchall()
        if len(laRES_PEDIDO) > 1
           lnVL_PROVISAO := 0
           for ii := 2 to len(laRES_PEDIDO)
               lnVL_PROVISAO += laRES_PEDIDO[ii,4] + laRES_PEDIDO[ii,5] + laRES_PEDIDO[ii,6]
           next ii    
           wPut('VL_PROVISAO',lnVL_PROVISAO)
           wPut('VL_PROVISAO.class','winputreadonly_right')
           wPut('VL_PROVISAO.readonly',.t.)
        endif                  
      else 
         if db_select({'sum(VL_RISCO_CALC + VL_CORRECAO + VL_JUROS)'},'pasta_pedidos',,{'NR_PASTA = '+lcNR_PASTA}) == -1
           error_sys(db_error())

        endif


        laRES_PEDIDO  := db_fetchrow()

      if len(laRES_PEDIDO) > 0
         lnVL_PROVISAO := laRES_PEDIDO[1]
         wPut('VL_PROVISAO',lnVL_PROVISAO)
         wPut('VL_PROVISAO.class','winputreadonly_right')
         wPut('VL_PROVISAO.readonly',.t.)
      endif
    endif
   else
      wPut('VL_PROVISAO.class','winput_right')
      wPut('VL_PROVISAO.readonly',.f.)
   endif




Return

//-------------------------------------------------------------------------------------------------
/*
* Function..: atualiza_pasta_lits()
* Objetivo..: altera pasta do LITS
* Parâmetros:
*   fcNR_PASTA: Numero da pasta
*   fcTP_PASTA: Tipo da Pasta
*   fcRELAC  : Relacionamento P - Pai F - Filho
* Retorno...: nil
*/
static function atualiza_pasta_lits(fcTP_PASTA, fcNR_PASTA, fcRelac)

   local laLITS_CAMPOS_NAOCOMUM  := {} ,;
         laLITS_ABAS_NAOCOMUM    := {} ,;
         laTYPE                  := {} ,;
         laFIELDS                := {} ,;
         laFILHO                 := {} ,;
         laPARAMS                := {} ,;
         laFIELDS_AUX            := {} ,;
         laSAVE                  := {} ,;
         laSALVA                 := {} ,;
         laSAVE_AUX              := {} ,;
         laWHERE                 := {} ,;
         laPUT                   := {} ,;
         laQUANT                 := {} ,;
         laAUX                   := {} ,;
         laABAS                  := {} ,;
         laRESULT                := {} ,;
         laVAL_CAMPOS            := {} ,;
         laVAL_ABAS              := {} ,;
         laRES                   := {} ,;
         aPASTACON               := {} ,;
         laPASTACONFIG           := {} as array
   
   local lcTABLE                 := 'pasta',;
         lcWHERE                 := '' ,;
         lcCIP_EMPRESA           := '' ,;
         lcTABLEC                := 'pasta_cip',;
         lcCIPS                  := '' ,;
         lcOBJ_ID                := '' ,;
         lcNR_PASTA              := '' as string

   local lnNR_PASTA  := 0 as int
   local lnPos       := 0 as int
   local lcNUR_PASTA := '' as string
   local ii          := 0 as int
   local nn          := 0 as int
   local cc          := 0 as int
   local llFlag      :=.t. as logical   

   lcNUR_PASTA := fcNR_PASTA
//-----------------------------------------------------------------------------------------------
//                      Pegar os codigos dos filhos

   local lcLITS_POSICAO_PARTE:= '' as string
   local lcLITS_MASTER := ' ' as string

   lcRelac := fcRelac
   
   if db_select({'pasta_config.LITS_POSICAO_PARTE','pasta_config.LITS_POSICAO_MASTER'},'pasta_config',,{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}) == -1 // pasta_config verifica LITS    
      error_sys(db_error())
      return(nil)
   endif
   laPASTACON:= db_fetchrow()

   if len(lapastacon) > 0
      lcLITS_POSICAO_PARTE := laPASTACON[1]
      lcLITS_MASTER := laPASTACON[2]
   endif

   if lcLITS_POSICAO_PARTE = '' .or. lcLITS_MASTER = ''
      return(nil)
   endif

  if db_select({'NR_PASTA','NR_PASTA_FILHO','TP_PASTA_RELACIONAMENTO'},'pasta_relacionamento',,{'NR_PASTA='+fcNR_PASTA}) == -1
      error_sys(db_error())
   endif
   laRES := db_fetchall()
   if len(laRES) > 1
       for ii := 2 to len(laRES)
           if laRes[ii,3] = lcLITS_POSICAO_PARTE 
              aadd(laFILHO,laRES[ii,2])
           endif
       next ii
   else      
     return(nil)  
   endif
//-----------------------------------------------------------------------------------------------
//                      Campos nao replicados - recuperados da tabela.campo pasta_config.

   if db_select({'LITS_CAMPOS_NAOCOMUM','LITS_ABAS_NAOCOMUM'},'pasta_config',,{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}) < 0
      error_sys(db_error())
   endif
   laPastaConfig := db_fetchrow()
   if !empty(laPastaConfig[1])
      laRES := str2array(laPastaConfig[1],',')
      for ii := 1 to len(laRES)
           aadd(laVAL_CAMPOS,laRES[ii])
      next ii
   endif
   //---------- Acrescenta os campos abaixo referentes a empresa que não podem
   //           ser alterados na pasta Filho.
   aadd(laVAL_CAMPOS,'CIP_EMPRESA')
   aadd(laVAL_CAMPOS,'CD_GRP_ECONOMICO')
   aadd(laVAL_CAMPOS,'FL_TT_LITSCONSORTE')
   
   if !empty(laPastaConfig[2])
      laRES := str2array(laPastaConfig[2],',')
      for ii := 1 to len(laRES)
           aadd(laVAL_ABAS,laRES[ii])
      next ii
   endif
//-----------------------------------------------------------------------------------------------
//                      Mover os campos comuns do LITS  e gravando pasta filhos

      laFIELDS := structtable(WSet("DB_ACTIVE"),'pasta',1,'A')

      if db_select(laFIELDS,'pasta',,{'NR_PASTA='+fcNR_PASTA}) == -1
         error_sys(db_error())
      endif
      laRESULT := db_fetchrow()
      if len(laRESULT) > 0        
         for ii := 1 to len(laFIELDS)
             if ascan(laVAL_CAMPOS,laFields[ii]) == 0   // qdo = 0 não encontrado
                aadd(laFIELDS_AUX,laFIELDS[ii])
             endif        // joga nome dos campos para a tabela aux
         next ii
         aadd(laSAVE,laFIELDS_AUX)

         for ii := 1 to len(laRESULT)
            if ascan(laVAL_CAMPOS,laFields[ii]) == 0
               aadd(laSAVE_AUX,laRESULT[ii])
            endif
         next ii  
         aadd(laSAVE,laSAVE_AUX)                 

         for nn := 1 to len(laFILHO)                   // gravando filhos

//---------------------      Sincroniza a tabela pasta_contingencia     -----------------------------
         
            if db_select({'NR_PASTA','PEDIDO_PROCESSO'},'pasta_contingencia',,{'NR_PASTA='+str(laFilho[nn])}) == -1
               error_sys(db_error())
            endif
            laRESULT := db_fetchall()


            for jj := 2 to len(laRESULT)
                if db_delete('pasta_contingencia','NR_PASTA='+str(laFilho[nn])) == -1
                   error_sys(db_error())
                endif
            next jj
            lcTABLES:='pasta_contingencia'
            lcWHERES:= 'NR_PASTA='+fcNR_PASTA
            sincroniza_pasta(lcNUR_PASTA,laFILHO[nn],lcTABLES,lcWHERES)  //pasta_resultado_pedidos

//---------------------      Sincroniza a tabela pasta_resultado_pedidos    -----------------------------

            if db_select({'NR_PASTA','PEDIDO_PROCESSO'},'pasta_resultado_pedidos',,{'NR_PASTA='+str(laFilho[nn])}) == -1
               error_sys(db_error())
            endif
            laRESULT := db_fetchall()

            for jj := 2 to len(laRESULT)
                if db_delete('pasta_resultado_pedidos','NR_PASTA='+str(laFilho[nn])) == -1
                   error_sys(db_error())
                endif
            next jj
            lcTABLES:='pasta_resultado_pedidos'
            lcWHERES:= 'NR_PASTA='+fcNR_PASTA
            sincroniza_pasta(lcNUR_PASTA,laFILHO[nn],lcTABLES,lcWHERES)  //pasta_resultado_pedidos

//---------------------      Sincroniza a tabela pasta_itens_contrato    -----------------------------

            if db_select({'NR_PASTA','PEDIDO_PROCESSO'},'pasta_itens_contrato',,{'NR_PASTA='+str(laFilho[nn])}) == -1
               error_sys(db_error())
            endif
            laRESULT := db_fetchall()

            for jj := 2 to len(laRESULT)
               if db_delete('pasta_itens_contrato','NR_PASTA='+str(laFilho[nn])) == -1
                  error_sys(db_error())
               endif
            next jj
            lcTABLES:='pasta_itens_contrato'
            lcWHERES:= 'NR_PASTA='+fcNR_PASTA
            sincroniza_pasta(lcNUR_PASTA,laFILHO[nn],lcTABLES,lcWHERES)  //pasta_itens_contrato

//-------------------------            Finaliza sincronizações/inicia Cips     ------------------------

//===  rotina para verificar o cip anterior da tabela pasta filho-----------------------------------------      

            lcCip_antes = ''
            if db_select({'CIPS'},'pasta',,{'NR_PASTA ='+str(lafilho[nn])}) == -1
//               error_sys(db_error())
            else
               lcCip_antes = ''
               laRES:= db_fetchrow()
               if len(laRes) > 0
                  lcCip_antes:=laRes[1]
               endif
            endif        

       //Gerando conteudo de CIPS

         laCIP  := pstcips()
         lcCIPS := ''
         lcCips:=Monta_cip_filho(lcCip_antes,laVal_cAMPOS,laCip, +str(lafilho[nn]), lcRelac)

         if db_replace(laSAVE,lcTABLE,{'NR_PASTA = '+str(laFILHO[nn])}) == -1
            error_sys(db_error())
         endif
 
      /* Gravando os campos CIP */
      //laCIP := pstcips()
         for ii := 1 to len(laCIP)
            if WGet(laCIP[ii],'B')
               if ! empty(alltrim(WGet(laCIP[ii],'C')))
                  laSALVA  := {{'NR_PASTA','WFIELD','CIP'}}

//--------------Verifica se pode alterar   ----------------------------------

                  If ascan(laVal_Campos,laCip[ii]) <= 0
                     aadd(laSALVA,{lafilho[nn],;
                              laCIP[ii],;
                              WGet(laCIP[ii])})
                     lcWHERE := 'NR_PASTA='+str(lafilho[nn])+' and WFIELD='+DLAP+laCIP[ii]+DLAP
                     psab_logs(laSALVA,'pasta_cip',lcWHERE,str(lafilho[nn]),'Informações Principais') //Gravar log de alteraÃ§Ãµes da pasta
                     if db_replace(laSALVA,'pasta_cip',{lcWHERE}) == -1
                        error_sys(db_error())
                     endif
                  endif
               endif
            else
                If ascan(laVal_Campos,laCip[ii]) > 0
                   if db_delete('pasta_cip','NR_PASTA='+str(lafilho[nn])+' and WFIELD='+DLAP+laCIP[ii]+DLAP) == -1
                      error_sys(db_error())
                   endif
                endif
            endif
      next ii
//-------------------------         Grava conteudo de pasta.CIPS       --------------------------------
         if ! empty(lcCIPS)
            lcCIPS += '#'
            if db_update({{'CIPS'},{lcCIPS}},'pasta',{'NR_PASTA='+str(lafilho[nn])}) == -1
               error_sys(db_error())
            endif
         endif

      next nn
      endif
Return(nil)

//---------------------------------------------------------------------------------------------------------
/*
* Function..: carrega_pasta(fcNR_PASTA,faFIELDS)
* Objetivo..: Selecionar e carregar Pasta
* ParÃ¢metros:
*    fcNR_PASTA.: Nmero da Pasta
*    faFIELDS...: Campos a selecionar
* Retorno...:
*   Nenhum
*/
static function carrega_pasta(fcNR_PASTA,faFIELDS,fcTP_PASTA)
   local lcCOND        := '' ,;
         lcAUX         := '' ,;
         lcCIP_EMPRESA := '' as string

   local laRESULT  := {} ,;
         laRESULT2 := {} ,;
         laPUT     := {} ,;
         laFOREIGN := {} ,;
         laAUX     := {} as array


   local ii        := 0 ,;
         xx        := 0 ,;
         jj        := 0 ,;
         liPOS_COD := 0 ,;
         lnPOS     := 0 as int

   /* Tabelas estrangeiras
   * Formato do array abaixo
   * 1 - nome da tabela a pesquisar
   * 2 - campo do relacionamento
   * 3 - descricao
   */
   laFOREIGN := {{'indice_reajuste','CD_INDICE',{'NM_INDICE'}},;
                 {'ramosrsn','CD_RAMOSRSN',{'SEGURORAMO','SEGUROPRODUTO','SEGUROPROFIT'}},;
                 {'centrocusto','CD_CCUSTO',{'NM_CCUSTO'}},;
                 {'moeda','CD_MOEDA',{'NM_MOEDA'}},;
                 {'envio','ENVIO',{'ENVIO'}},;
                 {'parecer','PARECER',{'PARECER'}},;
                 {'comarca_regiao','COMARCA',{'REGIAO'}},;
                 {'lojas','ID_LOJA',{'SIGLA_LOJA','NR_LOJA','REGIONAL','CANAL','NM_LOJA','ID_CANAL'}}}



   //Adiciona Flag de Aprovaï¿½o, caso nï¿½ exista.
   if ascan(faFIELDS,'FL_APROVADO') == 0
      aadd(faFIELDS,'FL_APROVADO')
   endif

   *** rufino 16/06/2015 08:37:36
   if ascan(faFIELDS,'CONTRATO_MULTA') == 0
      aadd(faFIELDS,'CONTRATO_MULTA')
   endif

   if db_select(faFIELDS,'pasta',,{'NR_PASTA='+fcNR_PASTA}) == -1
      error_sys('carrega_pasta: '+db_error())
   endif
   laRESULT := db_fetchrow()

   if len(laRESULT) > 0

   *** rufino 09/01/2017 15:55:45 retirado conforme solicitação Alexandre/Célia
   *//Se Pasta nï¿½ aprovada, esconde botï¿½ "Salvar" e abilita "Aprovar"
   *if  pcUSER_INTERFACE != 'mnt.pasta.contrato3.html'
   *      lnPOS := ascan(faFIELDS,'FL_APROVADO')
   *      if lnPOS > 0
   *         if laRESULT[lnPOS] == 'N'
   *            WPut('ifWAC_WRITE',.f.)
   *         endif
   *      endif
   *endif
   
   if pcUSER_INTERFACE == 'mnt.pasta.plano_acao.html'
      WPut('causa_raiz.option',{laRESULT[ascan(faFIELDS,'CAUSA_RAIZ')]})
      WPut('causa_raiz.optionvalue',{laRESULT[ascan(faFIELDS,'CAUSA_RAIZ')]})            
   endif
   

// alterado por Sonia Perdigão - 2010-08-16 17:46:56    
// Unimed  

      if pcUSER_INTERFACE == 'mnt.pasta.civel_consultivo.html' .or. pcUSER_INTERFACE == 'mnt.pasta.civel_consultivo2.html' 
      //.or. pcUSER_INTERFACE == 'mnt.pasta.civel_consultivo3.html' 
         FL_APROVADO := 0
               /* Carrega os campos CIP */
      if db_select({'pasta_cip.WFIELD','pasta_cip.CIP','pfpj.PFPJ'},'pasta_cip,pfpj',,{'pasta_cip.NR_PASTA='+fcNR_PASTA,'pfpj.CIP=pasta_cip.CIP'}) == -1
         error_sys(db_error())
      endif
      laRESULT2 := db_fetchall()
     
      if len(laRESULT2) > 1
         ii := ascan(laRESULT2,{|x| x[1]== 'CIP_EMPRESA'})
         if ii > 0
            lcCIP_EMPRESA := laRESULT2[ii,2]
         endif
         lcAUX := ''
         for ii := 2 to len(laRESULT2)
            WPut(laRESULT2[ii,1],laRESULT2[ii,2])
            WPut(laRESULT2[ii,1]+'_PFPJ',laRESULT2[ii,3])
         next ii
      endif
      lnPOS := ascan(faFIELDS,'RESPOSTA')
      if lnPOS > 0
         if laRESULT[lnPOS] == ''
            WPut('ifNORMAL',.F.)
            WPut('ifABERTO',.T.)
         else
            WPut('ifNORMAL',.T.)
            WPut('ifABERTO',.F.) 
         endif
      endif

      if ! empty(laRESULT[ascan(faFIELDS,'PARECER_CONSULTOR_EXT')]) .or. ! empty(laRESULT[ascan(faFIELDS,'PALAVRAS_CHAVE')])
            Wput('ifreadonly','readonly')
            WPut('PARECER_CONSULTOR_EXT.class','winputreadonly')
            Wput('PALAVRAS_CHAVE.readonly',.T.)
            WPut('PALAVRAS_CHAVE.class','winputreadonly')
            Wput('DT_PARECER_CONSULTOR_EXT.readonly',.T.)
            WPut('DT_PARECER_CONSULTOR_EXT.class','winputreadonly')
            Wput('ifreadonly','readonly')
            WPut('PALAVRAS_CHAVE.class','winputreadonly')
            Wput('HR_PARECER_CONSULTOR_EXT.readonly',.T.)
            WPut('HR_PARECER_CONSULTOR_EXT.class','winputreadonly')
            Wput('NR_PASTA_JURISPRUDENCIA.readonly',.T.)
            WPut('NR_PASTA_JURISPRUDENCIA.class','winputreadonly')
            Wput('ifreadonlyclass','winputreadonly')
            Wput('ifedit',.F.)
         else
            WPut('PARECER_CONSULTOR_EXT.class','winput')
            Wput('PALAVRAS_CHAVE.readonly',.F.)
            WPut('PALAVRAS_CHAVE.class','winput')
            Wput('DT_PARECER_CONSULTOR_EXT.readonly',.F.)
            WPut('DT_PARECER_CONSULTOR_EXT.class','winput')
            Wput('ifreadonly','')
            WPut('PALAVRAS_CHAVE.class','winput')
            Wput('HR_PARECER_CONSULTOR_EXT.readonly',.F.)
            WPut('HR_PARECER_CONSULTOR_EXT.class','winput')
            Wput('NR_PASTA_JURISPRUDENCIA.readonly',.F.)
            WPut('NR_PASTA_JURISPRUDENCIA.class','winput')
            Wput('ifreadonlyclass','winput')
            Wput('ifedit',.T.)           
      endif
         
      endif
      
      
      // Valores Atualizados
      ps_valores(fcNR_PASTA,laRESULT[ascan(faFIELDS,'TP_PASTA')])

      // Numero de Linhas dinamico, conforme quantidade de texto no campo RESUMO_ACAO
      lnPOS := ascan(faFIELDS,'RESUMO_ACAO')
      if lnPOS > 0
         WPut('RESUMO_ACAO_ROWS',iif( mlcount(laRESULT[lnPOS]) < 7 ,6, mlcount(laRESULT[lnPOS])+2 ))
      endif

      lnPOS := ascan(faFIELDS,'EXTRA')
      if lnPOS > 0
         WPut('EXTRA_ROWS',iif( mlcount(laRESULT[lnPOS]) < 7 ,6, mlcount(laRESULT[lnPOS])+2 ))
      endif

      lnPOS := ascan(faFIELDS,'ACORDAO')
      if lnPOS > 0
         WPut('ACORDAO_ROWS',iif( mlcount(laRESULT[lnPOS]) < 7 ,6, mlcount(laRESULT[lnPOS])+2 ))
      endif

      lnPOS := ascan(faFIELDS,'EMENTA')
      if lnPOS > 0
         WPut('EMENTA_ROWS',iif( mlcount(laRESULT[lnPOS]) < 7 ,6, mlcount(laRESULT[lnPOS])+2 ))
      endif

      //Em separado, carrega campo Moeda 2
      lnPOS := ascan(faFIELDS,'CD_MOEDA2')
      if lnPOS > 0
         if laRESULT[lnPOS] > 0
            if db_select({'NM_MOEDA as NM_MOEDA2'},'moeda',,{'CD_MOEDA='+str(laRESULT[lnPOS])}) == -1
               error_sys(db_error())
            endif
            db2put(db_fetchall())
         endif
      endif

      for ii := 1 to len(faFIELDS)
          liPOS_COD := ascan2(laFOREIGN,2,faFIELDS[ii])
          if liPOS_COD > 0
             if alltrim(laRESULT[ii]) != '0' .and. ! empty(alltrim(laRESULT[ii]))
                if valtype(laRESULT[ii]) == 'N'
                   lcCOND := alltrim(str(laRESULT[ii]))
                else
                   lcCOND := DLAP+alltrim(laRESULT[ii])+DLAP
                endif
                if !empty(lcCOND)
                   if db_select(laFOREIGN[liPOS_COD,3],laFOREIGN[liPOS_COD,1],,;
                                {laFOREIGN[liPOS_COD,2]+'='+lcCOND}) == -1
                      error_sys(db_error())
                   endif
                   laRESULT2 := db_fetchrow()
                   if len(laRESULT2) > 0
                      for xx := 1 to len(laRESULT2)
                         WPut(laFOREIGN[liPOS_COD,3][xx],laRESULT2[xx])
                      next xx
                   endif
                endif
             endif
          endif
          if pcUSER_INTERFACE == 'mnt.pasta.civel_loja.html'
             lnPOS := ascan(faFIELDS,'NR_LOJA_OR_PROBLEMA')
             if db_select({'SIGLA_LOJA as SIGLA_LOJA1','NR_LOJA as  NR_LOJA1','REGIONAL as REGIONAL1','CANAL as CANAL1','NM_LOJA as NM_LOJA1','ID_CANAL as ID_CANAL1'},'lojas',,{'ID_LOJA='+STR(laResult[lnPOS])}) == -1
                 error_sys(db_error())
             else
                 db2put(db_fetchall())
             endif
         endif


         if upper(alltrim(faFIELDS[ii])) == 'FL_PASTA'
             WPut(faFIELDS[ii],alltrim(laRESULT[ii]))
          else
             WPut(faFIELDS[ii],laRESULT[ii])
          endif
      next ii

      if pcUSER_INTERFACE == 'mnt.pasta.marcas.html'
         mkgedembed('pasta','EMBED_MNT_PASTA_HTML_MARCA',290,190,'GED_EMBED_MARCA','Marca',.t.)
      endif

      /* Carrega os campos CIP */

//
// Glauber 23/12/2014 - LDC - Template contratos
// Conforme soicitado pela Célia quando o campo FL_DOCUMENTO_FALTA estiver flegado, deve ser apresentado asteristicos junto ao nome
//
/*
      if db_select({'pasta_cip.WFIELD','pasta_cip.CIP','pfpj.PFPJ'},'pasta_cip,pfpj',,{'pasta_cip.NR_PASTA='+fcNR_PASTA,'pfpj.CIP=pasta_cip.CIP'}) == -1
         error_sys(db_error())
      endif
*/

//      if db_select({'pasta_cip.WFIELD','pasta_cip.CIP',"case when pfpj.FL_DOCUMENTO_FALTA = 'S' then pfpj.PFPJ || ' *****' else pfpj.PFPJ end AS PFPJ"},'pasta_cip,pfpj',,{'pasta_cip.NR_PASTA='+fcNR_PASTA,'pfpj.CIP=pasta_cip.CIP'}) == -1
       if db_select({'pasta_cip.WFIELD','pasta_cip.CIP',"case when pfpj.FL_DOCUMENTO_FALTA = 'S' then (pfpj.PFPJ + ' *****') else pfpj.PFPJ end AS PFPJ"},'pasta_cip,pfpj',,{'pasta_cip.NR_PASTA='+fcNR_PASTA,'pfpj.CIP=pasta_cip.CIP'}) == -1
         error_sys(db_error())
      endif


      laRESULT2 := db_fetchall()


      if len(laRESULT2) > 1
         ii := ascan(laRESULT2,{|x| x[1]== 'CIP_EMPRESA'})
         if ii > 0
            lcCIP_EMPRESA := laRESULT2[ii,2]
         endif
         lcAUX := ''
         for ii := 2 to len(laRESULT2)
            WPut(laRESULT2[ii,1],laRESULT2[ii,2])
            WPut(laRESULT2[ii,1]+'_PFPJ',laRESULT2[ii,3])
         next ii
      endif

      /* Carrega as descriï¿½es do Campo CIP_EMPRESA */
      if ! empty(alltrim(lcCIP_EMPRESA))
         if pcUSER_INTERFACE == 'mnt.pasta.societario.html' .or. pcUSER_INTERFACE == 'mnt.pasta.societario3.html' .or. pcUSER_INTERFACE == 'mnt.pasta.societario4.html'
            laAUX := {'pfpj.CD_GRP_ECONOMICO',;
                      'grupo_economico.NM_GRP_ECONOMICO',;
                      'pfpj.CIDADE',;
                      'pfpj.UF',;
                      'pfpj.ENDERECO',;
                      'pfpj.NR_ENDERECO',;
                      'pfpj.CNPJ_CPF',;
                      'pfpj.IE',;
                      'pfpj.NIRE',;
                      'pfpj.FORMA_ATUACAO'}
         else
            laAUX := {'pfpj.CD_GRP_ECONOMICO',;
                      'grupo_economico.NM_GRP_ECONOMICO'}
         endif

         if db_select(laAUX,'pfpj',;
                      {{2,'grupo_economico','grupo_economico.CD_GRP_ECONOMICO=pfpj.CD_GRP_ECONOMICO'}},;
                      {'CIP='+DLAP+lcCIP_EMPRESA+DLAP}) = -1
            error_sys(db_error())
         endif
         laPUT := db_fetchall()
         if len(laPUT) > 1
            for ii := 1 to len(laPUT[1])
               WPut('CIP_EMPRESA_'+laPUT[1,ii],laPUT[2,ii])
            next ii
            // Glauber 19/10/2010 - Exibir o campo forma de atuação quando o template for societario4
            if ascan(laPUT[1],'FORMA_ATUACAO') > 0
               WPUT('FORMA_ATUACAO',laPUT[2,ascan(laPUT[1],'FORMA_ATUACAO')])
            endif
         endif
      endif

      if pcUSER_INTERFACE == 'mnt.pasta.pasta_pfpj.html' .or. pcUSER_INTERFACE == 'mnt.pst.pre.pasta_pfpj.html'
         if ! empty(laRESULT[ascan(faFIELDS,'CIP')])
            if db_select({'PFPJ as CIP_PFPJ'},'pfpj',,;
                         {'CIP='+DLAP+laRESULT[ascan(faFIELDS,'CIP')]+DLAP}) = -1
               error_sys(db_error())
            endif
            db2Put(db_fetchall())
         endif

      elseif pcUSER_INTERFACE == 'mnt.pasta.civel_loja.html' .or. pcUSER_INTERFACE == 'mnt.pasta.civel_loja_cont.html'

        if ! empty(laRESULT[ascan(faFIELDS,'CD_PRODUTO')]) .and. laRESULT[ascan(faFIELDS,'ID_LOJA')] > 0
           if db_select({'canal_produto.NM_PRODUTO'},'canal_produto',{{0,'lojas','lojas.canal= canal_produto.canal'}},{'lojas.ID_LOJA = '+ str(laRESULT[ascan(faFIELDS,'ID_LOJA')]) + " and canal_produto.CD_PRODUTO='"+ laRESULT[ascan(faFIELDS,'CD_PRODUTO')]+"'"}) == -1
              error_sys(db_error())
           else
              db2put(db_fetchall())
           endif
        endif
     endif

      /* Carrega RISCOPERDA dos campos PC_RISCO */

      laFOREIGN := {'PC_RISCO',;
                    'PC_RISCO2',;
                    'PC_RISCO_ADVEXT',;
                    'PC_RISCO2_ADVEXT'}
                    
      for ii := 1 to len(laFOREIGN)
         lnPOS := ascan(faFIELDS,laFOREIGN[ii])
         if lnPOS > 0
            if db_select({'RISCOPERDA'},'exito_riscoperda',,{'PC_RISCO='+str(laRESULT[lnPOS])} ) = -1
               error_sys(db_error())
            endif
            laPUT := db_fetchrow()
            if len(laPUT) > 0
               WPut(laFOREIGN[ii]+'_RISCOPERDA',laPUT[1])
            endif

         endif
      next ii


      if ascan(faFIELDS,'VL_RISCO') > 0 .and. ascan(faFIELDS,'PC_RISCO') > 0
         WPut('VL_RESERVA_CALC',laRESULT[ascan(faFIELDS,'VL_RISCO')] * ( pc_risco(laRESULT[ascan(faFIELDS,'PC_RISCO')]) / 100))
         WPut('VL_PROVISAO_CALC',laRESULT[ascan(faFIELDS,'VL_RISCO')] * ( pc_risco(laRESULT[ascan(faFIELDS,'PC_RISCO')]) / 100))
      endif
      
      if ascan(faFIELDS,'VL_RISCO2') > 0 .and. ascan(faFIELDS,'PC_RISCO2') > 0
         WPut('VL_PROVISAO_CALC',laRESULT[ascan(faFIELDS,'VL_RISCO2')] * ( pc_risco(laRESULT[ascan(faFIELDS,'PC_RISCO2')]) / 100))
      endif
      
   endif

   *** rufino 21/10/2015 16:26:52
   if (pcUSER_INTERFACE == 'mnt.pasta.ouvidoria5.html')
      lnPOS := ascan(faFIELDS,'CD_PARCEIRO')
      lcCD_PARCEIRO:=laRESULT[lnPOS]
      if db_select({'CD_PARCEIRO'},'parceiros1',,{'CD_PARCEIRO='+DLAP+lcCD_PARCEIRO+DLAP}) == -1
         error_sys(db_error())
      endif
      laRESULT2 :=  db_fetchrow()
      if len(laRESULT2)>0
         Wput('AJX_CD_PARCEIRO',laRESULT2[1])
      endif

      lnPOS := ascan(faFIELDS,'CD_PRODUTO')
      lcCD_PRODUTO:=laRESULT[lnPOS]
      if db_select({'CD_PRODUTO'},'produto1',,{'CD_PRODUTO='+DLAP+lcCD_PRODUTO+DLAP}) == -1
         error_sys(db_error())
      endif
      laRESULT2 :=  db_fetchrow()
      if len(laRESULT2)>0
         Wput('AJX_CD_PRODUTO',laRESULT2[1])
      endif

      lnPOS := ascan(faFIELDS,'QTDE_DIAS')
      Wput('QTDE_DIAS',str(laRESULT[lnPOS]))
   endif



   
   WPUT('ACTION','ALTER')

return(nil)

/*
* Data.Criaï¿½o: 02/03/2005 - Marcos Antonio
* Function....: pscc()
* Objetivo....: Carregar os dados dos combobox e demais relacionamentos nos layouts de Processos
* Parï¿½etros..: Nenhum
*    fcTP_PASTA.: Tipo de Pasta
*    faFIELDS...: Campos da tabela pasta
*    faRESULT...: Registro selecionado
*
* Retorno.....: Nenhum
*/
function pscc(fcTP_PASTA,faFIELDS,faRESULT)
   local lcSELECT   := '' ,;
         lcFIELD    := '' ,;
         lcFIELD_UI := '' as string

   //local laFLD_CIP := {} ,;
   local laFOREIGN := {} ,;
         laRESULT  := {} ,;
         laRES     := {} ,;
         laFIELD   := {} ,;
         laDEF     := {} ,;
         laATI     := {} ,;
         laINA     := {} ,;
         laAUX     := {} ,;
         laPUTV    := {} ,;
         laPUT     := {} as array

   local lnSIZE := 0 ,;
         lnPOS  := 0 ,;
         liPOS  := 0 ,;
         jj     := 0 ,;
         ii     := 0 as int


   /*
   * Carrega Combos de acordo com o Layout.
   * Formato do Array:
   * laFOREIGN := {{'Coluna 1','Coluna 2','Coluna 3','Coluna 4',Coluna 5}}
   *   Onde:
   *      Coluna 1: Tabela alvo
   *      Coluna 2: Campo a selecionar na tabela alvo
   *      Coluna 3: Campo na UI
   *      Coluna 4: Indicador de combobox com a primeira linha em branco [Y/N]
   *      Coluna 5: Vetor com a condiï¿½o de pesquisa, caso seja necessï¿½ia
   */

   
           
   if valtype(faRESULT) == 'U'
      do case
         case pcUSER_INTERFACE == 'mnt.pasta.ambiental.html'
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'penalidade_tipo','TP_PENALIDADE','TP_PENALIDADE','Y',})
            aadd(laFOREIGN,{'penalidade_tipo','TP_PENALIDADE','TP_PENALIDADE','Y',})
            aadd(laFOREIGN,{'ambito','AMBITO','AMBITO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.ambiental_cont.html'
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'penalidade_tipo','TP_PENALIDADE','TP_PENALIDADE','Y',})
            aadd(laFOREIGN,{'ambito','AMBITO','AMBITO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'auxiliar1','DESC_AUXILIAR1','DESC_AUXILIAR1','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar2','DESC_AUXILIAR2','DESC_AUXILIAR2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar3','DESC_AUXILIAR3','DESC_AUXILIAR3','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar4','DESC_AUXILIAR4','DESC_AUXILIAR4','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar5','DESC_AUXILIAR5','DESC_AUXILIAR5','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})                                    
                       *** alimenta desc auxiariares com id
/*        case pcUSER_INTERFACE == 'mnt.pasta.auto_infracao.html'
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
//            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'resultado_processo','FL_RESULTADO_PROCESSO','FL_RESULTADO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'instancia','INSTANCIA','INSTANCIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
*/
         case pcUSER_INTERFACE == 'mnt.pasta.civel.html'
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            
        case pcUSER_INTERFACE == 'mnt.pasta.civel_recupera.html'
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            
		  case pcUSER_INTERFACE == 'mnt.pasta.civel2.html'
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            
        case pcUSER_INTERFACE == 'mnt.pasta.civel_cont.html'
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'cumprimento','CUMPRIMENTO','CUMPRIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            *** alimenta desc auxiariares com id
            aadd(laFOREIGN,{'auxiliar1','DESC_AUXILIAR1','DESC_AUXILIAR1','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar2','DESC_AUXILIAR2','DESC_AUXILIAR2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar3','DESC_AUXILIAR3','DESC_AUXILIAR3','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar4','DESC_AUXILIAR4','DESC_AUXILIAR4','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar5','DESC_AUXILIAR5','DESC_AUXILIAR5','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})                                    

            
        case pcUSER_INTERFACE == 'mnt.pasta.civel_adm_ans.html'
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'resultado_processo','FL_RESULTADO_PROCESSO','FL_RESULTADO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'motivo_infracao','NM_MOTIVO_INFRACAO','NM_MOTIVO_INFRACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})

        case pcUSER_INTERFACE == 'mnt.pasta.civel_adm_ans_cont.html'
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'resultado_processo','FL_RESULTADO_PROCESSO','FL_RESULTADO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'motivo_infracao','NM_MOTIVO_INFRACAO','NM_MOTIVO_INFRACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            *** alimenta desc auxiariares com id
           aadd(laFOREIGN,{'auxiliar1','DESC_AUXILIAR1','DESC_AUXILIAR1','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar2','DESC_AUXILIAR2','DESC_AUXILIAR2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar3','DESC_AUXILIAR3','DESC_AUXILIAR3','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar4','DESC_AUXILIAR4','DESC_AUXILIAR4','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar5','DESC_AUXILIAR5','DESC_AUXILIAR5','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})                                    
            
        case pcUSER_INTERFACE == 'mnt.pasta.civel_adm_cade.html'
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA' ,'Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'resultado_processo','FL_RESULTADO_PROCESSO','FL_RESULTADO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.civel_adm_cade_cont.html'
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA' ,'Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'resultado_processo','FL_RESULTADO_PROCESSO','FL_RESULTADO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.civel_adm_procon.html'
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'resultado_processo','FL_RESULTADO_PROCESSO','FL_RESULTADO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'motivo_infracao','NM_MOTIVO_INFRACAO','NM_MOTIVO_INFRACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.civel_adm_susep.html'
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'resultado_processo','FL_RESULTADO_PROCESSO','FL_RESULTADO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'motivo_infracao','NM_MOTIVO_INFRACAO','NM_MOTIVO_INFRACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.civel_adm_susep_cont.html'
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'resultado_processo','FL_RESULTADO_PROCESSO','FL_RESULTADO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'motivo_infracao','NM_MOTIVO_INFRACAO','NM_MOTIVO_INFRACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            *** alimenta desc auxiariares com id
            aadd(laFOREIGN,{'auxiliar1','DESC_AUXILIAR1','DESC_AUXILIAR1','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar2','DESC_AUXILIAR2','DESC_AUXILIAR2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar3','DESC_AUXILIAR3','DESC_AUXILIAR3','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar4','DESC_AUXILIAR4','DESC_AUXILIAR4','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar5','DESC_AUXILIAR5','DESC_AUXILIAR5','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})                                    

        case pcUSER_INTERFACE == 'mnt.pasta.civel_securit_com_sinistro.html'

            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'resultado_processo','FL_RESULTADO_PROCESSO','FL_RESULTADO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'instancia','INSTANCIA','INSTANCIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.civel_securit_com_sin_cont.html'
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'resultado_processo','FL_RESULTADO_PROCESSO','FL_RESULTADO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'instancia','INSTANCIA','INSTANCIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            *** alimenta desc auxiariares com id
           aadd(laFOREIGN,{'auxiliar1','DESC_AUXILIAR1','DESC_AUXILIAR1','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar2','DESC_AUXILIAR2','DESC_AUXILIAR2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar3','DESC_AUXILIAR3','DESC_AUXILIAR3','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar4','DESC_AUXILIAR4','DESC_AUXILIAR4','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar5','DESC_AUXILIAR5','DESC_AUXILIAR5','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})                                    

        case pcUSER_INTERFACE == 'mnt.pasta.civel_securit_sem_sinistro.html'

            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'resultado_processo','FL_RESULTADO_PROCESSO','FL_RESULTADO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'instancia','INSTANCIA','INSTANCIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.civel_securit_sem_sin_cont.html'

            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'resultado_processo','FL_RESULTADO_PROCESSO','FL_RESULTADO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'instancia','INSTANCIA','INSTANCIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            *** alimenta desc auxiariares com id
           aadd(laFOREIGN,{'auxiliar1','DESC_AUXILIAR1','DESC_AUXILIAR1','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar2','DESC_AUXILIAR2','DESC_AUXILIAR2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar3','DESC_AUXILIAR3','DESC_AUXILIAR3','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar4','DESC_AUXILIAR4','DESC_AUXILIAR4','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar5','DESC_AUXILIAR5','DESC_AUXILIAR5','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})                                    


        case pcUSER_INTERFACE == 'mnt.pasta.dpvat.html'

            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'resultado_processo','FL_RESULTADO_PROCESSO','FL_RESULTADO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'instancia','INSTANCIA','INSTANCIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.dpvat_cont.html'

            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'resultado_processo','FL_RESULTADO_PROCESSO','FL_RESULTADO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'instancia','INSTANCIA','INSTANCIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            *** alimenta desc auxiariares com id
           aadd(laFOREIGN,{'auxiliar1','DESC_AUXILIAR1','DESC_AUXILIAR1','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar2','DESC_AUXILIAR2','DESC_AUXILIAR2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar3','DESC_AUXILIAR3','DESC_AUXILIAR3','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar4','DESC_AUXILIAR4','DESC_AUXILIAR4','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar5','DESC_AUXILIAR5','DESC_AUXILIAR5','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})                                    


        case pcUSER_INTERFACE == 'mnt.pasta.contrato_locacao.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_tipo','TP_CONTRATO','TP_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_situacao','CONTRATO_SITUACAO','CONTRATO_SITUACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_periodicidade_valor','PERIODICIDADE_VL_CONTRATO','PERIODICIDADE_VL_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_periodo_reajuste','PERIODICIDADE_REAJUSTE','PERIODICIDADE_REAJUSTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_exclusiv_abrangencia','CONTRATO_EXCLUSIV_ABRANGENCIA','CONTRATO_EXCLUSIV_ABRANGENCIA','Y',})
            aadd(laFOREIGN,{'contrato_renovacao','CONTRATO_RENOVACAO','CONTRATO_RENOVACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vigencia','VIGENCIA','VIGENCIA','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'resultado_contrato','RESULTADO_CONTRATO','RESULTADO_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vendor','VENDOR','VENDOR','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.contrato_locacao_contra.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_tipo','TP_CONTRATO','TP_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_situacao','CONTRATO_SITUACAO','CONTRATO_SITUACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_periodicidade_valor','PERIODICIDADE_VL_CONTRATO','PERIODICIDADE_VL_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_periodo_reajuste','PERIODICIDADE_REAJUSTE','PERIODICIDADE_REAJUSTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_exclusiv_abrangencia','CONTRATO_EXCLUSIV_ABRANGENCIA','CONTRATO_EXCLUSIV_ABRANGENCIA','Y',})
            aadd(laFOREIGN,{'contrato_renovacao','CONTRATO_RENOVACAO','CONTRATO_RENOVACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vigencia','VIGENCIA','VIGENCIA','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'resultado_contrato','RESULTADO_CONTRATO','RESULTADO_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vendor','VENDOR','VENDOR','Y',})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})


        case pcUSER_INTERFACE == 'mnt.pasta.contrato_locacao_imovel.html' .or. pcUSER_INTERFACE == 'mnt.pst.pre.contrato_locacao_imovel.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_tipo','TP_CONTRATO','TP_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_situacao','CONTRATO_SITUACAO','CONTRATO_SITUACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_periodicidade_valor','PERIODICIDADE_VL_CONTRATO','PERIODICIDADE_VL_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_periodo_reajuste','PERIODICIDADE_REAJUSTE','PERIODICIDADE_REAJUSTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_renovacao','CONTRATO_RENOVACAO','CONTRATO_RENOVACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vigencia','VIGENCIA','VIGENCIA','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'resultado_contrato','RESULTADO_CONTRATO','RESULTADO_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vendor','VENDOR','VENDOR','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.contrato.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_tipo','TP_CONTRATO','TP_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_periodicidade_valor','PERIODICIDADE_VL_CONTRATO','PERIODICIDADE_VL_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_situacao','CONTRATO_SITUACAO','CONTRATO_SITUACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'cumprimento','CUMPRIMENTO','CUMPRIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_periodo_reajuste','PERIODICIDADE_REAJUSTE','PERIODICIDADE_REAJUSTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_exclusiv_abrangencia','CONTRATO_EXCLUSIV_ABRANGENCIA','CONTRATO_EXCLUSIV_ABRANGENCIA','Y',})
            aadd(laFOREIGN,{'contrato_confidenc_abrangencia','CONTRATOCONFIDENCABRANGENCIA','CONTRATO_CONFIDENC_ABRANGENCIA','Y',})
            aadd(laFOREIGN,{'contrato_renovacao','CONTRATO_RENOVACAO','CONTRATO_RENOVACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vigencia','VIGENCIA','VIGENCIA','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'resultado_contrato','RESULTADO_CONTRATO','RESULTADO_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vendor','VENDOR','VENDOR','Y',})
//ALTERACAO SONIA - 03/09/2015 11:00:51
            aadd(laFOREIGN,{'cc_custo','CC_CUSTO','CC_CUSTO','Y',})
            aadd(laFOREIGN,{'adiantamento_financeiro','ADIANTAMENTO_FINANCEIRO','ADIANTAMENTO_FINANCEIRO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'garantia_financeira','GARANTIA_FINANCEIRA','GARANTIA_FINANCEIRA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            

        case pcUSER_INTERFACE == 'mnt.pasta.contrato_contra.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_tipo','TP_CONTRATO','TP_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_situacao','CONTRATO_SITUACAO','CONTRATO_SITUACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_periodicidade_valor','PERIODICIDADE_VL_CONTRATO','PERIODICIDADE_VL_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'cumprimento','CUMPRIMENTO','CUMPRIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_periodo_reajuste','PERIODICIDADE_REAJUSTE','PERIODICIDADE_REAJUSTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_exclusiv_abrangencia','CONTRATO_EXCLUSIV_ABRANGENCIA','CONTRATO_EXCLUSIV_ABRANGENCIA','Y',})
            aadd(laFOREIGN,{'contrato_confidenc_abrangencia','CONTRATOCONFIDENCABRANGENCIA','CONTRATO_CONFIDENC_ABRANGENCIA','Y',})
            aadd(laFOREIGN,{'contrato_renovacao','CONTRATO_RENOVACAO','CONTRATO_RENOVACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vigencia','VIGENCIA','VIGENCIA','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'resultado_contrato','RESULTADO_CONTRATO','RESULTADO_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vendor','VENDOR','VENDOR','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.contrato2.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'pasta_tb_assunto','ASSUNTO','ASSUNTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_situacao','CONTRATO_SITUACAO','CONTRATO_SITUACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vigencia','VIGENCIA','VIGENCIA','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            
        case pcUSER_INTERFACE == 'mnt.pasta.contrato4.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_tipo','TP_CONTRATO','TP_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_periodicidade_valor','PERIODICIDADE_VL_CONTRATO','PERIODICIDADE_VL_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_situacao','CONTRATO_SITUACAO','CONTRATO_SITUACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'cumprimento','CUMPRIMENTO','CUMPRIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_periodo_reajuste','PERIODICIDADE_REAJUSTE','PERIODICIDADE_REAJUSTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_exclusiv_abrangencia','CONTRATO_EXCLUSIV_ABRANGENCIA','CONTRATO_EXCLUSIV_ABRANGENCIA','Y',})
            aadd(laFOREIGN,{'contrato_confidenc_abrangencia','CONTRATOCONFIDENCABRANGENCIA','CONTRATO_CONFIDENC_ABRANGENCIA','Y',})
            aadd(laFOREIGN,{'contrato_renovacao','CONTRATO_RENOVACAO','CONTRATO_RENOVACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vigencia','VIGENCIA','VIGENCIA','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'resultado_contrato','RESULTADO_CONTRATO','RESULTADO_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vendor','VENDOR','VENDOR','Y',})
            aadd(laFOREIGN,{'cc_custo','CC_CUSTO','CC_CUSTO','Y',})
            aadd(laFOREIGN,{'adiantamento_financeiro','ADIANTAMENTO_FINANCEIRO','ADIANTAMENTO_FINANCEIRO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'garantia_financeira','GARANTIA_FINANCEIRA','GARANTIA_FINANCEIRA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            **aadd(laFOREIGN,{'classificacao_pessoas','PFPJ_NM_TIPO','PFPJ_NM_TIPO','Y',{'PFPJ_NATUREZA='+DLAP+'Jurídica'+DLAP}})
            aadd(laFOREIGN,{'paises','PAISES','PAISES','Y',})
            aadd(laFOREIGN,{'tipo_pessoa','PFPJ_NM_TIPO','PFPJ_NM_TIPO','Y',})
            aadd(laFOREIGN,{'compliance','COMPLIANCE','COMPLIANCE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'motivo_vendor','MOTIVO_VENDOR','MOTIVO_VENDOR','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.contrato5.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_tipo','TP_CONTRATO','TP_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_periodicidade_valor','PERIODICIDADE_VL_CONTRATO','PERIODICIDADE_VL_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_situacao','CONTRATO_SITUACAO','CONTRATO_SITUACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'cumprimento','CUMPRIMENTO','CUMPRIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_periodo_reajuste','PERIODICIDADE_REAJUSTE','PERIODICIDADE_REAJUSTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_exclusiv_abrangencia','CONTRATO_EXCLUSIV_ABRANGENCIA','CONTRATO_EXCLUSIV_ABRANGENCIA','Y',})
            aadd(laFOREIGN,{'contrato_confidenc_abrangencia','CONTRATOCONFIDENCABRANGENCIA','CONTRATO_CONFIDENC_ABRANGENCIA','Y',})
            aadd(laFOREIGN,{'contrato_renovacao','CONTRATO_RENOVACAO','CONTRATO_RENOVACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vigencia','VIGENCIA','VIGENCIA','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'resultado_contrato','RESULTADO_CONTRATO','RESULTADO_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vendor','VENDOR','VENDOR','Y',})
            aadd(laFOREIGN,{'cc_custo','CC_CUSTO','CC_CUSTO','Y',})
            aadd(laFOREIGN,{'adiantamento_financeiro','ADIANTAMENTO_FINANCEIRO','ADIANTAMENTO_FINANCEIRO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'garantia_financeira','GARANTIA_FINANCEIRA','GARANTIA_FINANCEIRA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'nivel_aprovacao','NIVEL_APROVACAO','NIVEL_APROVACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'diretoria_contrato','DIRETORIA_CONTRATO','DIRETORIA_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'area_contrato','AREA_CONTRATO','AREA_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'unidade_contrato','UNIDADE_CONTRATO','UNIDADE_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_contratacao','TIPO_CONTRATACAO','TIPO_CONTRATACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'nome_projeto','NOME_PROJETO','NOME_PROJETO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'garantia_execucao','GARANTIA_EXECUCAO','GARANTIA_EXECUCAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'formato_pagamento','FORMATO_PAGAMENTO','FORMATO_PAGAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'garantia_fin_adiantamento','GARANTIA_FIN_ADIANTAMENTO','GARANTIA_FIN_ADIANTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'subdivisao_solicitante','SUBDIVISAO_SOLICITANTE','SUBDIVISAO_SOLICITANTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'mesbase_reajuste','MESBASE_REAJUSTE','MESBASE_REAJUSTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'empresa_area_solicitante','AREA_SOLICITANTE','AREA_SOLICITANTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
  
        case pcUSER_INTERFACE == 'mnt.pasta.contrato6.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_tipo','TP_CONTRATO','TP_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_periodicidade_valor','PERIODICIDADE_VL_CONTRATO','PERIODICIDADE_VL_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_situacao','CONTRATO_SITUACAO','CONTRATO_SITUACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'cumprimento','CUMPRIMENTO','CUMPRIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_periodo_reajuste','PERIODICIDADE_REAJUSTE','PERIODICIDADE_REAJUSTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_exclusiv_abrangencia','CONTRATO_EXCLUSIV_ABRANGENCIA','CONTRATO_EXCLUSIV_ABRANGENCIA','Y',})
            aadd(laFOREIGN,{'contrato_confidenc_abrangencia','CONTRATOCONFIDENCABRANGENCIA','CONTRATO_CONFIDENC_ABRANGENCIA','Y',})
            aadd(laFOREIGN,{'contrato_renovacao','CONTRATO_RENOVACAO','CONTRATO_RENOVACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vigencia','VIGENCIA','VIGENCIA','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'resultado_contrato','RESULTADO_CONTRATO','RESULTADO_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vendor','VENDOR','VENDOR','Y',})
            aadd(laFOREIGN,{'cc_custo','CC_CUSTO','CC_CUSTO','Y',})
            aadd(laFOREIGN,{'adiantamento_financeiro','ADIANTAMENTO_FINANCEIRO','ADIANTAMENTO_FINANCEIRO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'garantia_financeira','GARANTIA_FINANCEIRA','GARANTIA_FINANCEIRA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'nivel_aprovacao','NIVEL_APROVACAO','NIVEL_APROVACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'diretoria_contrato','DIRETORIA_CONTRATO','DIRETORIA_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'area_contrato','AREA_CONTRATO','AREA_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'unidade_contrato','UNIDADE_CONTRATO','UNIDADE_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_contratacao','TIPO_CONTRATACAO','TIPO_CONTRATACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'nome_projeto','NOME_PROJETO','NOME_PROJETO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'garantia_execucao','GARANTIA_EXECUCAO','GARANTIA_EXECUCAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'formato_pagamento','FORMATO_PAGAMENTO','FORMATO_PAGAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'garantia_fin_adiantamento','GARANTIA_FIN_ADIANTAMENTO','GARANTIA_FIN_ADIANTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'subdivisao_solicitante','SUBDIVISAO_SOLICITANTE','SUBDIVISAO_SOLICITANTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'mesbase_reajuste','MESBASE_REAJUSTE','MESBASE_REAJUSTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'empresa_area_solicitante','AREA_SOLICITANTE','AREA_SOLICITANTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})

        case pcUSER_INTERFACE == 'mnt.pasta.criminal.html'

            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'delegacia','DELEGACIA','DELEGACIA','Y',})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_natureza','NATUREZA','NATUREZA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.juridico_operacional.html'
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.marcas.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'tipomarca','TP_MARCA','TP_MARCA','Y',})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_registro','TP_REGISTRO','TP_REGISTRO','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})


        case pcUSER_INTERFACE == 'mnt.pasta.patentes.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'patente_natureza','PATENTE_NATUREZA','PATENTE_NATUREZA','Y',})
            aadd(laFOREIGN,{'tipo_registro','TP_REGISTRO','TP_REGISTRO','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.procuracao.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'procuracao_clausula','PROCURACAO_CLAUSULA','PROCURACAO_CLAUSULA','Y',})
            aadd(laFOREIGN,{'procuracao_poder_class','PROCURACAO_PODER_CLASS','PROCURACAO_PODER_CLASS','Y',})
            aadd(laFOREIGN,{'tipo_procuracao','TP_PROCURACAO','TP_PROCURACAO','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.procuracao2.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'procuracao_clausula','PROCURACAO_CLAUSULA','PROCURACAO_CLAUSULA','Y',})
            aadd(laFOREIGN,{'procuracao_poder_class','PROCURACAO_PODER_CLASS','PROCURACAO_PODER_CLASS','Y',})
            aadd(laFOREIGN,{'diretoria_resp','DIRETORIA_RESP','DIRETORIA_RESP','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_procuracao','TP_PROCURACAO','TP_PROCURACAO','Y',})
            aadd(laFOREIGN,{'tipo_poder','TP_PODER','TP_PODER','Y',})
            aadd(laFOREIGN,{'pfpj_atividade','PFPJ_ATIVIDADE','PFPJ_ATIVIDADE','Y',})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'status_procuracao','STATUS_PROCURACAO','STATUS_PROCURACAO','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.procuracao3.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'procuracao_clausula','PROCURACAO_CLAUSULA','PROCURACAO_CLAUSULA','Y',})
            aadd(laFOREIGN,{'procuracao_poder_class','PROCURACAO_PODER_CLASS','PROCURACAO_PODER_CLASS','Y',})
            aadd(laFOREIGN,{'diretoria_resp','DIRETORIA_RESP','DIRETORIA_RESP','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_procuracao','TP_PROCURACAO','TP_PROCURACAO','Y',})
            aadd(laFOREIGN,{'tipo_poder','TP_PODER','TP_PODER','Y',})
            aadd(laFOREIGN,{'pfpj_atividade','PFPJ_ATIVIDADE','PFPJ_ATIVIDADE','Y',})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'status_procuracao','STATUS_PROCURACAO','STATUS_PROCURACAO','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.societario.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

       case pcUSER_INTERFACE == 'mnt.pasta.societario3.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'assembleia_deliberacao','ASSEMBLEIA_DELIBERACAO','ASSEMBLEIA_DELIBERACAO','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

       case pcUSER_INTERFACE == 'mnt.pasta.societario4.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pfpj_atividade','PFPJ_ATIVIDADE','PFPJ_ATIVIDADE','Y',})
            aadd(laFOREIGN,{'assembleia_deliberacao','ASSEMBLEIA_DELIBERACAO','ASSEMBLEIA_DELIBERACAO','Y',})
            aadd(laFOREIGN,{'tipoparticipacao','TP_PARTICIPACAO','TP_PARTICIPACAO','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            // Glauber 19/10/2010 - Alteração do campo FNP de combo fixo para combo com cadastro no operacional
            aadd(laFOREIGN,{'fnp','FNP','FNP','Y',})
            // Sonia 16/5/2011 17:20:51 - Tipo participacao - tipo de emissões de ações
            aadd(laFOREIGN,{'tipoparticipacao','TP_PARTICIPACAO','TP_PARTICIPACAO','Y',})
            aadd(laFOREIGN,{'motivo_encerramento','MOTIVO_ENCERRAMENTO','MOTIVO_ENCERRAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})

        case pcUSER_INTERFACE == 'mnt.pasta.trabalhista.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pfpj_cargo','CARGO','CARGO','Y',})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.trabalhista_cont.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pfpj_cargo','CARGO','CARGO','Y',})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            *** alimenta desc auxiariares com id
           aadd(laFOREIGN,{'auxiliar1','DESC_AUXILIAR1','DESC_AUXILIAR1','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar2','DESC_AUXILIAR2','DESC_AUXILIAR2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar3','DESC_AUXILIAR3','DESC_AUXILIAR3','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar4','DESC_AUXILIAR4','DESC_AUXILIAR4','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar5','DESC_AUXILIAR5','DESC_AUXILIAR5','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})                                    


        case pcUSER_INTERFACE == 'mnt.pasta.tributario_administrativo.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tributo','TRIBUTO','TRIBUTO','Y',})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'ambito','AMBITO','AMBITO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})


        case pcUSER_INTERFACE == 'mnt.pasta.tributario_adm_cont.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tributo','TRIBUTO','TRIBUTO','Y',})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'ambito','AMBITO','AMBITO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            *** alimenta desc auxiariares com id
           aadd(laFOREIGN,{'auxiliar1','DESC_AUXILIAR1','DESC_AUXILIAR1','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar2','DESC_AUXILIAR2','DESC_AUXILIAR2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar3','DESC_AUXILIAR3','DESC_AUXILIAR3','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar4','DESC_AUXILIAR4','DESC_AUXILIAR4','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar5','DESC_AUXILIAR5','DESC_AUXILIAR5','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})                                    


        case pcUSER_INTERFACE == 'mnt.pasta.tributario_administrativo2.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tributo','TRIBUTO','TRIBUTO','Y',})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.tributario_adm2_cont.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tributo','TRIBUTO','TRIBUTO','Y',})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.tributario_adm_contra.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tributo','TRIBUTO','TRIBUTO','Y',})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'ambito','AMBITO','AMBITO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.tributario_adm_contra_cont.html' .or. pcUSER_INTERFACE == 'mnt.pasta.tributario2_adm_contra_cont.html' 

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tributo','TRIBUTO','TRIBUTO','Y',})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'ambito','AMBITO','AMBITO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            *** alimenta desc auxiariares com id
           aadd(laFOREIGN,{'auxiliar1','DESC_AUXILIAR1','DESC_AUXILIAR1','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar2','DESC_AUXILIAR2','DESC_AUXILIAR2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar3','DESC_AUXILIAR3','DESC_AUXILIAR3','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar4','DESC_AUXILIAR4','DESC_AUXILIAR4','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar5','DESC_AUXILIAR5','DESC_AUXILIAR5','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})                                    


        case pcUSER_INTERFACE == 'mnt.pasta.tributario_exec_fiscais.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tributo','TRIBUTO','TRIBUTO','Y',})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'ambito','AMBITO','AMBITO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
              
        case pcUSER_INTERFACE == 'mnt.pasta.tributario_exec_fiscais_cont.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tributo','TRIBUTO','TRIBUTO','Y',})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'ambito','AMBITO','AMBITO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
              
        case pcUSER_INTERFACE == 'mnt.pasta.tributario_exec_fisc_contra.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tributo','TRIBUTO','TRIBUTO','Y',})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'ambito','AMBITO','AMBITO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})


        case pcUSER_INTERFACE == 'mnt.pasta.tributario_exec_fisc_con_cont.html' .or. pcUSER_INTERFACE == 'mnt.pasta.tributario2_exec_fisc_con_cont.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tributo','TRIBUTO','TRIBUTO','Y',})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'ambito','AMBITO','AMBITO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            *** alimenta desc auxiariares com id
           aadd(laFOREIGN,{'auxiliar1','DESC_AUXILIAR1','DESC_AUXILIAR1','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar2','DESC_AUXILIAR2','DESC_AUXILIAR2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar3','DESC_AUXILIAR3','DESC_AUXILIAR3','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar4','DESC_AUXILIAR4','DESC_AUXILIAR4','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar5','DESC_AUXILIAR5','DESC_AUXILIAR5','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})                                    

             
        case pcUSER_INTERFACE == 'mnt.pasta.tributario_judicial.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tributo','TRIBUTO','TRIBUTO','Y',})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'ambito','AMBITO','AMBITO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            *** alimenta desc auxiariares com id
           aadd(laFOREIGN,{'auxiliar1','DESC_AUXILIAR1','DESC_AUXILIAR1','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar2','DESC_AUXILIAR2','DESC_AUXILIAR2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar3','DESC_AUXILIAR3','DESC_AUXILIAR3','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar4','DESC_AUXILIAR4','DESC_AUXILIAR4','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar5','DESC_AUXILIAR5','DESC_AUXILIAR5','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})                                    
            
            case pcUSER_INTERFACE == 'mnt.pasta.tributario_judicial_cont.html' .or. pcUSER_INTERFACE == 'mnt.pasta.tributario2_judicial_cont.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tributo','TRIBUTO','TRIBUTO','Y',})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'ambito','AMBITO','AMBITO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            *** alimenta desc auxiariares com id
           aadd(laFOREIGN,{'auxiliar1','DESC_AUXILIAR1','DESC_AUXILIAR1','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar2','DESC_AUXILIAR2','DESC_AUXILIAR2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar3','DESC_AUXILIAR3','DESC_AUXILIAR3','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar4','DESC_AUXILIAR4','DESC_AUXILIAR4','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar5','DESC_AUXILIAR5','DESC_AUXILIAR5','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})                                    

            
         case pcUSER_INTERFACE == 'mnt.pasta.recativos.html'

            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            
         case pcUSER_INTERFACE == 'mnt.pasta.recativos_cont.html'

            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            
         case pcUSER_INTERFACE == 'mnt.pasta.procon.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_ar','TP_AR','TP_AR','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.seguro_civel.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pericia','PERICIA','PERICIA','Y',})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.seguro_civel_cont.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pericia','PERICIA','PERICIA','Y',})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.notificacao.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_ar','TP_AR','TP_AR','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.consignacao.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_ar','TP_AR','TP_AR','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'numero_parcela','NR_PARCELA','NR_PARCELA','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.consignacao_cont.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_ar','TP_AR','TP_AR','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'numero_parcela','NR_PARCELA','NR_PARCELA','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.civel_administrativo.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.civel_administrativo_cont.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.consultoria.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.oficio.html'

            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_ar','TP_AR','TP_AR','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.civel_loja.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forma_pagamento','FORMA_PAGAMENTO','FORMA_PAGAMENTO','Y',})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_objeto','OBJETO','OBJETO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.civel_loja_cont.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'comarca_regiao','COMARCA','COMARCA','Y',})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forma_pagamento','FORMA_PAGAMENTO','FORMA_PAGAMENTO','Y',})
            aadd(laFOREIGN,{'clas_contabil','CLAS_CONTABIL','CLAS_CONTABIL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'pasta_objeto','OBJETO','OBJETO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            *** alimenta desc auxiariares com id
           aadd(laFOREIGN,{'auxiliar1','DESC_AUXILIAR1','DESC_AUXILIAR1','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar2','DESC_AUXILIAR2','DESC_AUXILIAR2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar3','DESC_AUXILIAR3','DESC_AUXILIAR3','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar4','DESC_AUXILIAR4','DESC_AUXILIAR4','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar5','DESC_AUXILIAR5','DESC_AUXILIAR5','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})                                    

         case pcUSER_INTERFACE == 'mnt.pasta.bacen.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_ar','TP_AR','TP_AR','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.email.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_ar','TP_AR','TP_AR','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.imprensa.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_ar','TP_AR','TP_AR','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.seguro_cobranca_adm.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.seguro_consultoria.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.seguro_ressarc_adm.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.juizo_filial.html'

            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'resultado_processo','FL_RESULTADO_PROCESSO','FL_RESULTADO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'instancia','INSTANCIA','INSTANCIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})


         case pcUSER_INTERFACE == 'mnt.pasta.juizo_filial_cont.html'

            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'resultado_processo','FL_RESULTADO_PROCESSO','FL_RESULTADO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'instancia','INSTANCIA','INSTANCIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.jurisprudencia.html'

            aadd(laFOREIGN,{'pasta_tb_assunto','ASSUNTO','ASSUNTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_tb_orgao_julgador','ORGAO_JULGADOR','ORGAO_JULGADOR','Y',})
            aadd(laFOREIGN,{'autoproc','AUTOPROC','AUTOPROC','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.jurisprudencia_cont.html'

            aadd(laFOREIGN,{'pasta_tb_assunto','ASSUNTO','ASSUNTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_tb_orgao_julgador','ORGAO_JULGADOR','ORGAO_JULGADOR','Y',})
            aadd(laFOREIGN,{'autoproc','AUTOPROC','AUTOPROC','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.jurisprudencia_seguro.html'

            aadd(laFOREIGN,{'pasta_tb_assunto','ASSUNTO','ASSUNTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_tb_orgao_julgador','ORGAO_JULGADOR','ORGAO_JULGADOR','Y',})
            aadd(laFOREIGN,{'ramosrsn','SEGUROPRODUTO','SEGUROPRODUTO','Y',})
            aadd(laFOREIGN,{'ramosrsn','SEGUROPROFIT','SEGUROPROFIT','Y',})
            aadd(laFOREIGN,{'autoproc','AUTOPROC','AUTOPROC','Y',})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.consultivo_seguro.html'

            aadd(laFOREIGN,{'pasta_tb_assunto','ASSUNTO','ASSUNTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'ramosrsn','SEGUROPRODUTO','SEGUROPRODUTO','Y',})
            aadd(laFOREIGN,{'ramosrsn','SEGUROPROFIT','SEGUROPROFIT','Y',})
            aadd(laFOREIGN,{'forma_contato','FORMA_CONTATO','FORMA_CONTATO_PERGUNTA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forma_contato','FORMA_CONTATO','FORMA_CONTATO_RESPOSTA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'empresa_area_solicitante','AREA_SOLICITANTE','AREA_SOLICITANTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'empresa_area_solicitada','AREA_SOLICITADA','AREA_SOLICITADA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})

         case pcUSER_INTERFACE == 'mnt.pasta.consultivo.html'

            aadd(laFOREIGN,{'pasta_tb_assunto','ASSUNTO','ASSUNTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'ramosrsn','SEGUROPRODUTO','SEGUROPRODUTO','Y',})
            aadd(laFOREIGN,{'forma_contato','FORMA_CONTATO','FORMA_CONTATO_PERGUNTA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forma_contato','FORMA_CONTATO','FORMA_CONTATO_RESPOSTA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'empresa_area_solicitante','AREA_SOLICITANTE','AREA_SOLICITANTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'empresa_area_solicitada','AREA_SOLICITADA','AREA_SOLICITADA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})

         case pcUSER_INTERFACE == 'mnt.pasta.ouvidoria.html'

            aadd(laFOREIGN,{'pasta_tb_assunto','ASSUNTO','ASSUNTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'ramosrsn','SEGUROPRODUTO','SEGUROPRODUTO','Y',})
            aadd(laFOREIGN,{'forma_contato','FORMA_CONTATO','FORMA_CONTATO_PERGUNTA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forma_contato','FORMA_CONTATO','FORMA_CONTATO_RESPOSTA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'motivo_questionamento','MOTIVO_QUESTIONAMENTO','MOTIVO_QUESTIONAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_documento','TP_DOCUMENTO','TP_DOCUMENTO','Y',})
            aadd(laFOREIGN,{'canal_venda','CANAL_VENDA','CANAL_VENDA','Y',})
            aadd(laFOREIGN,{'tipo_ocorrencia','TP_OCORRENCIA','TP_OCORRENCIA','Y',})
            aadd(laFOREIGN,{'tipo_melhoria','TP_MELHORIA','TP_MELHORIA','Y',})
            aadd(laFOREIGN,{'empresa_area_solicitante','AREA_SOLICITANTE','AREA_SOLICITANTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'empresa_area_solicitada','AREA_SOLICITADA','AREA_SOLICITADA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

        case pcUSER_INTERFACE == 'mnt.pasta.ouvidoria2.html'

            aadd(laFOREIGN,{'tipo_documento','TP_DOCUMENTO','TP_DOCUMENTO','Y',})
            aadd(laFOREIGN,{'empresa_area_solicitante','AREA_SOLICITANTE','AREA_SOLICITANTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'empresa_area_solicitada','AREA_SOLICITADA','AREA_SOLICITADA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'empresa_area_solicitada','AREA_SOLICITADA','AREA_SOLICITADA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'canal2','CANAL2','CANAL2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'parceiros','PARCEIROS','PARCEIROS','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_reclamacao','TP_RECLAMACAO','TP_RECLAMACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estipulacao','ESTIPULACAO','ESTIPULACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forma_decisao','FORMA_DECISAO','FORMA_DECISAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})

        case pcUSER_INTERFACE == 'mnt.pasta.ouvidoria3.html'

            aadd(laFOREIGN,{'tipo_documento','TP_DOCUMENTO','TP_DOCUMENTO','Y',})
            aadd(laFOREIGN,{'empresa_area_solicitante','AREA_SOLICITANTE','AREA_SOLICITANTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'empresa_area_solicitada','AREA_SOLICITADA','AREA_SOLICITADA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'empresa_area_solicitada','AREA_SOLICITADA','AREA_SOLICITADA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'canal2','CANAL2','CANAL2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'parceiros','PARCEIROS','PARCEIROS','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_reclamacao','TP_RECLAMACAO','TP_RECLAMACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estipulacao','ESTIPULACAO','ESTIPULACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forma_decisao','FORMA_DECISAO','FORMA_DECISAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'detalhe_reclamacao','DETALHE_RECLAMACAO','DETALHE_RECLAMACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})

        case pcUSER_INTERFACE == 'mnt.pasta.ouvidoria4.html'

            aadd(laFOREIGN,{'tipo_documento','TP_DOCUMENTO','TP_DOCUMENTO','Y',})
            aadd(laFOREIGN,{'empresa_area_solicitante','AREA_SOLICITANTE','AREA_SOLICITANTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'empresa_area_solicitada','AREA_SOLICITADA','AREA_SOLICITADA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'canal2','CANAL2','CANAL2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'parceiros','PARCEIROS','PARCEIROS','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_reclamacao','TP_RECLAMACAO','TP_RECLAMACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estipulacao','ESTIPULACAO','ESTIPULACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forma_decisao','FORMA_DECISAO','FORMA_DECISAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'motivo_encerramento','MOTIVO_ENCERRAMENTO','MOTIVO_ENCERRAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'resultado_processo','FL_RESULTADO_PROCESSO','FL_RESULTADO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'motivo_questionamento','MOTIVO_QUESTIONAMENTO','MOTIVO_QUESTIONAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'comarca_regiao','COMARCA','COMARCA','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            
        case pcUSER_INTERFACE == 'mnt.pasta.ouvidoria5.html'

            aadd(laFOREIGN,{'tipo_documento','TP_DOCUMENTO','TP_DOCUMENTO','Y',})
            aadd(laFOREIGN,{'empresa_area_solicitante','AREA_SOLICITANTE','AREA_SOLICITANTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'empresa_area_solicitada','AREA_SOLICITADA','AREA_SOLICITADA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_reclamacao','TP_RECLAMACAO','TP_RECLAMACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estipulacao','ESTIPULACAO','ESTIPULACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forma_decisao','FORMA_DECISAO','FORMA_DECISAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'produto_linha','PRODUTO_LINHA','PRODUTO_LINHA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'produto_assistencia','PRODUTO_ASSISTENCIA','PRODUTO_ASSISTENCIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'produto_marca','PRODUTO_MARCA','PRODUTO_MARCA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'produto_causa','PRODUTO_CAUSA','PRODUTO_CAUSA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'produto_solucao','PRODUTO_SOLUCAO','PRODUTO_SOLUCAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'motivo_questionamento','MOTIVO_QUESTIONAMENTO','MOTIVO_QUESTIONAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'canal2','CANAL2','CANAL2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})

            *** rufino 21/10/2015 16:27:52
            cmb_qtd_dias();

         case pcUSER_INTERFACE == 'mnt.pasta.imobiliario.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'imovel_tipo','TP_IMOVEL','TP_IMOVEL','Y',})
            aadd(laFOREIGN,{'posicao_imovel','POSICAO_IMOVEL','POSICAO_IMOVEL','Y',})
            aadd(laFOREIGN,{'unidade_medida','UNIDADE_MEDIDA','UNIDADE_MEDIDA','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.contrato_prestacao_servico.html' .or. pcUSER_INTERFACE == 'mnt.pst.pre.contrato_prestacao_servico.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'cumprimento','CUMPRIMENTO','CUMPRIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_situacao','CONTRATO_SITUACAO','CONTRATO_SITUACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'motivo_irregularidade','MOTIVO_IRREGULARIDADE','MOTIVO_IRREGULARIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_tipo','TP_CONTRATO','TP_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_exclusiv_abrangencia','CONTRATO_EXCLUSIV_ABRANGENCIA','CONTRATO_EXCLUSIV_ABRANGENCIA','Y',})
            aadd(laFOREIGN,{'contrato_confidenc_abrangencia','CONTRATOCONFIDENCABRANGENCIA','CONTRATO_CONFIDENC_ABRANGENCIA','Y',})

            aadd(laFOREIGN,{'contrato_renovacao','CONTRATO_RENOVACAO','CONTRATO_RENOVACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vigencia','VIGENCIA','VIGENCIA','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'resultado_contrato','RESULTADO_CONTRATO','RESULTADO_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vendor','VENDOR','VENDOR','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.pasta_pfpj.html' .or. pcUSER_INTERFACE == 'mnt.pst.pre.pasta_pfpj.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'tipo_conta','TP_CONTA','TP_CONTA','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.contrato_tce.html' .or. pcUSER_INTERFACE == 'mnt.pasta.contrato_tce.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'vigencia','VIGENCIA','VIGENCIA','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'resultado_contrato','RESULTADO_CONTRATO','RESULTADO_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vendor','VENDOR','VENDOR','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.empreendimento.html'
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'contrato_tipo','TP_CONTRATO','TP_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_situacao','CONTRATO_SITUACAO','CONTRATO_SITUACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'edificacao','EDIFICACAO','EDIFICACAO','Y',})
            aadd(laFOREIGN,{'motivo_irregularidade','MOTIVO_IRREGULARIDADE','MOTIVO_IRREGULARIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'acordo','ACORDO','ACORDO','Y',})
            aadd(laFOREIGN,{'tipo_carta','TP_CARTA','TP_CARTA','Y',})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vigencia','VIGENCIA','VIGENCIA','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})

         case pcUSER_INTERFACE == 'mnt.pasta.certidoes.html'
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'orgaos','ORGAO_GOV','ORGAO_GOV','Y',})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
 
         case pcUSER_INTERFACE == 'mnt.pasta.civel_consultivo.html'

            aadd(laFOREIGN,{'empresa_area_solicitante','AREA_SOLICITANTE','AREA_SOLICITANTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'empresa_area_solicitada','AREA_SOLICITADA','AREA_SOLICITADA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forma_contato','FORMA_CONTATO','FORMA_CONTATO_PERGUNTA','Y',})
            aadd(laFOREIGN,{'forma_contato','FORMA_CONTATO','FORMA_CONTATO_RESPOSTA','Y',})
            aadd(laFOREIGN,{'tipo_consulta','TP_CONSULTA','TP_CONSULTA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'complexidade','COMPLEXIDADE','COMPLEXIDADE','Y',})

// Glauber 03/06/2014 - Conforme solicitado pela Monica o combo prioridade não esta sendo montado, igual ocorre na aba informações principais
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'situacao_consulta','FL_CONSULTA','FL_CONSULTA','Y',})
            aadd(laFOREIGN,{'pasta_tb_assunto','ASSUNTO','ASSUNTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'ramosrsn','SEGUROPRODUTO','SEGUROPRODUTO','Y',})
            aadd(laFOREIGN,{'ramosrsn','SEGUROPROFIT','SEGUROPROFIT','Y',})
            aadd(laFOREIGN,{'envio','ENVIO','ENVIO','Y',})
            aadd(laFOREIGN,{'parecer','PARECER','PARECER','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'situacao_consulta','FL_CONSULTA','FL_CONSULTA','Y',})



// Incluído por Sonia Perdigão - 2010-08-16 17:47:36
// Unimed

         case pcUSER_INTERFACE == 'mnt.pasta.civel_consultivo2.html'
            aadd(laFOREIGN,{'empresa_area_solicitante','AREA_SOLICITANTE','AREA_SOLICITANTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'empresa_area_solicitada','AREA_SOLICITADA','AREA_SOLICITADA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forma_contato','FORMA_CONTATO','FORMA_CONTATO_PERGUNTA','Y',})
            aadd(laFOREIGN,{'forma_contato','FORMA_CONTATO','FORMA_CONTATO_RESPOSTA','Y',})
            aadd(laFOREIGN,{'tipo_consulta','TP_CONSULTA','TP_CONSULTA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'complexidade','COMPLEXIDADE','COMPLEXIDADE','Y',})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'situacao_consulta','FL_CONSULTA','FL_CONSULTA','Y',})
            aadd(laFOREIGN,{'pasta_tb_assunto','ASSUNTO','ASSUNTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'ramosrsn','SEGUROPRODUTO','SEGUROPRODUTO','Y',})
            aadd(laFOREIGN,{'ramosrsn','SEGUROPROFIT','SEGUROPROFIT','Y',})
            aadd(laFOREIGN,{'envio','ENVIO','ENVIO','Y',})
            aadd(laFOREIGN,{'parecer','PARECER','PARECER','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'tipo_providencia','TP_PROVIDENCIA','TP_PROVIDENCIA','Y',})
            aadd(laFOREIGN,{'classificacao_pessoas','PFPJ_NM_TIPO','DESCRICAO_PJ','Y',{'PFPJ_NATUREZA='+DLAP+'Jurídica'+DLAP}})
            aadd(laFOREIGN,{'classificacao_pessoas','PFPJ_NM_TIPO','DESCRICAO_PF','Y',{'PFPJ_NATUREZA='+DLAP+'Física'+DLAP}})
            aadd(laFOREIGN,{'lmi_cobertura','LMI_NM_COBERTURA','LMI_NM_COBERTURA','Y',})
            aadd(laFOREIGN,{'tipo_documento','TP_DOCUMENTO','TP_DOCUMENTO','Y',})

// Incluído por Sonia Perdigão - 3/6/2012 11:29:59 AM
// C&C

         case pcUSER_INTERFACE == 'mnt.pasta.civel_consultivo3.html'
            aadd(laFOREIGN,{'tipo_consulta','TP_CONSULTA','TP_CONSULTA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_tb_assunto','ASSUNTO','ASSUNTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_credito','TIPO_CREDITO','TIPO_CREDITO','Y',})
            
        case pcUSER_INTERFACE == 'mnt.pasta.ressarcimento.html'
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'resultado_processo','FL_RESULTADO_PROCESSO','FL_RESULTADO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'instancia','INSTANCIA','INSTANCIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            *** alimenta desc auxiariares com id
           aadd(laFOREIGN,{'auxiliar1','DESC_AUXILIAR1','DESC_AUXILIAR1','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar2','DESC_AUXILIAR2','DESC_AUXILIAR2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar3','DESC_AUXILIAR3','DESC_AUXILIAR3','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar4','DESC_AUXILIAR4','DESC_AUXILIAR4','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar5','DESC_AUXILIAR5','DESC_AUXILIAR5','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})                                    


        case pcUSER_INTERFACE == 'mnt.pasta.ressarcimento_exp.html'
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'resultado_processo','FL_RESULTADO_PROCESSO','FL_RESULTADO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'instancia','INSTANCIA','INSTANCIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            *** alimenta desc auxiariares com id
            aadd(laFOREIGN,{'auxiliar1','DESC_AUXILIAR1','DESC_AUXILIAR1','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar2','DESC_AUXILIAR2','DESC_AUXILIAR2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar3','DESC_AUXILIAR3','DESC_AUXILIAR3','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar4','DESC_AUXILIAR4','DESC_AUXILIAR4','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar5','DESC_AUXILIAR5','DESC_AUXILIAR5','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})                                    


// Incluído por Sonia Perdigão - 21/6/2012 11:29:59 AM
// Projetos

         case pcUSER_INTERFACE == 'mnt.pasta.projetos.html'
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})

// Incluído por Sonia Perdigão - 25/6/2012 11:29:59 AM
// Projetos

         case pcUSER_INTERFACE == 'mnt.pasta.ocorrencias.html'
// Incluído por Sonia Perdigão - 29/09/2014 10:02:04
// BIOSEV

        case pcUSER_INTERFACE == 'mnt.pasta.trabalhista2_cont.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pfpj_cargo','CARGO','CARGO','Y',})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            *** alimenta desc auxiariares com id
            aadd(laFOREIGN,{'auxiliar1','DESC_AUXILIAR1','DESC_AUXILIAR1','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar2','DESC_AUXILIAR2','DESC_AUXILIAR2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar3','DESC_AUXILIAR3','DESC_AUXILIAR3','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar4','DESC_AUXILIAR4','DESC_AUXILIAR4','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar5','DESC_AUXILIAR5','DESC_AUXILIAR5','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})                                    


// Incluído por Sonia Perdigão - 04/11/2014 17:00:21
// LDC

        case pcUSER_INTERFACE == 'mnt.pasta.contrato3.html'

            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_tipo','TP_CONTRATO','TP_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_periodicidade_valor','PERIODICIDADE_VL_CONTRATO','PERIODICIDADE_VL_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_situacao','CONTRATO_SITUACAO','CONTRATO_SITUACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'cumprimento','CUMPRIMENTO','CUMPRIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_periodo_reajuste','PERIODICIDADE_REAJUSTE','PERIODICIDADE_REAJUSTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_renovacao','CONTRATO_RENOVACAO','CONTRATO_RENOVACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'vigencia','VIGENCIA','VIGENCIA','Y',})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'resultado_contrato','RESULTADO_CONTRATO','RESULTADO_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})

// Glauber 01/12/2014 - Utilizar a função para carga do combo
              *** rufino 29/04/2015 15:17:04
              *** alimenta empresa utilizando controle de grupos
              cmb_empresa()

              *** rufino 17/12/2014
              *** alimenta desc plataforma com id
              cmb_plataforma(fcTP_PASTA)
              cmb_margem(fcTP_PASTA)

            // Combo Fast Pass

            WPut('FAST_PASS.option',{'','SIM','NÃO'})
            WPut('FAST_PASS.optionvalue',{'','S','N'})

        case pcUSER_INTERFACE == 'mnt.pasta.plano_acao.html'

            aadd(laFOREIGN,{'causa_raiz','substr(PEDIDO_PROCESSO,1,50)','PEDIDO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'abrangencia','ABRANGENCIA','ABRANGENCIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_tp_baixa','TP_BAIXA','TP_BAIXA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'analise_risco','ANALISE_RISCO','ANALISE_RISCO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})


         otherwise
            aadd(laFOREIGN,{'instancia','INSTANCIA','INSTANCIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'estados','UF','UF','Y',})
            aadd(laFOREIGN,{'comarca_regiao','COMARCA','COMARCA','Y',})
            aadd(laFOREIGN,{'prioridade','PRIORIDADE','PRIORIDADE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'forum','FORUM','FORUM','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pericia','PERICIA','PERICIA','Y',})
            aadd(laFOREIGN,{'tipo_apolice','TP_APOLICE','TP_APOLICE','Y',})
            aadd(laFOREIGN,{'contrato_tipo','TP_CONTRATO','TP_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_situacao','CONTRATO_SITUACAO','CONTRATO_SITUACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_periodicidade_valor','PERIODICIDADE_VL_CONTRATO','PERIODICIDADE_VL_CONTRATO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'contrato_periodo_reajuste'   ,'PERIODICIDADE_REAJUSTE','PERIODICIDADE_REAJUSTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'patente_natureza','PATENTE_NATUREZA','PATENTE_NATUREZA','Y',})
            aadd(laFOREIGN,{'departamento','DEPARTAMENTO','DEPARTAMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'imposto','IMPOSTO','IMPOSTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'orgaos','ORGAO_GOV','ORGAO_GOV','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'delegacia','DELEGACIA','DELEGACIA','Y',})
            aadd(laFOREIGN,{'pfpj_cargo','CARGO','CARGO','Y',})
            aadd(laFOREIGN,{'procuracao_clausula','PROCURACAO_CLAUSULA','PROCURACAO_CLAUSULA','Y',})
            aadd(laFOREIGN,{'procuracao_poder_class','PROCURACAO_PODER_CLASS','PROCURACAO_PODER_CLASS','Y',})
            aadd(laFOREIGN,{'workgroup','WORKGROUP','WORKGROUP','Y',})
            aadd(laFOREIGN,{'tipoacao','TP_ACAOPROCESSUAL','TP_ACAOPROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipomarca','TP_MARCA','TP_MARCA','Y',})
            aadd(laFOREIGN,{'pfpj_atividade','PFPJ_ATIVIDADE','PFPJ_ATIVIDADE','Y',})
            aadd(laFOREIGN,{'tributo','TRIBUTO','TRIBUTO','Y',})
            aadd(laFOREIGN,{'fase_processual','FASE_PROCESSUAL','FASE_PROCESSUAL','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'resultado_processo','FL_RESULTADO_PROCESSO','FL_RESULTADO_PROCESSO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_deposito','TP_DEPOSITO','TP_DEPOSITO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_vara','TP_VARA','TP_VARA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'procedimento','PROCEDIMENTO','PROCEDIMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_EMPRESA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'posicao_parte','POSICAO_PARTE','POSICAO_PARTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_classifica','PASTA_CLASSIFICA','PASTA_CLASSIFICA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_natureza','NATUREZA','NATUREZA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'empresa_area_solicitante','AREA_SOLICITANTE','AREA_SOLICITANTE','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'empresa_area_solicitada','AREA_SOLICITADA','AREA_SOLICITADA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'tipo_segmento','TP_SEGMENTO','TP_SEGMENTO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'pasta_familia','PASTA_FAMILIA','PASTA_FAMILIA','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'motivo_infracao','NM_MOTIVO_INFRACAO','NM_MOTIVO_INFRACAO','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar1','DESC_AUXILIAR1','DESC_AUXILIAR1','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar2','DESC_AUXILIAR2','DESC_AUXILIAR2','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar3','DESC_AUXILIAR3','DESC_AUXILIAR3','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar4','DESC_AUXILIAR4','DESC_AUXILIAR4','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})
            aadd(laFOREIGN,{'auxiliar5','DESC_AUXILIAR5','DESC_AUXILIAR5','Y',{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}})                                    

      endcase
   endif

   lnSIZE := wmd_fieldsize('WFIELD')
   for ii := 1 to len(laFOREIGN)

       lcSELECT:=''

       laFIELD := structtable(WSet("DB_ACTIVE"),laFOREIGN[ii,1],1,'A')
       liPOS   := ascan(laFIELD,'FL_ATIVO')

       lcSELECT += 'select distinct '+DLAP+laFOREIGN[ii,3]+DLAP+' as WFIELD,'
       lcSELECT += laFOREIGN[ii,2]+' as WFVALUE'

       if liPOS<>0
          lcSELECT +=','+DLAP+'FL_ATIVO'+DLAP+' as WFIELD2,'
          lcSELECT +='FL_ATIVO as WFVALUE2'
       endif

       lcSELECT +=' from '+laFOREIGN[ii,1]

       if valtype(laFOREIGN[ii,5]) != 'U'
          lcSELECT += ' where '+laFOREIGN[ii,5][1]
       endif

       lcSELECT += ' order by WFIELD,WFVALUE'

       if db_query(lcSELECT) == -1
          error_sys('pscc: '+db_error())
       endif
       laRESULT := db_fetchall()

       if len(laRESULT) > 1
            for jj := 2 to len(laRESULT)

                if liPOS<>0
                   if laRESULT[jj,4] == 'D'
                      aadd(laDEF,alltrim(laRESULT[jj,2]))
                   elseif laRESULT[jj,4] == 'I'
                      aadd(laINA,alltrim(laRESULT[jj,2]))
                   else
                      aadd(laATI,alltrim(laRESULT[jj,2]))
                   endif
                else
                   aadd(laATI,alltrim(laRESULT[jj,2]))
                endif

            next jj

            alimenta(laDEF,laINA,laATI,laFOREIGN[ii,4],alltrim(laFOREIGN[ii,3]))

            laDEF := {}
            laATI := {}
            laINA := {}
            laAUX := {}
       endif
   next ii

return(nil)
***********************************************************
static function alimenta(laDEF,laINA,laATI,fcLINHA,fcFIELD)
***********************************************************

local laPUTV    := {} ,;
      laPUT     := {} as array

local xx        := 0 as int

if len(laDEF) == 0
   if fcLINHA == 'Y'  // Adiciona uma linha vazia no inicio do combo, caso seja solicitado
      aadd(laDEF,'')
   endif
endif

for xx=1 to len(laDEF)
    aadd(laPUT,laDEF[xx])
    aadd(laPUTV,laDEF[xx])
next xx

for xx=1 to len(laATI)
    aadd(laPUT,laATI[xx])
    aadd(laPUTV,laATI[xx])
next xx

for xx=1 to len(laINA)
    aadd(laPUTV,laINA[xx])
    aadd(laPUT,'INATIVO - '+laINA[xx])
next xx

wPut(fcFIELD+'.option',laPUT)
wPut(fcFIELD+'.optionvalue',laPUTV)

return(nil)

/*
* Data.Criaï¿½o: 21.09.2006
* Function....: cmb_causaacao(faFIELDS)
* Objetivo....: Carregar os dados do combo CAUSAACAO filtrados por PASTA_FAMILIA.
* Parï¿½etros..:
*    faFIELDS...: Campos da tabela pasta. Nesse vetor ï¿½feito uma consulta para verificar se existe o combo CAUSAACAO.
* Alteração em 18/2/2009 15:06:38 para bloquear a família no template tributario_exec_fisc_con_cont seguindo o padrão do oracle
*              Sonia Perdigão
* Retorno.....: Nenhum
*/
static function cmb_causaacao(faFIELDS)
   local laPUT    := {} ,;
         laDEF    := {} ,;
         laDEFV   := {} ,;
         laATI    := {} ,;
         laATIV   := {} ,;
         laINA    := {} ,;
         laINAV   := {} ,;
         laPUTV   := {} ,;
         laFIELD  := {} ,;
         laRESULT := {} as array

   local ii    := 0 ,;
         jj    := 0 ,;
         liPOS := 0 as int

   local lcPASTA_FAMILIA := '' as string


// SONIA PERDIGAO - 2/17/2011 10:59:06 AM
   if db_select({'FL_FAMILIA_CAUSA'},'pasta_config',,{'TP_PASTA='+DLAP+GetWPut('TP_PASTA')+DLAP}) == -1

        error_sys(db_error())
   endif
   lcPASTA_FAMILIA := GetWPut('PASTA_FAMILIA')
   laRESULT := db_fetchall()


// sonia perdigao - 2/15/2011 10:31:33 AM

   laFIELD := structtable(WSet("DB_ACTIVE"),'causaacao',1,'A')
   liPOS   := ascan(laFIELD,'FL_ATIVO')
			 
   IF len(laRESULT) > 1
      if laRESULT[2,1] = 'S'
         if ascan(faFIELDS,'CAUSAACAO') > 0

            if liPOS<>0
               laFIELD:={'CAUSAACAO','FL_ATIVO'}
            else
               laFIELD:={'CAUSAACAO'}
            endif

            if GetWPut('PASTA_FAMILIA')=""
               *** rufino 27/08/2015 14:24:33
               *** esta dando mensagem quando clica em nova pasta
               ***walert('Pasta Familia não informada!!!')
               return (nil)
            else
               if db_select(laFIELD,'causaacao',,{'TP_PASTA='+DLAP+GetWPut('TP_PASTA')+DLAP + ' and PASTA_FAMILIA='+DLAP+GetWPut('PASTA_FAMILIA')+DLAP},{'CAUSAACAO'}) == -1
                  error_sys(db_error())



               endif
            endif

         else
            if liPOS<>0
               laFIELD:={'CAUSAACAO','FL_ATIVO'}
            else
               laFIELD:={'CAUSAACAO'}
            endif

            if db_select(laFIELD,'causaacao',,{'TP_PASTA='+DLAP+GetWPut('TP_PASTA')+DLAP },{'CAUSAACAO'}) == -1
               error_sys(db_error())
            endif
         endif
      else

         if liPOS<>0
            laFIELD:={'CAUSAACAO','FL_ATIVO'}
         else
            laFIELD:={'CAUSAACAO'}
         endif

         if db_select(laFIELD,'causaacao',,{'TP_PASTA='+DLAP+GetWPut('TP_PASTA')+DLAP },{'CAUSAACAO'}) == -1
            error_sys(db_error())
         endif
      endif
   endif
   laRESULT := db_fetchall()

   if len(laRESULT)>1

   for jj := 2 to len(laRESULT)
       if liPOS<>0
          if laRESULT[jj,2] == 'D'
             aadd(laDEF,laRESULT[jj,1])
             aadd(laDEFV,laRESULT[jj,1])

           elseif laRESULT[jj,2] == 'I'
             aadd(laINA,laRESULT[jj,1])
             aadd(laINAV,laRESULT[jj,1])
           else
             aadd(laATI,laRESULT[jj,1])
             aadd(laATIV,laRESULT[jj,1])
          endif
       else
          aadd(laATI,laRESULT[jj,1])
          aadd(laATIV,laRESULT[jj,1])
       endif
   next jj

   if len(laDEF) == 0
      aadd(laDEF,'') // Adiciona uma linha vazia no inicio do combo, caso seja solicitado
      aadd(laDEFV,'')
   endif

   for jj=1 to len(laDEF)
       aadd(laPUT,laDEF[jj])
       aadd(laPUTV,laDEFV[jj])
   next jj

   for jj=1 to len(laATI)
       aadd(laPUT,laATI[jj])
       aadd(laPUTV,laATIV[jj])
   next jj

   for jj=1 to len(laINA)
       aadd(laPUT,'INATIVO - '+laINA[jj])
       aadd(laPUTV,laINAV[jj])
   next jj

   WPut('CAUSAACAO.option',laPUT)
   WPut('CAUSAACAO.optionvalue',laPUTV)

   endif

return (nil)

/*
* Data.Criaï¿½o: 21.09.2006
* Function....: cmb_exito(faFIELDS)
* Objetivo....: Carregar os dados do combo EXITO_RISCOPERDA filtrados por TP_PASTA.
* Parï¿½etros..:
*    faFIELDS...: Campos da tabela pasta. Nesse vetor ï¿½feito uma consulta para verificar se existe o combo EXITO_RISCOPERDA.
* Montagem....: Sonia Perdigão 2009-10-21 11:05:24
* Retorno.....: Nenhum
*/
static function cmb_exito(faFIELDS)

   local laPUT    := {} ,;
         laPUTX   := {} ,;
         laDEF    := {} ,;
         laDEFV   := {} ,;
         laATI    := {} ,;
         laATIV   := {} ,;
         laINA    := {} ,;
         laINAV   := {} ,;
         laPUTV   := {} ,;
         laFIELD  := {} ,;
         laRESULT := {} as array

   local ii    := 0 ,;
         jj    := 0 ,;
         liPOS := 0 as int


   
   if ascan(faFIELDS,'PC_RISCO') > 0
      if db_select({'PC_RISCO'},'pasta',,{'NR_PASTA='+DLAP+str(GetWPut('NR_PASTA'))+DLAP +' AND TP_PASTA='+DLAP+GetWPut('TP_PASTA')+DLAP}) == -1
         error_sys(db_error())
      endif
      laRESULT := db_fetchrow()
      if len(laRESULT) > 1
         aadd(laPUTX,str(laRESULT[ii,1],3))
      endif

      laFIELD := structtable(WSet("DB_ACTIVE"),'exito_riscoperda',1,'A')
      liPOS   := ascan(laFIELD,'FL_ATIVO')

      if liPOS<>0
         laFIELD:={'PC_RISCO','RISCOPERDA','FL_ATIVO'}
      else
         laFIELD:={'PC_RISCO','RISCOPERDA'}
      endif

      if db_select(laFIELD,'exito_riscoperda',,{'TP_PASTA='+DLAP+GetWPut('TP_PASTA')+DLAP},{'RISCOPERDA'}) == -1
         error_sys(db_error())
      endif
      laRESULT := db_fetchall()

      if len(laRESULT) > 1
         for jj := 2 to len(laRESULT)
            if liPOS<>0
               if laRESULT[jj,3] == 'D'
                  aadd(laDEF,str(laRESULT[jj,1],3)+' - '+laRESULT[jj,2])
                  aadd(laDEFV,str(laRESULT[jj,1],3)+' - '+laRESULT[jj,2])

               elseif laRESULT[jj,3] == 'I'
                  aadd(laINA,str(laRESULT[jj,1],3)+' - '+laRESULT[jj,2])
                  aadd(laINAV,str(laRESULT[jj,1],3)+' - '+laRESULT[jj,2])
               else
                  aadd(laATI,str(laRESULT[jj,1],3)+' - '+laRESULT[jj,2])
                  aadd(laATIV,str(laRESULT[jj,1],3)+' - '+laRESULT[jj,2])
               endif
             else
               aadd(laATI,str(laRESULT[jj,1],3)+' - '+laRESULT[jj,2])
               aadd(laATIV,str(laRESULT[jj,1],3)+' - '+laRESULT[jj,2])
            endif
         next jj

         aadd(laDEF,laPUTX)
         aadd(laDEFV,laPUTX)

         for jj=1 to len(laDEF)
             aadd(laPUT,laDEF[jj])
             aadd(laPUTV,laDEFV[jj])
         next jj

         for jj=1 to len(laATI)
             aadd(laPUT,laATI[jj])
             aadd(laPUTV,laATIV[jj])
         next jj

         for jj=1 to len(laINA)
             aadd(laPUT,'INATIVO - '+laINA[jj])
             aadd(laPUTV,laINAV[jj])
         next jj

         WPut('PC_RISCO.option',laPUT)
         WPut('PC_RISCO.optionvalue',laPUTV)

      endif



   endif
     lcTP_PASTA := faFIELDS 
//   if db_query('select pc_risco, riscoperda from exito_riscoperda where TP_PASTA ='+DLAP+faFIELDS+DLAP+order by riscoperda') == -1
  

return (nil)

/*
* Data.Criaï¿½o: 15.11.2006
* Function....: cmb_fl_pasta()
* Objetivo....: Carregar os dados do combo TP_PASTA.
* Parï¿½etros..:
*    fcTP_PASTA..: Tipo de Pasta
*    fcACTION....: Aï¿½o vinda do POST
*
* Retorno.....: Nenhum
*/
static function cmb_fl_pasta(fcTP_PASTA,fcACTION)
   local laWHERE  := {} ,;
         laDEF    := {} ,;
         laDEFV   := {} ,;
         laATI    := {} ,;
         laATIV   := {} ,;
         laINA    := {} ,;
         laINAV   := {} ,;
         laPUTV   := {} ,;
         laFIELD  := {} ,;
         laRESULT := {} ,;
         laPUT    := {} as array

   local lnPOS := 0 ,;
         liPOS := 0 ,;
         ii    := 0 ,;
         jj    := 0 as int

   //Nas Pastas onde existe Aba Resultado, filtra o combo TP_PASTA
   if psab_find(fcTP_PASTA,'psab.resultado.html') .or. psab_find(fcTP_PASTA,'psab.res.sin.html')
      if ! empty(alltrim(GetWPut('FL_PASTA')))
         laWHERE := {'TP_PASTA='+DLAP+fcTP_PASTA+DLAP,'FL_PASTA_STATUS=(select FL_PASTA_STATUS from pasta_status where TP_PASTA='+DLAP+fcTP_PASTA+DLAP+' and FL_PASTA='+DLAP+GetWPut('FL_PASTA')+DLAP+')'}
      else
         laWHERE := {'TP_PASTA='+DLAP+fcTP_PASTA+DLAP+' and FL_PASTA_STATUS='+DLAP+'A'+DLAP}
      endif

   else
      laWHERE := {'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}
   endif

   laDEF := {}
   laDEFV:= {}

   laATI := {}
   laATIV:= {}

   laINA := {}
   laINAV:= {}

   laPUT := {}
   laPUTV:= {}

   laFIELD := structtable(WSet("DB_ACTIVE"),'pasta_status',1,'A')
   liPOS   := ascan(laFIELD,'FL_ATIVO')

   if liPOS<>0
      laFIELD:={'FL_PASTA','FL_PASTA_STATUS','FL_DEFAULT','FL_ATIVO'}
     else
      laFIELD:={'FL_PASTA','FL_PASTA_STATUS','FL_DEFAULT'}
   endif

   if db_select(laFIELD,'pasta_status',,laWHERE,{'FL_PASTA_STATUS','FL_PASTA'}) == -1
      error_sys(db_error())
   endif
   laRESULT := db_fetchall()

   for jj := 2 to len(laRESULT)
       if liPOS<>0
          if laRESULT[jj,4] == 'D'
             aadd(laDEF,laRESULT[jj,1])
             aadd(laDEFV,laRESULT[jj,1])

           elseif laRESULT[jj,4] == 'I'
             aadd(laINA,laRESULT[jj,1])
             aadd(laINAV,laRESULT[jj,1])
           else
             aadd(laATI,laRESULT[jj,1])
             aadd(laATIV,laRESULT[jj,1])
          endif
       else
          aadd(laATI,laRESULT[jj,1])
          aadd(laATIV,laRESULT[jj,1])
       endif
   next jj

   if len(laDEF) == 0
      aadd(laDEF,'') // Adiciona uma linha vazia no inicio do combo, caso seja solicitado
      aadd(laDEFV,'0')
   endif

   for jj=1 to len(laDEF)
       aadd(laPUT,laDEF[jj])
       aadd(laPUTV,laDEFV[jj])
   next jj

   for jj=1 to len(laATI)
       aadd(laPUT,laATI[jj])
       aadd(laPUTV,laATIV[jj])
   next jj

   for jj=1 to len(laINA)
       aadd(laPUT,'INATIVO - '+laINA[jj])
       aadd(laPUTV,laINAV[jj])
   next jj

   if len(laRESULT) > 1

      WPut('FL_PASTA.option',laPUT)
      WPut('FL_PASTA.optionvalue',laPUTV)

      if fcACTION == 'NEW'
         lnPOS := ascan(laRESULT,{| x | x[3] =='S'})
         if lnPOS > 0
            WPut('FL_PASTA',laRESULT[lnPOS,1])
         endif
      endif

   endif

return (nil)




/*
* Data.Criaï¿½o: 15.11.2006
* Function....: cmb_fl_pasta()
* Objetivo....: Carregar os dados do combo TP_PASTA.
* Parï¿½etros..:
*    fcTP_PASTA..: Tipo de Pasta
*    fcACTION....: Aï¿½o vinda do POST
*
* Retorno.....: Nenhum
*/
static function oldcmb_fl_pasta(fcTP_PASTA,fcACTION)
   local laWHERE  := {} ,;
         laDEF    := {} ,;
         laDEFV   := {} ,;
         laATI    := {} ,;
         laATIV   := {} ,;
         laINA    := {} ,;
         laINAV   := {} ,;
         laPUTV   := {} ,;
         laFIELD  := {} ,;
         laRESULT := {} ,;
         laPUT    := {} as array

   local lnPOS := 0 ,;
         liPOS := 0 ,;
         ii    := 0 ,;
         jj    := 0 as int

   *** rufino 29/07/2016 13:56:10
   *** não pode dar GetWPut do campo TP_PASTA tem momento que ele não existe na tela,por isso ele e passado como parametro na função

   //Nas Pastas onde existe Aba Resultado, filtra o combo TP_PASTA
   if psab_find(fcTP_PASTA,'psab.resultado.html') .or. psab_find(fcTP_PASTA,'psab.res.sin.html')
      *** rufino 03/05/2017 10:28:18 esta ocorrendo o mesmo com o FL_PASTA no momento da carga do combo ele não exixte na tela como não foi passado como parametro nunca vai existe
      *** por isso entrava sempre na segunda opção do IF.
      *** por esse motivo retirei o IF que olha o conteudo do campo FL_PASTA

      ****if ! empty(alltrim(GetWPut('FL_PASTA')))
         // SONIA - Customização Dreyfus teste em 24/10/2014 09:45:43
         // laWHERE := {'FL_PASTA_STATUS=(select FL_PASTA_STATUS from pasta_status where FL_PASTA='+DLAP+GetWPut('FL_PASTA')+DLAP+' and TP_PASTA='+DLAP+GetWPut('TP_PASTA')+DLAP)'}
         *** rufino 03/05/2017 10:28:18
         *** laWHERE := {'FL_PASTA_STATUS='+DLAP+'A'+DLAP+' and TP_PASTA='+DLAP+fcTP_PASTA+DLAP}
         laWHERE := {'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}
      else
         *** rufino 03/05/2017 10:28:18
         laWHERE := {'TP_PASTA='+DLAP+fcTP_PASTA+DLAP}
      ***endif
   endif


   laDEF := {}
   laDEFV:= {}

   laATI := {}
   laATIV:= {}

   laINA := {}
   laINAV:= {}

   laPUT := {}
   laPUTV:= {}
// debug2(lawhere)
   laFIELD := structtable(WSet("DB_ACTIVE"),'pasta_status',1,'A')
   liPOS   := ascan(laFIELD,'FL_ATIVO')

   if liPOS<>0
      laFIELD:={'FL_PASTA','FL_PASTA_STATUS','FL_DEFAULT','FL_ATIVO'}
     else
      laFIELD:={'FL_PASTA','FL_PASTA_STATUS','FL_DEFAULT'}
   endif

// debug2(lawhere,,200)
   if db_select(laFIELD,'pasta_status',,laWHERE,{'FL_PASTA_STATUS'}) == -1
      error_sys(db_error())
   endif
   laRESULT := db_fetchall()
// debug2(laresult)
   for jj := 2 to len(laRESULT)
       if liPOS<>0
          if laRESULT[jj,4] == 'D'
             aadd(laDEF,laRESULT[jj,1])
             aadd(laDEFV,laRESULT[jj,1])

           elseif laRESULT[jj,4] == 'I'
             aadd(laINA,laRESULT[jj,1])
             aadd(laINAV,laRESULT[jj,1])
           else
             aadd(laATI,laRESULT[jj,1])
             aadd(laATIV,laRESULT[jj,1])
          endif
       else
          aadd(laATI,laRESULT[jj,1])
          aadd(laATIV,laRESULT[jj,1])
       endif
   next jj

   if len(laDEF) == 0
      aadd(laDEF,'') // Adiciona uma linha vazia no inicio do combo, caso seja solicitado
      aadd(laDEFV,'')
   endif

   for jj=1 to len(laDEF)
       aadd(laPUT,laDEF[jj])
       aadd(laPUTV,laDEFV[jj])
   next jj

   for jj=1 to len(laATI)
       aadd(laPUT,laATI[jj])
       aadd(laPUTV,laATIV[jj])
   next jj

   for jj=1 to len(laINA)
       aadd(laPUT,'INATIVO - '+laINA[jj])
       aadd(laPUTV,laINAV[jj])
   next jj

   if len(laRESULT) > 1

      WPut('FL_PASTA.option',laPUT)
      WPut('FL_PASTA.optionvalue',laPUTV)

      *** rufino 09/01/2015 16:21
      *** quando aperta save e falta campo obrigatorio fcACTION vem como SAVE
      ***if fcACTION == 'NEW'

      if (Lower(Wget('NR_PASTA')) == 'new') .or. (Wget('NR_PASTA','N') == 0)
         lnPOS := ascan(laRESULT,{| x | x[3] =='S'})
         if lnPOS > 0
            WPut('FL_PASTA',laRESULT[lnPOS,1])
         endif
      endif

   endif

return (nil)


//-------------------------------------------------------------------------------------------------
/*
* Function..: Monta_cip_filho()
* Objetivo..: Verifica se o cip pode ser alterado na pasta filho
* Parâmetros:
*  fcCip_antes   : Contem os cips já cadastrados na pasta 
*  faVal_lits    : Contem a tabela de campos que não replicam
*  faCip         : Contem todas as descricoes do wfield
* Retorno...: nil
*/
static function monta_cip_filho(fcCip_antes,faVal_lits,faCip,fcNr_pasta, fcRelac)

local  lcWhere     := '' ,;
       lcTran      := '' ,;
       lwCip       := '' ,;
       lcCips      := '' as string

local  laRes       := {} ,;
       laCip_antes := {} ,;
       laSave      := {} as Array 

//------   Montar o array com os cips da pasta antes de alterar - cip_antes  -------

         for ii := 1 to len(fcCip_antes)
             lcTran := substr(fcCip_antes,ii,1)
             if lcTran <> '#'
                lwCip += lcTran
             else
                if !empty(lwCip)
                    aadd(laCip_antes,lwCip) 
                    lwCip:=''                              
                endif
             endif
         next ii

//---   Manter os Cips que não podem ser alterados pelo filho    -------------------

         for nn:= 1 to len(faCip)
             if ascan(faVAl_lits, faCip[nn]) <= 0
                lcWHERE := 'NR_PASTA='+fcNR_PASTA+' and WFIELD='+DLAP+faCIP[nn]+DLAP
                if db_select({'CIP'},'pasta_cip',,{lcWHERE}) == -1
                      error_sys(db_error())
                endif
                laRES:= db_fetchrow()
                if len(laRes) > 0
                    for ii:=1 to len(laRes)
                        lcCIPS += '#'
                        lcCIPS += laRes[1]
                    next ii
                 endif
             else

//------ qdo o campo esta no pasta_config pode ser alterado pelo filho  ----------------------------              
                   if WGet(faCIP[nn],'B')
                      if ! empty(alltrim(WGet(faCIP[nn],'C')))
                         lcCIPS += '#'
                         lcCIPS += alltrim(WGet(faCIP[nn],'C'))
                      endif
                   endif
                endif
          next nn
Return(lcCips)


/*
* Function..: lista_poderes(fcNR_PASTA)
* Objetivo..: Gerar Listagem de poderes da pasta
* Parâmetros: fcNR_PASTA
* Retorno...: nil
*/
static function lista_poderes(fcNR_PASTA,fcTP_PODER)

  if empty(fcTP_PODER)
     if db_select({'*'},'pasta_tipo_poderes',,{'NR_PASTA='+fcNR_PASTA}) == -1
        error_sys(db_error())
     endif
   else
     if db_select({'*'},'pasta_tipo_poderes',,{'NR_PASTA='+fcNR_PASTA+' and TP_PODER='+DLAP+fcTP_PODER+DLAP}) == -1
        error_sys(db_error())
     endif
   endif
   wPut('lstXPODERES',db_fetchall())

return(nil)




/*
* Function....: cmb_poderes(faFIELDS)
* Retorno.....: Nenhum
*/
static function cmb_poderes(fcNR_PASTA)
   local laPUT    := {''} ,;
         laRES    := {} as array

   local laPUTV:= {} ,;
         laFIELD:={} ,;
         laDEF := {} ,;
         laATI := {} ,;
         laINA := {} ,;
         laAUX := {} ,;
         laPUTE:= {} as array

   local liPOS    := 0 ,;
         jj       := 0 ,;
         ii       := 0 as int

   laFIELD := structtable(WSet("DB_ACTIVE"),'pasta_tipo_poderes',1,'A')
   liPOS   := ascan(laFIELD,'FL_ATIVO')
   
   if liPOS<>0
      laFIELD:={'TP_PODER','FL_ATIVO'}
     else
      laFIELD:={'TP_PODER'}
   endif

   if db_select(laFIELD,'pasta_tipo_poderes',,{'NR_PASTA='+fcNR_PASTA}) == -1
      error_sys(db_error())
   endif
   laRES := db_fetchall()

   for jj := 2 to len(laRES)
       if liPOS<>0
          if laRES[jj,2] == 'D'
             aadd(laDEF,laRES[jj,1])
           elseif laRES[jj,2] == 'I'
             aadd(laINA,laRES[jj,1])
           else
             aadd(laATI,laRES[jj,1])
          endif
       else
          aadd(laATI,laRES[jj,1])
       endif
   next jj

   if len(laDEF) == 0
      if faCOMBOS[ii,3] == 'Y'  // Adiciona uma linha vazia no inicio do combo, caso seja solicitado
         aadd(laDEF,'')
      endif
   endif

   for jj=1 to len(laDEF)
       aadd(laPUT,laDEF[jj])
       aadd(laPUTV,laDEF[jj])
   next jj

   for jj=1 to len(laATI)
       aadd(laPUT,laATI[jj])
       aadd(laPUTV,laATI[jj])
   next jj

   for jj=1 to len(laINA)
       aadd(laPUTV,laINA[jj])
       aadd(laPUT,'INATIVO - '+laINA[jj])
   next jj

   WPut('TP_PODER'+'.option',laPUT)
   WPut('TP_PODER'+'.optionvalue',laPUTV)

return (nil)

/*
* Function....: cmb_empresa()
* Retorno.....: Nenhum
*/
static function cmb_empresa()

local laRES      := {} as array

local  laDEF    := {} ,;
       laDEFV   := {} ,;
       laATI    := {} ,;
       laATIV   := {} ,;
       laPUT    := {} ,;
       laPUTV   := {} as array

local  jj    := 1  as int

local lcQUERY :='' as string


laDEF := {}
laDEFV:= {}

laATI := {}
laATIV:= {}

laPUT := {}
laPUTV:= {}

lcQUERY  ='select'
lcQUERY +=' distinct usrxgrp.WUID,'
lcQUERY +=' usrxgrp.CIP_EMPRESA,'
lcQUERY +=' pfpj_empresa.PFPJ as EMPRESA'

lcQUERY +=' from usrxgrp'

lcQUERY +=' left join pfpj_empresa on pfpj_empresa.CIP = usrxgrp.CIP_EMPRESA'
lcQUERY +=' left join acuser on acuser.wuid = usrxgrp.WUID'

lcQUERY +=" where acuser.login="+DLAP+gcLOGIN+DLAP

lcQUERY +=' order by pfpj_empresa.PFPJ'

if db_query(lcQUERY) == -1
   error_sys(db_error())
endif
laRES := db_fetchall()

if len(laRES)>1

   for jj := 2 to len(laRES)
       aadd(laATI,laRES[jj,3])
       aadd(laATIV,laRES[jj,2])
   next jj

   aadd(laDEF,'') // Adiciona uma linha vazia no inicio do combo
   aadd(laDEFV,'0')

   for jj=1 to len(laDEF)
       aadd(laPUT,laDEF[jj])
       aadd(laPUTV,laDEFV[jj])
   next jj

   for jj=1 to len(laATI)
       aadd(laPUT,laATI[jj])
       aadd(laPUTV,laATIV[jj])
   next jj

   WPut('EMPRESA.option',laPUT)
   WPut('EMPRESA.optionvalue',laPUTV)

endif


return(nil)



/*
* Function....: cmb_plataforma(fcTP_PASTA)
* Retorno.....: Nenhum
*/
static function cmb_plataforma(fcTP_PASTA)

local  laOPT    := {} ,;
       laOPTV   := {} ,;
       laPUT    := {} ,;
       laDEF    := {} ,;
       laDEFV   := {} ,;
       laATI    := {} ,;
       laATIV   := {} ,;
       laINA    := {} ,;
       laINAV   := {} ,;
       laPUTV   := {} ,;
       laRES    := {} as array

local lcQUERY :='' as string


local  jj    := 1  as int


laDEF := {}
laDEFV:= {}

laATI := {}
laATIV:= {}

laINA := {}
laINAV:= {}

laPUT := {}
laPUTV:= {}

lcQUERY  ='select'
lcQUERY +=' ID_PLATAFORMA,'
lcQUERY +=' DESC_PLATAFORMA,'
lcQUERY +=' FL_ATIVO'
lcQUERY +=' from plataforma'
lcQUERY +=' where TP_PASTA='+DLAP+fcTP_PASTA+DLAP

if pcCONTXGRP=='S'
   lcQUERY +=' and ID_PLATAFORMA in (select distinct usrxgrp.id_plataforma from usrxgrp where usrxgrp.wuid='+str(pnWUID)+')'
endif

lcQUERY +=' order by DESC_PLATAFORMA'

if db_query(lcQUERY) == -1
   error_sys(db_error())
endif
laRES := db_fetchall()


for jj := 2 to len(laRES)
    if laRES[jj,3] == 'D'
       aadd(laDEF,laRES[jj,2])
       aadd(laDEFV,laRES[jj,1])

     elseif laRES[jj,3] == 'I'
       aadd(laINA,laRES[jj,2])
       aadd(laINAV,laRES[jj,1])

     else
       aadd(laATI,laRES[jj,2])
       aadd(laATIV,laRES[jj,1])
    endif
next jj

if len(laDEF) == 0
   aadd(laDEF,'') // Adiciona uma linha vazia no inicio do combo, caso seja solicitado
   aadd(laDEFV,'0')
endif

for jj=1 to len(laDEF)
    aadd(laPUT,laDEF[jj])
    aadd(laPUTV,laDEFV[jj])
next jj

for jj=1 to len(laATI)
    aadd(laPUT,laATI[jj])
    aadd(laPUTV,laATIV[jj])
next jj

for jj=1 to len(laINA)
    aadd(laPUT,'INATIVO - '+laINA[jj])
    aadd(laPUTV,laINAV[jj])
next jj


WPut('DESC_PLATAFORMA.option',laPUT)
WPut('DESC_PLATAFORMA.optionvalue',laPUTV)

return(nil)


/*
* Function....: cmb_margem(fcTP_PASTA)
* Retorno.....: Nenhum
*/
static function cmb_margem(fcTP_PASTA)

local lcWHERE:=''
local laRES:={}
local laLST_NOVA:={}
local laVINCULADO:={}

local paAUTO     :={} as array



local  laOPT    := {} ,;
       laOPTV   := {} ,;
       laPUT    := {} ,;
       laDEF    := {} ,;
       laDEFV   := {} ,;
       laDEFV2  := {} ,;
       laATI    := {} ,;
       laATIV   := {} ,;
       laATIV2  := {} ,;
       laINA    := {} ,;
       laINAV   := {} ,;
       laINAV2  := {} ,;
       laPUTV   := {} ,;
       laPUTV2  := {} ,;
       laFIELD  := {} as array


local  jj    := 1  as int


laDEF  := {}
laDEFV := {}
laDEFV2:= {}

laATI  := {}
laATIV := {}
laATIV2:= {}

laINA  := {}
laINAV := {}
laINAV2:= {}

laPUT  := {}
laPUTV := {}
laPUTV2:= {}

laFIELD:={'ID_MARGEM','MARGEM','FL_ATIVO','FL_APROVACAO'}

if db_select(laFIELD,'margem',,{'TP_PASTA='+DLAP+fcTP_PASTA+DLAP},{'MARGEM'}) == -1
   error_sys(db_error())
endif
laRES := db_fetchall()



for jj := 2 to len(laRES)
    if laRES[jj,3] == 'D'
       aadd(laDEF,laRES[jj,2]) //TEXTO
       aadd(laDEFV,laRES[jj,1]) //ID
       aadd(laDEFV2,laRES[jj,4]) //TEXTO

     elseif laRES[jj,3] == 'I'
       aadd(laINA,laRES[jj,2])  //TEXTO
       aadd(laINAV,laRES[jj,1]) //ID
       aadd(laINAV2,laRES[jj,4]) //TEXTO

     else
       aadd(laATI,laRES[jj,2])  //TEXTO
       aadd(laATIV,laRES[jj,1]) //ID
       aadd(laATIV2,laRES[jj,4]) //TEXTO
    endif

next jj

if len(laDEF) == 0 // Adiciona uma linha vazia no inicio do combo, caso seja solicitado
   aadd(laDEF,'')   //TEXTO
   aadd(laDEFV,'0') //ID
   aadd(laDEFV2,'') //TEXTO
endif

for jj=1 to len(laDEF)
    aadd(laPUT,laDEF[jj]) //TEXTO
    aadd(laPUTV,laDEFV[jj]) //ID
    aadd(laPUTV2,laDEFV2[jj]) //TEXTO
next jj

for jj=1 to len(laATI)
    aadd(laPUT,laATI[jj]) //TEXTO
    aadd(laPUTV,laATIV[jj]) //ID
    aadd(laPUTV2,laATIV2[jj]) //TEXTO
next jj

for jj=1 to len(laINA)
    aadd(laPUT,'INATIVO - '+laINA[jj]) //TEXTO
    aadd(laPUTV,laINAV[jj])  //ID
    aadd(laPUTV2,laINAV2[jj]) //TEXTO
next jj



WPut('MARGEM'+'.option',laPUT)
WPut('MARGEM'+'.optionvalue',laPUTV)

WPut('MARGEM_APRO'+'.option',laPUTV2)
WPut('MARGEM_APRO'+'.optionvalue',laPUTV)

return(nil)

*****************************************
static function contporgrp()
*****************************************

local lcQUERY :='' as string
local laRESULT:={} as array

lcQUERY  ='select distinct'
lcQUERY +=' usrxgrp.WUID,'
lcQUERY +=' acuser.login'
lcQUERY +=' from usrxgrp'
lcQUERY +=' left join acuser on acuser.wuid = usrxgrp.WUID'
lcQUERY +=' where acuser.login='+DLAP+gcLOGIN+DLAP

if db_query(lcQUERY) == -1
   error_sys(db_error())
endif
laRESULT := db_fetchall()

if len(laRESULT)>1
   WPut('ifSEMGRUPO',.f.)
   WPut('ifCOMGRUPO',.t.)
   WPut('WUID',laRESULT[2,1])
   pnWUID:=laRESULT[2,1]
   pcCONTXGRP:='S'
else
   WPut('ifSEMGRUPO',.t.)
   WPut('ifCOMGRUPO',.f.)
   WPut('WUID',0)
   pnWUID:=0
   pcCONTXGRP:='N'
endif

return(nil)

/*
* Data......: 02/07/2015 13:13:13 - Rufino
* Function..: nmkgedico(fcWTABLE,fcNR_PASTA)
* Objetivo..: Verificar a existencia de configurções GED para uma determinada tabela e criar o link para o ícone do GED
* Parâmetros:
* fcWTABLE: Nome da tabela
* fcNR_PASTA: Numero da pasta
* Retorno...: Nenhum
*/
function nmkgedico(fcWTABLE,fcNR_PASTA)
   local lcPARAMS  := '' ,;
         lcHTML    := '' ,;
         lcCONTENT := '' as string

   local laFIELDS := {} ,;
         laRESULT := {} as array

   local ii := 0 as int

   wput('GED_ICO','')

   if valtype(fcWTABLE) == 'U' .or. empty(fcWTABLE)
      puterror('nmkgedico: Tabela não definida')
      return(nil)
   endif

   laFIELDS := {'WTABLE','CD_BUSINESS','WFIELD1','WFIELD2','WFIELD3','WFIELD4','WFIELD5'}
   if db_select(laFIELDS,'gdrelacionamento',,{'WTABLE='+DLAP+fcWTABLE+DLAP}) == -1
      puterror('nmkgedico: ('+alltrim(str(procline()))+') '+db_error())
      return(nil)
   endif
   laRESULT := db_fetchrow()
   if len(laRESULT) > 0
      if !empty(laRESULT[2]) .and. !empty(laRESULT[3])
         lcPARAMS += 'WTABLE='+fcWTABLE
         lcPARAMS += '&CD_BUSINESS='+alltrim(laRESULT[2])
         for ii := 1 to 5
             if !empty(laRESULT[ascan(laFIELDS,'WFIELD'+alltrim(str(ii)))])
                lcCONTENT := alltrim(getwput(laRESULT[ascan(laFIELDS,'WFIELD'+alltrim(str(ii)))],'C')) // Recupera dados da UI
                if !empty(lcCONTENT)
                   lcPARAMS += '&WFIELD'+alltrim(str(ii))+'='+lcCONTENT
                else
                   lcPARAMS += '&WFIELD'+alltrim(str(ii))+'=RELATIONEMPTY.'+laRESULT[ascan(laFIELDS,'WFIELD'+alltrim(str(ii)))]
                endif
             endif
         next ii

         lcPARAMS := wic_action('wicaction_workflow/ged.mgr.html')+'?'+lcPARAMS

         lcHTML += '<style>'+CRLF
         lcHTML += '   div.prin {'+CRLF
         lcHTML += '      position: fixed;'+CRLF
         lcHTML += '      border:0px solid #000000;'+CRLF
         lcHTML += '      right: 8px;'+CRLF
         lcHTML += '      z-index: 1000;'+CRLF
         lcHTML += '      }'+CRLF
         lcHTML += '</style>'+CRLF

         lcHTML += '<style>'+CRLF
         lcHTML += '   div.btged {'+CRLF
         lcHTML += '      cursor:pointer;'+CRLF
         lcHTML += '      background-image:url('+WSet('PATH_COMPONENTS')+'/btged.gif);'+CRLF
         lcHTML += '      background-repeat:none;'+CRLF
         lcHTML += '      border:0px solid #000000;'+CRLF
         lcHTML += '      width:66px;'+CRLF
         lcHTML += '      height:62px;'+CRLF
         lcHTML += '      }'+CRLF
         lcHTML += '</style>'+CRLF

         lcHTML += '<style>'+CRLF
         lcHTML += '  #divged {'+CRLF
         lcHTML += '     overflow:hidden;'+CRLF
         lcHTML += '     position: fixed;'+CRLF
         lcHTML += '     width: 890px;'+CRLF
         lcHTML += '     height: 500px;'+CRLF
         lcHTML += '     top: 10%;'+CRLF
         lcHTML += '     left: 9%;'+CRLF
         lcHTML += '     background-color: #FFFFFF;'+CRLF
         lcHTML += '     border:1px solid #000000;'+CRLF
         lcHTML += '     visibility:hidden;'+CRLF
         lcHTML += '     z-index: 1000; '+CRLF
         lcHTML += ' }'+CRLF
         lcHTML += '</style>'+CRLF

         lcHTML += '<style>'+CRLF
         lcHTML += '   #totged {'+CRLF
         lcHTML += '      position:fixed;'+CRLF
         lcHTML += '      border:0px solid #000000;'+CRLF
         lcHTML += '      width:33px;'+CRLF
         lcHTML += '      height:20px;'+CRLF
         lcHTML += '      text-align:right;'+CRLF
         lcHTML += '      margin-left: 28px;'+CRLF
         lcHTML += '      margin-top: 40px;'+CRLF
         lcHTML += '      z-index: 1000;'+CRLF
         lcHTML += '      }'+CRLF
         lcHTML += '</style>'+CRLF


         lcHTML += '<script language="javascript">'+CRLF

         lcHTML += '   /*'+CRLF
         lcHTML += '   * function wingedn()'+CRLF
         lcHTML += '   * Abre iframe com programa de visualização de Documentos'+CRLF
         lcHTML += '   * Parametros:'+CRLF
         lcHTML += '   * wACTION - open | close -> Abre/fecha iframe.'+CRLF
         lcHTML += '   */'+CRLF


         lcHTML += '   function wingedn(wACTION,wURL,objevent) {'+CRLF

         lcHTML += '      if (wACTION == '+DLAP+'open'+DLAP+') {'+CRLF
         lcHTML += '         document.getElementById('+DLAP+'divged'+DLAP+').style.visibility = '+DLAP+'visible'+DLAP+';'+CRLF
         lcHTML += '         parent.iframeged.location.href = '+DLAP+lcPARAMS+DLAP+';'+CRLF
         lcHTML += '      }'+CRLF
         lcHTML += '      else {'+CRLF
         lcHTML += '         document.getElementById('+DLAP+'divged'+DLAP+').style.visibility = '+DLAP+'hidden'+DLAP+';'+CRLF
         lcHTML += '         parent.iframeged.location.href = '+DLAP+'about:blank'+DLAP+';'+CRLF
         lcHTML += '      }'+CRLF
         lcHTML += '   }'+CRLF
         lcHTML += '</script>'+CRLF

         lcHTML += '<div id="ICOG" class="prin">'+CRLF

         lcHTML += '   <div class="btged" title="Clique aqui caso queira inserir documentos no Ged." onclick="wingedn('+DLAP+'open'+DLAP+')">'+CRLF

  //       lcHTML += '      <div id="totged"><label>'+totged(fcNR_PASTA)+'</label></div>'+CRLF

         lcHTML += '   </div>'+CRLF

         lcHTML += '   <div id="divged">'+CRLF
         lcHTML += '      <div align="right" style="background-color:#408095;padding:2px;">'+CRLF
         lcHTML += '         <input type="button" style="background-color:#408095;font-family:Verdana, Arial, Helvetica, sans-serif; font-size:10;color:#FFFFFF; border:1px solid #FFFFFF; height:16px;" value="x" onclick="wingedn('+DLAP+'close'+DLAP+')">'


         lcHTML += '         <iframe name="iframeged" frameborder="0" width="100%" height="100%"></iframe>'+CRLF
         lcHTML += '     </div>'+CRLF
         lcHTML += '   </div>'+CRLF
         lcHTML += '</div>'+CRLF


      endif
      wput('GED_ICO',lcHTML) // Tag localizada na UI da aplicação - mnt.pasta.html
   endif
return(nil)

*****************************************
static function totged(fcNR_PASTA)
*****************************************
local laRESULT:={} as array

if db_select({'count(*)'},'ged',,{'wtable="pasta"','REFERENCIA1='+fcNR_PASTA}) == -1
   error_sys(db_error())
endif
laRESULT := db_fetchrow()
return(laRESULT[1])
//return(alltrim(str(laRESULT[1])))



/*
* Function..: ralert(fcMENS)
* Rufino  ..: 24/08/2015 15:59:43
* Objetivo..: Gera mensagens de alerta JAVASCRIPT.
* Parâmetros:
*   fcMENS..: Mensagem a ser exibida
* Retorno...: nenhum
*/
static function ralert(fcMENS)

   fcMENS := strtran(fcMENS,chr(10)+chr(13),'\n')
   fcMENS := strtran(fcMENS,chr(13)+chr(10),'\n')
   fcMENS := strtran(fcMENS,chr(10),'\n')
   fcMENS := strtran(fcMENS,chr(13),'\n')

   WOut('<!DOCTYPE html>'+;
        '<html>'+;
        '   <head>'+;
        '      <meta http-equiv="X-UA-Compatible" content="IE=9; IE=8; IE=7; IE=EDGE,chrome=1;">'+;
        '      <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">'+;
        '      <meta name="generator" content="Wictrix 0.1">'+;
        '      <script type="text/javascript">'+;
        '         window.onload = function () {'+;
        '         alert('+DLAP+fcMENS+DLAP+');'+;
        '         }'+;
        '      </script>'+;
        '  </head>'+;
        '  <body>'+;
        '  </body>'+;
        '</html>')
return

/*
* Function....: cmb_qtd_dias()
* Retorno.....: Nenhum
*/
* rufino 21/10/2015 16:27:39
static function cmb_qtd_dias()


   local laPUT    := {} ,;
         laRES    := {} as array

   local laPUTV:= {} ,;
         laFIELD:={} ,;
         laDEF := {} ,;
         laATI := {} ,;
         laINA := {} ,;
         laAUX := {} ,;
         laPUTE:= {} as array

   local liPOS    := 0 ,;
         jj       := 0 ,;
         ii       := 0 as int

   laFIELD := structtable(WSet("DB_ACTIVE"),'qtde_dias',1,'A')
   liPOS   := ascan(laFIELD,'FL_ATIVO')

   if liPOS<>0
      laFIELD:={'QTDE_DIAS','FL_ATIVO'}
     else
      laFIELD:={'QTDE_DIAS'}
   endif

   if db_select(laFIELD,'qtde_dias') == -1
      error_sys(db_error())
   endif
   laRES := db_fetchall()

   for jj := 2 to len(laRES)
       if liPOS<>0
          if laRES[jj,2] == 'D'
             aadd(laDEF,laRES[jj,1])
           elseif laRES[jj,2] == 'I'
             aadd(laINA,laRES[jj,1])
           else
             aadd(laATI,laRES[jj,1])
          endif
       else
          aadd(laATI,laRES[jj,1])
       endif
   next jj

   if len(laDEF) == 0
      aadd(laDEF,'')
   endif

   for jj=1 to len(laDEF)
       aadd(laPUT,alltrim(laDEF[jj]))
       aadd(laPUTV,alltrim(laDEF[jj]))
   next jj

   for jj=1 to len(laATI)
       aadd(laPUT,alltrim(laATI[jj]))
       aadd(laPUTV,alltrim(laATI[jj]))
   next jj

   for jj=1 to len(laINA)
       aadd(laPUT,'INATIVO - '+alltrim(laINA[jj]))
       aadd(laPUTV,alltrim(laINA[jj]))
   next jj

   WPut('QTDE_DIAS'+'.option',laPUT)
   WPut('QTDE_DIAS'+'.optionvalue',laPUTV)

return (nil)


****************************************
static function enchecombos(flcNR_PASTA)
****************************************


local  laOPT    := {} ,;
       laOPTV   := {} ,;
       laPUT    := {} ,;
       laDEF    := {} ,;
       laDEFV   := {} ,;
       laATI    := {} ,;
       laATIV   := {} ,;
       laINA    := {} ,;
       laINAV   := {} ,;
       laPUTV   := {} ,;
       laFIELD  := {} ,;
       laRES    := {} as array

local  ii    := 1  ,;
       liPOS := 0  as int

   lcTP_PASTA    := WGet('TP_PASTA','C')

   WPut('TIPO_VENDOR.option',{'','Contrato','Aditivo'})
   WPut('TIPO_VENDOR.optionvalue',{'','C','A'})

   WPut('RESPOSTA1.option',{'','Sim','Não'})
   WPut('RESPOSTA1.optionvalue',{'','S','N'})

   WPut('RESPOSTA2.option',{'','Sim','Não'})
   WPut('RESPOSTA2.optionvalue',{'','S','N'})

   WPut('RESPOSTA3.option',{'','Sim','Não'})
   WPut('RESPOSTA3.optionvalue',{'','S','N'})

   WPut('RESPOSTA4.option',{'','Sim','Não'})
   WPut('RESPOSTA4.optionvalue',{'','S','N'})

   WPut('RESPOSTA5.option',{'','Sim','Não'})
   WPut('RESPOSTA5.optionvalue',{'','S','N'})

   WPut('RESPOSTA6.option',{'','Sim','Não'})
   WPut('RESPOSTA6.optionvalue',{'','S','N'})

   WPut('RESPOSTA7.option',{'','Sim','Não'})
   WPut('RESPOSTA7.optionvalue',{'','S','N'})

   WPut('IMPACTO.option',{'','Alta','Media','Baixa'})
   WPut('IMPACTO.optionvalue',{'','Alta','Media','Baixa'})

   WPut('DIMENSAO.option',{'','Alta','Media','Baixa'})
   WPut('DIMENSAO.optionvalue',{'','Alta','Media','Baixa'})

   WPut('CRITICIDADE.option',{'','Alta','Media','Baixa'})
   WPut('CRITICIDADE.optionvalue',{'','Alta','Media','Baixa'})

   WPut('RESPOSTA7.option',{'','Sim','Não'})
   WPut('RESPOSTA7.optionvalue',{'','S','N'})
   
   WPut('FL_FCPA.option',{'','Sim','Não'})
   WPut('FL_FCPA.optionvalue',{'','S','N'})
   
   WPut('FL_SLA.option',{'','Sim','Não'})
   WPut('FL_SLA.optionvalue',{'','S','N'})
   
   WPut('FL_KPI.option',{'','Sim','Não'})
   WPut('FL_KPI.optionvalue',{'','S','N'})
   
   WPut('FL_ISSUE_TRACK.option',{'','Sim','Não'})
   WPut('FL_ISSUE_TRACK.optionvalue',{'','S','N'})  
   
   WPut('FL_ISQ.option',{'','Sim','Não'})
   WPut('FL_ISQ.optionvalue',{'','S','N'})
   
   WPut('FL_BCQ.option',{'','Sim','Não'})
   WPut('FL_BCQ.optionvalue',{'','S','N'})

   WPut('CONCLUSAO.option',{'','Key Vendor','Não Key Vendor'})
   WPut('CONCLUSAO.optionvalue',{'','K','N'})

   WPut('CLASS3.option',{'','Função Crítica','Valor Financeiro Alto','Informações Confidenciais','Impactos aos Clientes','Interesse de Órgão Regulador'})
   WPut('CLASS3.optionvalue',{'','Função Crítica','Valor Financeiro Alto','Informações Confidenciais','Impactos aos Clientes','Interesse de Órgão Regulador'})

   WPut('FL_RETROAGIU.option',{'','Sim','Não'})
   WPut('FL_RETROAGIU.optionvalue',{'','S','N'})

   WPut('DECL_PEP.option',{'','Sim','Não'})
   WPut('DECL_PEP.optionvalue',{'','S','N'})

   WPut('CRI_VEN.option',{'','Sim','Não'})
   WPut('CRI_VEN.optionvalue',{'','S','N'})

   WPut('RIS_RAT.option',{'','Low','Medium','High','Very High'})
   WPut('RIS_RAT.optionvalue',{'','L','M','H','V'})



             
   carrega_cbox({{'MOTIVO_VENDOR','motivo_vendor','Y'}})

   *** alimenta combo tipo de resultado_contrato
 
  carrega_cbox({{'RESULTADO_CONTRATO','resultado_contrato','Y','TP_PASTA='+DLAP+lcTP_PASTA+DLAP}})
  carrega_cbox({{'COMPLIANCE','compliance','Y','TP_PASTA='+DLAP+lcTP_PASTA+DLAP}})

   *** alimenta combo numero Aditivo

   laDEF := {}
   laDEFV:= {}

   laATI := {}
   laATIV:= {}

   laINA := {}
   laINAV:= {}

   laPUT := {}
   laPUTV:= {}

   laFIELD := structtable(WSet("DB_ACTIVE"),'pasta_contrato_aditivo',1,'A')
   liPOS   := ascan(laFIELD,'FL_ATIVO')

   if liPOS<>0
      laFIELD:={'NR_CONTRATO_ADITIVO','FL_ATIVO'}
     else
      laFIELD:={'NR_CONTRATO_ADITIVO'}
    endif

   if db_select(laFIELD,'pasta_contrato_aditivo',,{'NR_PASTA = '+ DLAP + flcNR_PASTA + DLAP},{'NR_CONTRATO_ADITIVO'}) == -1
      error_sys(db_error())
   endif
   laRES := db_fetchall()

   for jj := 2 to len(laRES)
       if liPOS<>0
          if laRES[jj,3] == 'D'
             aadd(laDEF,laRES[jj,2])
             aadd(laDEFV,laRES[jj,1])

           elseif laRES[jj,3] == 'I'
             aadd(laINA,laRES[jj,2])
             aadd(laINAV,laRES[jj,1])

           else
             aadd(laATI,laRES[jj,2])
             aadd(laATIV,laRES[jj,1])
          endif
       else
          aadd(laATI,laRES[jj,1])
          aadd(laATIV,laRES[jj,1])
       endif
   next jj

   if len(laDEF) == 0
      aadd(laDEF,'') // Adiciona uma linha vazia no inicio do combo, caso seja solicitado
      aadd(laDEFV,'0')
   endif

   for jj=1 to len(laDEF)
       aadd(laPUT,laDEF[jj])
       aadd(laPUTV,laDEFV[jj])
   next jj

   for jj=1 to len(laATI)
       aadd(laPUT,laATI[jj])
       aadd(laPUTV,laATIV[jj])
   next jj

   for jj=1 to len(laINA)
       aadd(laPUT,'INATIVO - '+laINA[jj])
       aadd(laPUTV,laINAV[jj])
   next jj


   WPut('NR_ADITIVO.option',laPUT)
   WPut('NR_ADITIVO.optionvalue',laPUTV)


return(nil)


***************************************************************
static function busca_lancto(fcNR_PASTA)
***************************************************************

local faRES    := {} as array
local laJOIN   := {} as array

local fcWHERE  := '' as string

local li      := 1  as int

local fafields := laFIELDS  :={'NR_PASTA',;
             'NR_CONTROLE',;
             'TIPO_VENDOR',;
             'NR_ADITIVO',;
             'RESPOSTA1',;
             'RESPOSTA2',;
             'RESPOSTA3',;
             'RESPOSTA4',;
             'RESPOSTA5',;
             'RESPOSTA6',;
             'RESPOSTA7',;
             'RESULTADO_CONTRATO',;
             'IMPACTO',;
             'DIMENSAO',;
             'CRITICIDADE',;
             'ESPECIFICAR4',;
             'ESPECIFICAR5',;
             'ESPECIFICAR6',;
             'ESPECIFICAR7',;
             'CIP_EMPRESA_GRUPO',;
             'MOTIVO_VENDOR',;
             'OBSERVACAO',;
             'FL_FCPA',;
             'FCPA_NR',;
             'FL_SLA',;
             'SLA_NR',;
             'FL_KPI',;
             'KPI_NR',;
             'FL_ISSUE_TRACK',;
             'ISSUE_TRACK_NR',;
             'FL_ISQ',;
             'FL_BCQ',;
             'CONCLUSAO',;
             'CLASS3',;
             'COMPLIANCE',;
             'DESC_KEY_VENDOR',;
             'CIP_EMP_PEP',;
             'DECL_PEP',;
             'CRI_VEN',;
             'RIS_RAT',;
             'DT_ASSINATURA2',;
             'FL_RETROAGIU',;
             'DT_ISQ',;
             'DT_BCQ',;
             'CLASS2',;
             'DT_PIA'}

        
fcWHERE := 'pasta_vendor.NR_PASTA = '+ DLAP + fcNR_PASTA + DLAP

aadd(faFIELDS,'pasta_vendor.DT_CADASTRO')
aadd(faFIELDS,'pasta_vendor.LOGIN_CADASTRO')
aadd(faFIELDS,'pasta_vendor.DT_ALTERACAO')
aadd(faFIELDS,'pasta_vendor.LOGIN_ALTERACAO')
aadd(faFIELDS,'pfpj.PFPJ')
aadd(faFIELDS,'pfpj2.PFPJ as PFPJ2')

faFIELDS[2]:='pasta_vendor.NR_PASTA'


laJOIN:={}
aadd(laJOIN,{2,'pfpj','pfpj.CIP=pasta_vendor.CIP_EMPRESA_GRUPO'})
aadd(laJOIN,{2,'pfpj pfpj2','pfpj2.CIP=pasta_vendor.CIP_EMP_PEP'})

if db_select(faFIELDS,'pasta_vendor',laJOIN,{fcWHERE}) == -1
   error_sys(db_error())
endif
faRES:= db_fetchall()

if len(faRES) > 1
   for li:=1 to len(faFIELDS)
       ***se o nome da culuna for o mesmo do campo
       if faFIELDS[li] == faRES[1,li]
          wput(faFIELDS[li],faRES[2,li])
       endif
   next li
endif

if len(fares) > 1

   wput('CIP_EMPRESA_GRUPO_PFPJ',faRES[2,db_fetchncol(faRES,'PFPJ')])
   wput('RESKEYVENDOR',faRES[2,db_fetchncol(faRES,'DESC_KEY_VENDOR')])

   wput('CIP_EMP_PEP_PFPJ',faRES[2,db_fetchncol(faRES,'PFPJ2')])
   
endif

return









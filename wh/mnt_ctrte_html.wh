/*

Project      : gr5
Program      : mnt.ctrte.html
Function     : mnt_ctrte_html
Created on   : 02-May-2003   14:17:52
Descripition : Cadastro de Contratante

*/

   local lcCONTRATANTE  := '' ,;
         lcCNPJ_CPF     := '' ,;
         lcVALIDA       := '' ,;
         lcACTION       := '' ,;
         lcTABLE        := '' ,;
         lcWHERE        := '' ,;
         lcFILTER_FIELD := '' ,;
         lcFILTER_VALUE := '' ,;
         lcORDER_FIELD  := '' as string

   local ii           := 0 ,;
         lnNR_ROWINI  := 0 ,;
         lnNR_ROWFIN  := 0 ,;
         lnNR_ROWPREV := 0 ,;
         lnNR_ROWNEXT := 0 as int

   local laRES      := {} ,;
         laFIELDLST := {} ,;
         laLABELLST := {} ,;
         laSAVE     := {} ,;
         laSAVE_AUX := {} ,; 
         laWHERE    := {} ,;
         laORDERBY  := {} ,;
         laLIMIT    := {} as array

   local llERRO := .F. as logical

   lcACTION       := upper(WGet('ACTION','C'))
   lcCONTRATANTE  := WGet('CONTRATANTE','C')
   lcFILTER_FIELD := WGet('FILTER_FIELD','C')
   lcFILTER_VALUE := WGet('FILTER_CONTENT','C')
   lcORDER_FIELD  := WGet('ORDER_FIELD','C')
   lnNR_ROWINI    := WGet('NR_ROWINI','N')
   lnNR_ROWFIN    := WGet('NR_ROWFIN','N')
   lnNR_ROWPREV   := WGet('NR_ROWPREV','N')
   lnNR_ROWNEXT   := WGet('NR_ROWNEXT','N')

   if lnNR_ROWPREV = 0
      lnNR_ROWPREV := 50
   endif
   if lnNR_ROWNEXT = 0
      lnNR_ROWNEXT := 50
   endif

   lcTABLE    := 'contratante'
   lcWHERE    := 'CONTRATANTE='+DLAP+lcCONTRATANTE+DLAP
   laFIELDLST := astruct2col(WSet("DB_ACTIVE"),lcTABLE,1,'A')
   laLABELLST := astruct2col(WSet("DB_ACTIVE"),lcTABLE,11,'A')

   laVALIDA := {{'CONTRATANTE',laLABELLST[ascan(laFIELDLST,'CONTRATANTE')]}}

   wPut('TITLE','Manutenção e Listagem de Contratados')
   wPut('FILTER_FIELD',laLABELLST[ascan(laFIELDLST,'CONTRATANTE')])
   wPut('ORDER_FIELD',laLABELLST[ascan(laFIELDLST,'CONTRATANTE')])
   wPut('UF_OPT',uf())

   if empty(lcORDER_FIELD)
      lcORDER_FIELD := laLABELLST[1]
   endif
   
   if lcACTION = 'ALTER' .and. gbWAC_READ
      if db_select(laFIELDLST,lcTABLE,,{lcWHERE}) == -1
         error_sys(db_error())
      endif
      laRES := db_fetchrow()
      for ii := 1 to len(laFIELDLST)
         wPut(laFIELDLST[ii],laRES[ii])
      next ii
     wPut('TITLE','Alteração do cadastro de Contratantes')
   elseif lcACTION = 'SAVE' .and. gbWAC_WRITE
      /* Validação de CNPJ/CPF */
      lcCNPJ_CPF   := alltrim(WGet('CNPJ_CPF','C'))
      if len(lcCNPJ_CPF) > 0
         if ! chk_CNPJCPF(lcCNPJ_CPF)
            if Len(lcCNPJ_CPF) = 14
               wPut('ERROR_MENS','Número de CNPJ Inválido!')
            elseif Len(lcCNPJ_CPF) = 11
               wPut('ERROR_MENS','Número de CPF Inválido!')
            else
               wPut('ERROR_MENS','Número informado não é um CNPJ ou CPF!')
            endif
            get2Put()
            llERRO:= .T.
         endif
      endif

      /* Validação dos campos */
      for ii := 1 to len(laVALIDA)
          lcVALIDA := alltrim(WGet(laVALIDA[ii,1],'C'))
          if len(lcVALIDA) = 0
             wPut('ERROR_MENS',laVALIDA[ii,2]+' é um campo obrigatório!')
             get2Put()
             llERRO:= .T.
          endif
      next ii
      if ! llERRO
         aadd(laSAVE,laFIELDLST)
         for ii := 1 to len(laFIELDLST)
            aadd(laSAVE_AUX,WGet (laFIELDLST[ii]))
         next ii
         aadd(laSAVE,laSAVE_AUX)
         if db_replace(laSAVE,lcTABLE,{lcWHERE}) == -1
            error_sys(db_error())
         endif
      endif
   elseif lcACTION = 'DELETE' .and. gbWAC_DELETE
      if db_delete(lcTABLE,lcWHERE) == -1
         error_sys(db_error())
      endif
   endif

   if WGet('FIND.X','B')
      lnNR_ROWINI := 0
      lnNR_ROWFIN := 0
   endif

   if ! empty(lcFILTER_VALUE)
      aadd(laWHERE,laFIELDLST[ascan(laLABELLST, lcFILTER_FIELD)]+' like '+DLAP+'%'+lcFILTER_VALUE+'%'+DLAP)
   endif
   aadd(laORDERBY,laFIELDLST[ascan(laLABELLST, lcORDER_FIELD)])

   if WGet('LSTPREV','B') .or. WGet('LSTPREV.X','B')
      if lnNR_ROWINI-lnNR_ROWPREV > 0
         aadd(laLIMIT,lnNR_ROWINI-lnNR_ROWPREV)
         aadd(laLIMIT,lnNR_ROWPREV)
         lnNR_ROWINI := lnNR_ROWINI-lnNR_ROWPREV
      else
         aadd(laLIMIT,lnNR_ROWPREV)
         lnNR_ROWINI := 0
      endif
   elseif WGet('LSTNEXT','B') .or. WGet('LSTNEXT.X','B')
      aadd(laLIMIT,lnNR_ROWFIN)
      aadd(laLIMIT,lnNR_ROWNEXT)
      lnNR_ROWINI := lnNR_ROWFIN
   else
      aadd(laLIMIT,lnNR_ROWNEXT)
      lnNR_ROWINI := 0
   endif
   if db_select(laFIELDLST,lcTABLE,,laWHERE,laORDERBY,,,laLIMIT) = -1
      error_sys(db_error())
   endif
   laRES := db_fetchall()
   wPut('lstCONTRATANTE',laRES)
     
   lnNR_ROWFIN := lnNR_ROWINI+len(laRES)-1
   wPut('FILTER_FIELD_OPT',laLABELLST)
   wPut('FILTER_FIELD',lcFILTER_FIELD)
   wPut('FILTER_CONTENT',lcFILTER_VALUE)
   wPut('ORDER_FIELD_OPT',laLABELLST)
   wPut('ORDER_FIELD',lcORDER_FIELD)
   wPut('NR_ROWINI',alltrim(str(lnNR_ROWINI)))
   wPut('NR_ROWFIN',alltrim(str(lnNR_ROWFIN)))
   wPut('NR_ROWPREV',alltrim(str(lnNR_ROWPREV)))
   wPut('NR_ROWNEXT',alltrim(str(lnNR_ROWNEXT)))
return


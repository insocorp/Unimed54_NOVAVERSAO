/*

Project      : gr5
Program      : mnt.tp.andamento.html
Function     : mnt_tp_andamento_html
Created on   : 21-Oct-2004   18:16:44
Descripition :

*/

    local lcTable         := 'andamento_tipo' as String

    local laFIELDS        := {'TP_PASTA',;
                              'FL_ATIVO',;
                              'TP_ANDAMENTO',;
                              'FL_VINCULO_OBRIGATORIO',;
                              'INDICADORES'} as Array
    local laSAVE          := {},;
          laSAVE_AUX      := {} as Array

    local laJoin          := {{2,'pasta_config','pasta_config.TP_PASTA = andamento_tipo,TP_PASTA'}}

    local laOPT           := {},;
          laOPTVAL        := {} as Array

    local lcAction        := Upper(WGet('ACTION')) as String
    local lcWhere         := '' as String

    local ii              := 0 as Int

    local llErro          := .F.


    // Carga dos combos

    // Tipo de pasta

    laOPT := loadcboxorder_build('pasta_config','TP_PASTA',.T.,{'TP_PASTA'})
    WPut('TP_PASTA.optionvalue',laOPT)
    WPut('TP_PASTA.option',laOPT)


    // Indicadores

//    laOPT    := {0,1,2,9}
//    laOPTVAL := {'','Start','Stop','Desconsiderar Cálculo'}
//    WPut('INDICADORES.optionvalue',laOPT)
//    WPut('INDICADORES.option',laOPTVAL)


    // Ativo

    laOPT    := {'S','I','D'}
    laOPTVAL := {'S','I','D'}
    WPut('FL_ATIVO.optionvalue',laOPT)
    WPut('FL_ATIVO.option',laOPTVAL)



    // Vincula Andamento

    WPut('FL_VINCULO_OBRIGATORIO_OPT','S')


    if lcACTION == 'ALTER'
       for ii := 1 to len(laFIELDS)
           WPut(laFIELDS[ii],WGet(laFIELDS[ii]))
       next ii

    elseif lcACTION == 'SAVE'

       if (Empty(Wget('TP_PASTA')))
           WAlert('O campo '+lblfscreen('TP_PASTA') + ' é de preenchimento obrigatório')
           llErro := .T.
       endif

       if (Empty(Wget('TP_ANDAMENTO')))
           WAlert('O campo '+lblfscreen('TP_ANDAMENTO') + ' é de preenchimento obrigatório')
           llErro := .T.
       endif

       if ! llErro
          aadd(laSAVE,laFIELDS)
          for ii := 1 to len(laFIELDS)
              aadd(laSAVE_AUX,WGet(laFIELDS[ii]) )
          next ii
          aadd(laSAVE,laSAVE_AUX)

          lcWhere := 'TP_PASTA = ' + DLAP + Wget('TP_PASTA') + DLAP + ' and TP_ANDAMENTO = ' + DLAP + Wget('TP_ANDAMENTO') + DLAP

          if db_replace(laSAVE,'andamento_tipo',{lcWhere}) == -1
             error_sys(db_error())
          endif
       endif
    elseif lcACTION == 'DELETE'

          lcWhere := 'TP_PASTA = ' + DLAP + Wget('TP_PASTA') + DLAP + ' and TP_ANDAMENTO = ' + DLAP + Wget('TP_ANDAMENTO') + DLAP

          if db_delete('andamento_tipo',lcWhere) == -1
             error_sys(db_error())
          endif

    endif


//

//    debug2(laPASTA,,30)

//    WPut('TP_PASTA.optionvalue',laPASTA) // Carrega o combo com os tipos de pasta
//    WPut('TP_PASTA.option',laPASTA)

//    WPut('TP_ANDAMENTO','azsdasdasda')


    //      WPut(fcALVO + '.optionvalue',laOPT)
    //      WPut(fcALVO + '.option',laOPTVAL)


    //NovoCbox('DESC_PLATAFORMA','ID_PLATAFORMA','DESC_PLATAFORMA','plataforma','TP_PASTA='+DLAP+fcTP_PASTA+DLAP,'DESC_PLATAFORMA',{0,''})


    GridPaginada()


return

/*
* Glauber - 12/2014
*
* Function..: GridPaginada()
* Objetivo..: Monta a grid paginada com os dados.
* Parâmetros:
*
*
* Retorno...:
*
*
*
*/

Static Function GridPaginada()


    local lcTable         := 'andamento_tipo' as String

    local laRESULT        := {},;
          laPAGINAS       := {},;
          laLIMIT         := {}  as Array

    local lnCOUNT         := 0 as Int

    local laFIELDS        := {'TP_PASTA',;
                              'FL_ATIVO',;
                              'TP_ANDAMENTO',;
                              'FL_VINCULO_OBRIGATORIO',;
                              'INDICADORES'} as Array
    local laORDER         := {'TP_PASTA','TP_ANDAMENTO'}

    local laJoin          := {{2,'pasta_config','pasta_config.TP_PASTA = andamento_tipo,TP_PASTA'}} as Array

    local lcCODE          := '' as String

    local xx              := 0,;
          ii              := 0 as Int


    local pcFILTRO        := '' as String
    local lcWHERE         := '' as String
/*

WOUT('<b><br> Action:'+Wget('ACTION'))
for ii := 1 to len(laFIELDS)
    wout('<br><b>'+laFIELDS[ii] + ':')
    wout(transform(WGet(laFIELDS[ii])))
next ii
*/
    if Upper(Wget('ACTION')) == 'SEARCH'
       if ! Empty(WGet('TP_PASTA'))
          pcFILTRO := 'TP_PASTA = ' + DLAP + WGet('TP_PASTA') + DLAP
       endif

       if ! Empty(WGet('TP_ANDAMENTO'))
          pcFILTRO += iif(! Empty(pcFILTRO),' and ', '')
          pcFILTRO := 'TP_ANDAMENTO LIKE ' + DLAP + '%' +WGet('TP_ANDAMENTO') + '%' + DLAP
       endif
/*
       if ! Empty(WGet('FL_ATIVO'))
          pcFILTRO += iif(! Empty(pcFILTRO),' and ', '')
          pcFILTRO := 'FL_ATIVO = ' + DLAP + WGet('FL_ATIVO') + DLAP
       endif

       if ! Empty(WGet('FL_VINCULO_OBRIGATORIO'))
          pcFILTRO += iif(! Empty(pcFILTRO),' and ', '')
          pcFILTRO := 'FL_VINCULO_OBRIGATORIO= ' + DLAP + WGet('FL_VINCULO_OBRIGATORIO') + DLAP
       endif

       if ! WGet('INDICADORES') > 0
          pcFILTRO += iif(! Empty(pcFILTRO),' and ', '')
          pcFILTRO := 'INDICADORES = ' + DLAP + WGet('INDICADORES','C') + DLAP
       endif
*/

    endif


   // Rotina para executar paginação

   if db_select({'count(*)'},lcTable) == -1
      db_error()
   endif
   laRESULT  := db_fetchall()
   lnCOUNT   := laRESULT[2,1]
   if lnCOUNT > 0
      laPAGINAS := paginacao(lnCOUNT,'','','mnt.tp.andamento.html')
      laLIMIT   := param_fetch(laPAGINAS,'LIMIT')
      if empty(pcFILTRO)
          if db_select(laFIELDS,lcTABLE,,,laORDER,,,laLIMIT) == -1
            error_sys(db_error())
         endif
      else
          if db_select(laFIELDS,lcTABLE,,{pcFILTRO},laORDER,,,laLIMIT) == -1
             error_sys(db_error())
          endif
      endif
      laRESULT := db_fetchall()
      //Resumo da pesquisa
       lcCODE := alltrim(str(laLIMIT[1]+1))+'-'
       if ((len(laRESULT)-1) < (laLIMIT[2]-laLIMIT[1]))
          lcCODE += alltrim(str(len(laRESULT)-1))
       elseif param_fetch(laPAGINAS,'GOTO_PAGE') == param_fetch(laPAGINAS,'NR_PAGES') //lnNR_PAGES
          lcCODE += alltrim(str(lnCOUNT))
       else
          lcCODE += alltrim(str(laLIMIT[1]+param_fetch(laPAGINAS,'ROWS_PAGE')))
       endif
       lcCODE += ' de '+alltrim(str(lnCOUNT))
       if lnCOUNT > 1
          lcCODE := ' Resultados '+lcCODE+' registros'
       else
          lcCODE := ' Resultado '+lcCODE+' registro'
       endif
       wput('RESUME_RESULTSET',lcCODE)

      if len(laRESULT) > 0
         aadd(laRESULT[1],'(row)')
         for ii := 2 to len(laRESULT)
            aadd(laRESULT[ii],'(row)'+wic_action('wicaction/mnt.tp.andamento.html?ACTION=ALTER'+;
                                                 '&TP_PASTA='+laRESULT[ii,ascan(laRESULT[1],'TP_PASTA')] +;
                                                 '&FL_ATIVO='+laRESULT[ii,ascan(laRESULT[1],'FL_ATIVO')] +;
                                                 '&TP_ANDAMENTO='+laRESULT[ii,ascan(laRESULT[1],'TP_ANDAMENTO')] +;
                                                 '&FL_VINCULO_OBRIGATORIO='+laRESULT[ii,ascan(laRESULT[1],'FL_VINCULO_OBRIGATORIO')] +;
                                                 '&INDICADORES='+alltrim(laRESULT[ii,ascan(laRESULT[1],'INDICADORES')] )))
         next ii

         WPut('GRID_TP_ANDAMENTO',grid_create(laRESULT))
      endif
   endif
   
//   get2put()

return(nil)













/*

Project      : gr5
Program      : psab.seguro.html
Function     : psab_seguro_html
Created on   : 28-Sep-2004   16:32:16
Descripition :

*/

   local lcNR_PASTA := '' ,;
         lcTP_PASTA := '' ,;
         lcWHERE    := '' ,;
         lcACTION   := '' as string

   local laFIELDS    := {} ,;
         laPUT       := {} ,;
         laSAVE      := {} ,;
         laSAVE_AUX  := {} ,;
         laRES       := {} ,;
         laSAVE_HIST := {} as array

   local ii  := 0 ,;
         iiC := 0 as int

   local llERRO := .F. as logical

   lcNR_PASTA := wGet('NR_PASTA','C')
   if empty(lcNR_PASTA)
      error_sys('Pasta inexistente')
      return(.f.)
   endif
   lcNR_CONTROLE := wGet('NR_CONTROLE','C')
   if upper(lcNR_CONTROLE) == 'NEW'
      lcNR_CONTROLE := '0'
   endif
   lcACTION   := upper(wGet('ACTION','C'))
   lcTP_PASTA := wGet('TP_PASTA','C')
   wac_tp_pasta(lcTP_PASTA) // Função para verificação de permissões por pasta, encontra-se na func.wic
   lcWHERE    := 'NR_PASTA='+lcNR_PASTA+' and NR_CONTROLE='+DLAP+lcNR_CONTROLE+DLAP
   lcTABLE    := 'pasta_seguro'
   laFIELDS   := structtable(WSet("DB_ACTIVE"),lcTABLE,1,'A')
   // Glauber 06/01/2011
   AbasPerfil(lcTP_PASTA,laFIELDS)

   init_reqfield(WSet('_USER_INTERFACE'))

   carrega_cbox({{'tipo_apolice','TP_APOLICE','Y'},;
                 {'cossegurotipo','TP_COSSEGURO','Y'},;
                 {'status_apolice','FL_APOLICE','Y'}})

//    wPut('TITLE',lcTP_PASTA+' - Seguro')
   wPut('NR_CONTROLE','new')
   wPut('FL_COSSEGURO.option','Y')
   wPut('FL_RESSEGURO.option','Y')
   WPut('DT_CADASTRO',date())
   WPut('LOGIN_CADASTRO',gcLOGIN)
   WPut('DT_CADASTRO.readonly',.t.)
   WPut('DT_CADASTRO.class','winputreadonly')
   WPut('LOGIN_CADASTRO.readonly',.t.)
   WPut('LOGIN_CADASTRO.class','winputreadonly')

   if lcACTION == 'ALTER' .and. gbWAC_READ
      carrega_seguro(lcNR_PASTA,lcNR_CONTROLE)

   elseif lcACTION == 'SAVE' .and. gbWAC_WRITE
      if ! verif_reqfield(WSet('_USER_INTERFACE'))
         llERRO := .T.
      endif

//       for ii := 1 to len(laVALIDA)
//          if empty(alltrim(wGet(laVALIDA[ii,1],'C')))
//             walert(laVALIDA[ii,2]+' é um Campo Obrigatório!')
//             llERRO := .T.
//             get2Put()
//             exit
//          endif
//       next ii

      if ! llERRO
         aadd(laSAVE,laFIELDS)
         for ii := 1 to len(laFIELDS)
            aadd(laSAVE_AUX,wGet(laFIELDS[ii],wmd_wfieldtype(laFIELDS[ii])))
         next ii
         aadd(laSAVE,laSAVE_AUX)

         psab_logs(laSAVE,lcTABLE,lcWHERE,lcNR_PASTA,'Seguro sem Sinistro') //Gravar log de alterações da pasta

         if db_replace(laSAVE,lcTABLE,{lcWHERE}) == -1
            error_sys(db_error())
         endif
         if val(lcNR_CONTROLE) == 0
            lcNR_CONTROLE := alltrim(str(db_insert_id()))
         endif

         pst_mkpasta_filtro(lcNR_PASTA) // Alimenta campo pasta.pasta_filtro

         if WGet('LMI_VL','N') > 0 .or. WGet('LMI_VL_SINISTRADO','N') > 0
            laSAVE := {{'NR_PASTA','NR_CONTROLE','LMI_NR','LMI_VL','LMI_VL_SINISTRADO'}}
            aadd(laSAVE,{val(lcNR_PASTA),val(lcNR_CONTROLE),0,WGet('LMI_VL'),WGet('LMI_VL_SINISTRADO')})
            if db_insert(laSAVE,'pasta_seguro_lmi') == -1
               error_sys(db_error())
            endif
            carrega_seguro(lcNR_PASTA,lcNR_CONTROLE)
         endif
      endif
   elseif lcACTION == 'DELETE' .and. gbWAC_DELETE
      psab_logdel(lcNR_PASTA,'NR_CONTROLE',lcNR_CONTROLE,,'Seguro sem Sinistro')

      if db_delete('pasta_seguro_lmi',lcWHERE) == -1
         error_sys(db_error())
      endif
      if db_delete(lcTABLE,lcWHERE) == -1
         error_sys(db_error())
      endif

   elseif lcACTION == 'DELETE_LMI' .and. gbWAC_DELETE
      if db_delete('pasta_seguro_lmi','NR_PASTA='+lcNR_PASTA+' and NR_CONTROLE='+lcNR_CONTROLE+' and LMI_NR='+WGet('LMI_NR','C')) == -1
         error_sys(db_error())
      endif
      carrega_seguro(lcNR_PASTA,lcNR_CONTROLE)
   endif

   if db_select({'pasta_seguro.NR_CONTROLE',;
                 'pasta_seguro.CIP_SEGURADO',;
                 'pfpj.PFPJ'},;
                 lcTABLE,;
                 {{2,'pfpj','pfpj.CIP=pasta_seguro.CIP_SEGURADO'}},;
                 {'pasta_seguro.NR_PASTA='+lcNR_PASTA}) == -1
      error_sys(db_error())
   endif
   laRES := db_fetchall()
   if len(laRES) > 0
      aadd(laRES[1],'(row)')
      for ii := 2 to len(laRES)
         aadd(laRES[ii],'(row)'+wic_action('wicaction/psab.seguro.html?'+;
                                           'TP_PASTA='+lcTP_PASTA+;
                                           '&NR_PASTA='+lcNR_PASTA+;
                                           '&NR_CONTROLE='+str(laRES[ii, db_fetchncol(laRES,'NR_CONTROLE')])+;
                                           '&ACTION=ALTER'))
      next ii
      for ii := 1 to len(laRES)
         adel(laRES[ii],db_fetchncol(laRES,'NR_CONTROLE'))
         asize(laRES[ii],len(laRES[ii])-1)
      next ii
      wPut('SEGURO_GRID',grid_create(laRES))
   endif
   pasta_abas(lcTP_PASTA)
   make_psthead(lcNR_PASTA,wGet('TP_PASTA','C'))
return(nil)

static function carrega_seguro(fcNR_PASTA,fcNR_CONTROLE)
      local lcWHERE := '' ,;
            lcTABLE := '' as string
      local laFIELDS  := {} ,;
            laRES     := {} ,;
            laFOREIGN := {} ,;
            laPUT     := {} as array

      local xx := 0 ,;
            ii := 0 as int

      lcTABLE  := 'pasta_seguro'
      laFIELDS := structtable(WSet("DB_ACTIVE"),lcTABLE,1,'A')
      lcWHERE  := 'NR_PASTA='+fcNR_PASTA+' and NR_CONTROLE='+DLAP+fcNR_CONTROLE+DLAP

      if db_select(laFIELDS,lcTABLE,,{lcWHERE}) == -1
         error_sys(db_error())
      endif
      laRES := db_fetchall()

      if len(laRES) > 0
         db2Put(laRES)

         /* Carrega as Descrições dos campos CIP_* */
         for ii:= 1 to len(laFIELDS)
            if substr(laFIELDS[ii],1,4) == 'CIP_'
               aadd(laFOREIGN,laFIELDS[ii])
            endif
         next ii
         if len(laFOREIGN) > 0
            for ii:= 1 to len(laFOREIGN)
               if ! empty(laRES[2,ascan(laFIELDS,laFOREIGN[ii])])
                  if db_select({'PFPJ'},'pfpj',,;
                               {'CIP='+DLAP+laRES[2,ascan(laFIELDS,laFOREIGN[ii])]+DLAP,'CIP <> '+DLAP+DLAP}) == -1
                     error_sys(db_error())
                  endif
                  laPUT := db_fetchrow()
                  if len(laPUT) > 0
                     WPut(laFOREIGN[ii]+'_PFPJ',laPUT[1])
                  endif
               endif
            next ii
         endif

         /* Carrega demais campos */
         laFOREIGN := {{'centrocusto',{'NM_CCUSTO'},'CD_CCUSTO='+DLAP+laRES[2,db_fetchncol(laRES,'CD_CCUSTO')]+DLAP},;
                       {'moeda',{'NM_MOEDA'},'CD_MOEDA='+str(laRES[2,db_fetchncol(laRES,'CD_MOEDA')])},;
                       {'ramosrsn',{'SEGURORAMO','SEGUROPRODUTO','SEGUROPROFIT'},'CD_RAMOSRSN='+DLAP+laRES[2,db_fetchncol(laRES,'CD_RAMOSRSN')]+DLAP}}

         for ii := 1 to len(laFOREIGN)
            if db_select(laFOREIGN[ii,2],laFOREIGN[ii,1],,{laFOREIGN[ii,3]}) == -1
               error_sys(db_error())
            endif
            laPUT := db_fetchrow()
            if  len(laPUT) > 0
              for xx := 1 to len(laPUT)
                 wPut(laFOREIGN[ii,2][xx],laPUT[xx])
              next xx
            endif
         next ii


         /* Carrega grid de valores LMI */
         if db_select({'LMI_NR','LMI_VL','LMI_VL_SINISTRADO'},'pasta_seguro_lmi',,{lcWHERE}) == -1
            error_sys(db_error())
         endif
         laRES := db_fetchall()
         WPut('lstLMI',laRES)
         amkgedico(lcTABLE,fcNR_PASTA)
      endif
return (nil)











